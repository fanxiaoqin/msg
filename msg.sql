/*
Navicat MySQL Data Transfer

Source Server         : 111
Source Server Version : 50544
Source Host           : 127.0.0.1:3306
Source Database       : msg

Target Server Type    : MYSQL
Target Server Version : 50544
File Encoding         : 65001

Date: 2017-06-23 15:26:21
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for administrator
-- ----------------------------
DROP TABLE IF EXISTS `administrator`;
CREATE TABLE `administrator` (
  `administratorid` int(11) NOT NULL AUTO_INCREMENT,
  `administrator` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `qx` varchar(255) NOT NULL,
  PRIMARY KEY (`administratorid`)
) ENGINE=InnoDB AUTO_INCREMENT=78 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of administrator
-- ----------------------------
INSERT INTO `administrator` VALUES ('1', '肖本谜', '13795997573', '2');
INSERT INTO `administrator` VALUES ('2', '刘丹', '13795995226', '1');
INSERT INTO `administrator` VALUES ('3', '樊小勤', '15228160330', '1');
INSERT INTO `administrator` VALUES ('77', '侯本玉', '13795995592', '1');

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `articleid` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `author` varchar(255) NOT NULL,
  `articlecontent` text NOT NULL,
  `hits` int(11) NOT NULL,
  `time` datetime NOT NULL,
  PRIMARY KEY (`articleid`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('1', '有激情', '小D', '要成为一名优秀的前端工程师，最重要的莫过于对自己做的事要有激情。我们技能都不是从学校中或者从研讨会上学来的，因此前端工程师必须具备自学能力。浏览器技术的变化可谓日新月异，所以也只有不断提升自己的技能才做得到与时俱进。我虽然不能强迫谁必须多看博客、不断学习，但想应聘前端工程师的人恐怕还是必须这么做的。\r\n\r\n你怎么知道谁对这种工作有没有激情?实际上非常简单。我只问一个简单的问题：“目前你对什么Web技术最感兴趣?”这个问题永远不会过期，而且也几乎不可能出错……除非你答不上来。就眼下来说，我希望你对这个问题给出的技术中包括WebSocket、HTML、WebGL、客户端数据库，等等。只有对Web开发充满激情的人，才会坚持不懈地学习新知识、掌握新技能；这些人才是我真正想要的。当然，我会让他们详细解释自己提到的技术，以保证他们不是随口说了几个时髦的新词汇。\r\n\r\n最后一点\r\n计算机科学或者Web设计方面的知识当然也有用，但那都是基本知识之外的东西。只要基本知识在那儿了，一切就都有了基础，想扩充知识面也不难。可是，如果等到正式上班以后，还得从头学习基本技能，那种难度是不可同日而语的。另外，高级前端工程师与一般工程师相比，肯定需要掌握更多的技能。而面试几乎没有经验大学毕业生，同样也会有一套完全不同的程序。我在这篇文章里列出来的都是一些最基本的东西。\r\n\r\n对于那些还没有多少面试经验的人，我总是喜欢告诉他们，面试完了只要问自己一个问题就行：你想以后跟这个人在一起共事吗?如果不管为什么，回答是不，那就是不。\r\n\r\n面试前端工程师对我来说是一件非常有意思的事，因为面试过程很大程度上也是自我提升的过程。无论大公司还是小公司，之所以在如何招聘到真正有能力的前端工程师方面会遇到同样的问题，就是因为负责招聘的那些人不知道自己公司需要什么样的人，结果问问题时也问不到点子上。经过这几年在行业里的摸索，我总结出了自己的一套很有效的面试前端工程的方法。\r\n\r\n有的应聘者说我不好对付，但留给他们这样的印象也并非我所愿。我觉得之所以他们说我不好对付，主要是因为我问他们问题时问得太细了。以前我曾专门写过一些东西，告诉应聘者怎么才能通过我的面试（Surviving an interview with me）以及优秀的前面工程师应该具备什么样的素质（What makes a good front end engineer?），而我的面试可以说完全是按照那两篇文章的标准进行的。我不会问一些特别偏门的问题，也不认为出几道逻辑题就能考出人的真实水平。我唯一的想法就是确定你能否胜任我们要招的这个职位。为此，我需要简单地考察如下几个方面。\r\n\r\n基本知识\r\n我们生活在互联网时代，你想知道的任何事情几乎都能在15分钟内找到相关信息。可是，能找到信息并不等于你会使用它。我认为所有前端工程师至少都应该掌握某些基本的知识，才能有效地完成自己的工作。如果一遇到问题，就停下工作上网四处搜索解决方案，怎么可能保证按期完成工作呢?听听，还有谁在说“我不知道，但我可以上网搜到。”请这些同学把手举起来，让大家认识一下（immediately raises a flag for me.）。下面我列出一些基本的知识点，这些都是我认为一名前端工程师（无论工作年头长短）在没有任何外来帮助的情况应该知道的。\r\n\r\nDOM结构——两个节点之间可能存在哪些关系以及如何在节点之间任意移动。\r\n\r\n\r\nDOM操作——怎样添加、移除、移动、复制、创建和查找节点。\r\n\r\n\r\n事件——怎样使用事件以及IE和DOM事件模型之间存在哪些主要差别。\r\n\r\n\r\nXMLHttpRequest——这是什么、怎样完整地执行一次GET请求、怎样检测错误。\r\n\r\n\r\n严格模式与混杂模式——如何触发这两种模式，区分它们有何意义。\r\n\r\n\r\n盒模型——外边距、内边距和边框之间的关系，IE 8以下版本的浏览器中的盒模型有什么不同。\r\n\r\n\r\n块级元素与行内元素——怎么用CSS控制它们、它们怎样影响周围的元素以及你觉得应该如何定义它们的样式。\r\n\r\n\r\n浮动元素——怎么使用它们、它们有什么问题以及怎么解决这些问题。\r\n\r\n\r\nHTML与XHTML——二者有什么区别，你觉得应该使用哪一个并说出理由。\r\n\r\n\r\nJSON——它是什么、为什么应该使用它、到底该怎么使用它，说出实现细节来。\r\n重申一下，上述这些知识点都应该是你应该“想都不用想”的东西。我一开始问的所有问题都是想摸清你对所有这些领域知识的掌握程度。虽然上面列出的这些知识点并没有面面俱到，但我觉得你至少应该掌握这些，才有可能跟我坐到一间办公室里来。\r\n\r\n少量提问\r\n我非常赞同面试者问的问题越少越好。反复问应聘者各种问题既不公平，也很无聊。我在任何一次面试中，通常只问三个大问题，但每个问题又会涉及我所能想到的多个方面。回答每个大问题一般要经过几个步骤，这样我就可以在每个步骤中穿插着问一些小问题。比如说：\r\n\r\n现在有一个正显示着Yahoo!股票价格的页面。页面上有一个按钮，你可以单击它来刷新价格，但不会重新加载页面。请你描述一下实现这个功能的过程，假设服务器会负责准备好正确的股票价格数据。\r\n\r\n这个问题牵扯到一组我想要考察的基本知识点：DOM结构、DOM操作、事件处理、XHR和JSON。如果我要求你对换一种处理股票价格的方式，或者让你在页面中显示其他信息，就可以把更多的知识点包括进来。对于经验比较丰富应聘者，我也可以自如地扩展要考察的知识范围，最简单像JOSN与XML的区别、安全问题、容量问题，等等。\r\n\r\n我还希望应聘者给出的任何解决方案中都不要使用库。我想看到最原生态的代码，你就当页面中没有包含任何库。你说你对哪个库了解多少多少，但我不能把关于库的知识作为评判能力的因素，因为库是会随时间变化的。我需要的是真正理解库背后的机制，特别是能够徒手写出一个自己的库的人。\r\n\r\n解决问题\r\n做为一名前端工程师，最值得高兴的事莫过于解决同一个问题会有很多种不同的方法，而你要做的就是找出最合适的方法来。我在提问的时候，经常会在应聘者解释完一种方法后问他们还有没有第二种方法。此时我会跟他们说，假设你的这个方法由于种种原因被否决了，那么你还能不能给出另一种方法。这样做可以达到两个目的。\r\n\r\n首先，可以测试出他们是否在毫无意义地复述书本中的东西。不能不承认，某些人确实有过目不忘的天赋，听他们在那里滔滔不绝地讲，你会觉得他们什么都明白。可是，只要一跟这些人谈到怎么查找方案无效的原因，以及能否拿出一个新方案来，他们往往就傻眼了。这时候，如果我听到“我不明白这个方案为什么不够好”之类的反问，心里立刻就明白我的问题已经超出了他们的能力范围，而他们只是想拿自己死记硬背的结论来蒙混过关。\r\n\r\n其次，可以测试出他们已经掌握的（还是那句话，“想都不用想”）浏览器技术知识。如果他们对浏览器平台的核心知识有较好的理解，想出解决同一问题的不同方案根本没有那么难。\r\n\r\n对一名前端工程师来说，这绝对是最重要的能力。前端工程师在工作中遇到本该如此却并未如此的难题（说你啦，IE6），应该说是一件很平常的事。一个方案无效就无计可施的人，做不了前端工程师。\r\n\r\n考核应聘者解决问题能力的另一层原因，与我的个人喜好有关。在搞清楚应聘者知道什么不知道什么之后，我就会想着问一个他们知识领域之外的问题。这样做的目的，就是想看看他们怎样运用已有的知识解决新问题。在解决问题的每一步，我也准备了一些提示，以防有人会卡壳打艮（在我面前15分钟一言不发，对我评价这个人毫无帮助）。我真正感兴趣的，是他们能够从上一步前进到下一步。我希望看到一个人就在我眼前学到新知识。\r\n\r\n注意：所有问题都与浏览器技术相关。我不相信出几道抽象的逻辑题，就能够考出某人解决Web技术问题的能力。在我看来，这无异于让素描大师画肖像（或者让刘翔跟博尔特同场竞技），没有意义，也得不到任何有价值的信息。\r\n\r\n有激情\r\n要成为一名优秀的前端工程师，最重要的莫过于对自己做的事要有激情。我们技能都不是从学校中或者从研讨会上学来的，因此前端工程师必须具备自学能力。浏览器技术的变化可谓日新月异，所以也只有不断提升自己的技能才做得到与时俱进。我虽然不能强迫谁必须多看博客、不断学习，但想应聘前端工程师的人恐怕还是必须这么做的。\r\n\r\n你怎么知道谁对这种工作有没有激情?实际上非常简单。我只问一个简单的问题：“目前你对什么Web技术最感兴趣?”这个问题永远不会过期，而且也几乎不可能出错……除非你答不上来。就眼下来说，我希望你对这个问题给出的技术中包括WebSocket、HTML、WebGL、客户端数据库，等等。只有对Web开发充满激情的人，才会坚持不懈地学习新知识、掌握新技能；这些人才是我真正想要的。当然，我会让他们详细解释自己提到的技术，以保证他们不是随口说了几个时髦的新词汇。\r\n\r\n最后一点\r\n计算机科学或者Web设计方面的知识当然也有用，但那都是基本知识之外的东西。只要基本知识在那儿了，一切就都有了基础，想扩充知识面也不难。可是，如果等到正式上班以后，还得从头学习基本技能，那种难度是不可同日而语的。另外，高级前端工程师与一般工程师相比，肯定需要掌握更多的技能。而面试几乎没有经验大学毕业生，同样也会有一套完全不同的程序。我在这篇文章里列出来的都是一些最基本的东西。\r\n\r\n对于那些还没有多少面试经验的人，我总是喜欢告诉他们，面试完了只要问自己一个问题就行：你想以后跟这个人在一起共事吗?如果不管为什么，回答是不，那就是不。\r\n\r\n', '2', '2016-12-04 00:00:00');
INSERT INTO `article` VALUES ('2', '从春招到秋招，一个本科生的求职之路。', '西瓜橙子雨', '自报家门，北理工软件学院本科生。\n\n\n	主要部分： \n\n\n	1、毕业去向选择 \n\n\n	2、春招过程 \n\n\n	3、暑期实习 \n\n\n	4、秋招辛酸路程 \n\n\n	5、一点感悟 \n\n\n	 \n \n\n\n	1.毕业去向选择问题 \n\n\n	从大一开始，就决定毕业找工作，方向是有了，但是三年多过去了，到现在才发现，大学期间并没有为这个方向做出太大的努力，这也成为我一个本科生找工作的很大障碍，实践能力严重不足。我的情况是：我决定工作，但是由于高中的思维，太看重学习成绩，成绩搞的很好，虽然有保研资格，但是又不读研，找工作的时候，好的互联网公司不看成绩，看能力，所以大厂的笔面试都挂掉了。现在反思过后，给学弟学妹一点建议，如果你打算读研，搞好成绩保研是最轻松的。如果你想工作，多实践，多写项目，多去开源社区fork别人的项目，多动手，找到自己的兴趣所在，并深入研究。我的一个同学，毕业根本不需要找工作，很多公司来抢着要他，技术大牛！如果你想出国，英语方面多积累总是没错的，多说多记。 \n\n\n	2.春招过程 \n\n\n	因为有就业打算，暑期准备实习，所以大三下学期就去参加春招了，基本从3月份开始，各大厂就开始春招实习生了，但是由于没有经验，没有准备，吃了太多的亏：当时课程项目做网站，对web开发熟悉，于是网易就报了前端实习生，结果笔试直接就挂掉，考的全是html+css；腾讯笔试挂，编程题不会；阿里笔试挂，连题都看不懂；百度一面挂，基础知识太弱，问啥啥不会。给学弟学妹的建议：既然已经决定找暑期实习，那么就好好好准备春招，操作系统、计算机网络、数据库、算法和数据结构等基础知识一定要掌握扎实！有出色项目经验更好，但大部分本科生来说没有，所以面试官也更看重你的基础知识掌握程度。 另外在投递实习公司的时候，最好问清楚转正几率大不大；想好自己准备从事的行业，金融、教育、互联网、游戏等等，找到一份自己毕业准备从事的行业公司去实习，不然就像LZ一样，实习完才反应过来自己想喜欢游戏，然后秋招的时候发现不同岗位的实习经历也不会给你加太多分。 \n\n\n	3.暑期实习 \n\n\n	春招的尾巴拿到了华为的软件开发实习offer，7月初到本研所实习，入职时才发现被调剂了岗位，有点坑。实习期间很轻松，但是最后由于行业和方向不喜欢放弃了转正offer。两个月实习的收获：更加清楚了未来自己要从事什么行业，什么方向，你的职业规划，这对于一个毕业生来说十分重要！！因为全栈大神不是人人都能做到，公司需要专才，并且对自已的职业生涯有清楚认识的人。我是准备先从游戏c++客户端程序员干起，在项目中熟悉各个分工的任务内容和工作流程，积累经验，然后向项目、产品和管理方面发展。因为你一个刚毕业的本科生，啥也不会，怎么可能一去公司就去做管理，让你管人家你管的了吗，必须把一个项目的每个流程走几遍，熟悉了之后才行。所以学弟学妹一定要找准自己的位置，行业-》方向-》职位-》职业规划。之前参加几个偏国企的群面，很多人被问到你想从事哪个方向的开发，都因为太想得到offer说我做这个也行，做那个也行，实在不行做那个也行，看公司需要吧。我个人认为，如果你这样说公司把你招了，这种公司不去也罢，你未来能有什么成长和发展！ \n\n\n	4.秋招心酸路程 \n\n\n	好事多磨！好事多磨！好事多磨！\n\n\n	9月底从华为离职，然后放弃学校的保研名额，各位可以想象当时LZ是多么的自信和年轻，之后就是秋招开始了，各种宣讲会笔试面试蜂拥而来，各种撞车，各种一天来回跑，参加过秋招的同学应该都有体会，真的很过瘾！说下我的情况，我到10月下旬时，还是0offer。从最开始的自信满满，到笔试挂掉，面试挂掉，看到别人收offer，看到别人谈薪资，心态真的爆炸坏了，有时候晚上跑完宣讲会坐在回学校的公交车上，看着窗外繁华的夜景，过来过往的人群，很是迷茫和感伤。国庆期间我的心态爆炸到极点，书也看不进去，天天肝阴阳师，打屁股，都不想找工作了。但是我还是熬了过来，重新拾起信心，投身到新一波的跑宣讲会和笔面试中！这中间的心理变化和成长我觉得对我个人而言太宝贵了！然后这周开始，我陆续收到了一个游戏公司和一个半国企的两个offer，其中游戏公司的薪资远远超出我的预期，非常满意！爆炸满意！我在收到第一个offer的前一天，还奔波在各种笔面试之间！结合自己的经历，给学弟学妹的建议：好好准备编程题，因为如果是在线笔试，一般都是大公司，你不能AK的话3道至少也要AC两道吧，不然前边客观题答得再好，作为一个程序员不会写代码要你干嘛；项目经验一定要准备好，没有经验的话看看别人都是怎么准备项目的，之前看了牛客上一个情商爆炸的哥们的面试准备，那叫一个牛，项目的展开，如何引导面试官向自己擅长的方向提问等等，不服不行；另外如果编程能力确实不行的话，去跑宣讲会的线下笔试，一般会稍微简单一些（LZ的offer都是线下笔试）；多总结，每次笔面试后想一想遇到的问题你真的会了吗，不会赶紧补习，因为下一场真的会遇到一模一样的题目（LZ遇到好几次一样的题目，然后好几次不会，后来才每个都认真总结，复习）。 \n\n\n	5.一点感悟 \n\n\n	上面的经验是根据每个阶段反思后得出的，最后说一下总的思路（个人看法，辩证对待）： \n\n\n	1.赶紧找到自己的毕业去向，工作、读研、出国、公务员等 \n\n\n	 2. 如果是毕业准备工作的话，大学期间多动手，专业知识掌握扎实的同时，多动手，多写代码，找到自己的兴趣所在，深入研究 \n\n\n	 3.想好自己将来要从事的行业，方向，未来几年的职业规划  \n\n\n	 4.大三暑假找一份有意义！！的实习，通过实习感受理想与现实的不同，直接转正更好，秋招时也会是你的加分项 \n\n\n	5.秋招复习基础知识，多编程，别眼高手低，好好准备项目，学学 如何引导面试官， 能力不行多跑宣讲会的线下笔试 \n\n\n	6.一定不要放弃，不要灰心，天生我材必有用！坚持住！好事多磨！最后祝大家前程似锦！', '1', '2017-02-02 00:00:00');
INSERT INTO `article` VALUES ('3', '做一个web文本比对应用，让论文不再烦恼', '小勤调', '程序员的惊奇之处就是别人用工具学习怎样做的时候，你早已用你的几行代码实现了自己想做的事情〜\n	\n		马上就毕业了，大家最近要忙的就是毕业论文，那么查重也成了一个非常重要的问题，程序员自己就可以搞定的！\n		\n		我们的口号就是搞（服）事（务）搞（生）事（活）！		\n		\n		不限框架和语言，做一个web文本比对应用。		\n		\n		让代码，论文，文案...多次迭代，变化依旧清晰可见！\n\n	“编程之美，让你爱上编程的美”。			\n挑战下面编程题目，一起体验编程的乐趣！\n			\n本期题目：\n			\n				不限框架和语言，做一个web文本比对应用。\n			\n				让代码，论文，文案...多次迭代，变化依旧清晰可见！	\n		\n	实现功能：查询你每次文本变化的地方，精确到空格。\n\n	编程之美独有福利： \n\n	这个栏目就是为了培养大家编程动手习惯并且提高编程能力的一个平台，我们现如今给参与这个栏目的提供如下福利：\n				\n					源码分享、每周评比编程之星、企业实习工作机会、独家名誉及待遇、参与开源项目等等等！我们想进行一些不一样的玩法，让学习变得更有趣！无论你找到工作与否，即使是已经工作了，你也要有一个练手交流的平台〜\n			\n	当然啦，重要的是来练习自己的编程能力，分享代码，交流技术的过程，这个过程中，你提升的不只是一点点〜\n	为了让牛友能够更高效，更好的学习，特别为大家建了一个群：牛客编程之美源码群595665246，只给真正想参与这个栏目和真正想学习的人开放，会在群里定期源码，只要真正想学习的人来参加，所以只有参与栏目（在本栏目下发出自己的代码的）才能加，加的时候备注一下牛客昵称〜\n\n	编程之星 \n\n	每一期的玩法都不一样！每一期的编程之星的规则也不一样~~重要的是人人都参与进来', '2', '2017-02-17 00:00:00');
INSERT INTO `article` VALUES ('4', '美团-后台开发-实习生-一面', 'Mysun', '数据库连接过多是什么原因，c3p0连接池为什么比dbcp要好，数据库连接和session会话是一回事儿吗？有什么不同？\n\nsession关闭都释放的是什么资源 怎么释放资源\n\n怎么让栈内存溢出？\n\nspring bean的生命周期，spring bean的构造中，有参构造和无参构造有什么区别？\n\ntomcat内存为什么会溢出？\n\n为什么jvm有垃圾回收还是会内存溢出？\n\n单例的实现，每种实现的原理，各有什么弊端\n\n静态内部类实现的单例模式是否有线程安全问题（effective java推荐的那种方法）\n\nnginx session共享实现？\n \n为什么用redis不用别的\n  \n  \n然后linux的简单的几个命令， 写了几个sql\n \n手写两个算法：\n  \n    一个数组和一个链表。写出来之后让优化，从时空复杂度一直优化。。\n  \n    最后看我论文做得是自然语言处理，然后顺便问了一些相关的算法。。\n  \n\n\n  --------------------\n\n\n  感受：\n\n\n  美团总部在望京，周围很荒凉，\n\n\n  看到园区内三五成群的人，气息太弄厚，一眼就能辨识出是码农。  \n\n  除了在讨论架构就是讨论代码，\n\n\n  偶尔发现一个女生，再往女生身后一看，后面跟了三个男生。\n\n\n  到了一点半，园区下面已经没人了，估计都回去干活了。\n\n   --------------  \n\n  一直在学校待着，不知道外面的世界，\n\n\n  通过这几次跑很远去面试，越发感觉现实跟自己的理想差距太大，\n\n\n  回来的时候，坐在公交车上，看着来往的行人，是那么的匆忙，\n\n\n  想象自己不久也要像他们一样，奔波。。\n\n\n  我突然感觉自己像一只蚂蚁，那么的渺小，那么的微不足道\n\n\n  但是，我还是有理想，\n\n\n  脚步还是不能停，因为我的理想还没有完成，而我的未来才刚刚开始。  \n   ---------------致，为理想拼搏的我们--', '4', '2017-02-23 00:00:00');
INSERT INTO `article` VALUES ('5', '求救:我挂了两次阿里巴巴面试打来的电话，怎么办？!', '40', '那天晚上在上课，后面有个督学的老师。就没有接，阿里巴巴又打来一次，又被我挂了电话，当天晚上打电话回去发现那是公司电话，就像10086一样，找到当初的面试官应该要转电话。现在快一个星期，都没有再次打电话，我是不是已经被刷掉了？ 第一次面试，没经验，以后校长坐后面，我也要跑出去接电话。', '468', '2017-02-28 00:00:00');
INSERT INTO `article` VALUES ('6', '阿里一面过后，感觉人生都昏暗了', 'Seven', '刚刚八点多，突然接到了阿里巴巴的电话！   顿时心脏崩坏！完全没有想到会这个时候来电话，还没怎么准备。 \n  问题答的一知半解，感觉要跪了。。下面是一些问我的题目（紧张的有点想不起来都问啥了，反正一知半解）： \n\n  谈谈你对ThreadLocal的理解 \n  介绍Java中的基础类型，char类型占几个字节，utf-8占几个字节 \n  Servlet、Filter、Listener的区别和作用 \n  Filter中的doChain() \n  客户端浏览器访问Web应用的过程 \n  你对Tomcat容器的了解程度 \n  Tomcat工作原理、映射原理 \n  Tomcat在网络层的作用 \n  网络路由的过程 \n  数据链路层的作用 \n  http协议报文内容，Tomcat如何处理http请求 \n  Java的垃圾回收算法 \n  新生代为什么采用复制算法 \n  是否了解过JIT \n\n  ClassNotFoundException和NoClassDefFoundError的区别，分别出现在哪些场景（这里面试官还给我讲了NoClassDefFoundError...） \n  JDBC的事务控制 \n  Spring事务控制 \n  class文件从加载到使用的过程（类加载） \n  又问了一些HTTP的东西 \n\n  \n\n  还有一堆~太紧张记不得了，面了大概也就半个小时，估计跪了......', '0', '2017-03-04 00:00:00');
INSERT INTO `article` VALUES ('7', '[百度&阿里&腾讯]前端面试内容记录', 'MD纸一张', '百度一面：\n\n介绍一下在项目中遇到的难点\n简历里提到过性能优化，简单的介绍一下他们的实现\n你知道AOP吗？\n如果有一个N条数据列表需要渲染，怎么样才能使浏览器不卡\n单向数据流和mvc之类的对比\n项目中immutable的用处，如果immutable被破坏了会有什么现象以及原因\n两道算法题\n项目里Promise的使用\n内存泄漏\n阿里一面\n\n自我介绍\n说一说项目里边的安全问题(sql注入，xss，csrf什么的)\n前端性能优化\ndns原理、优化\n从 url 到页面展现过程\n缓存(重点，绝对是)\n给你做淘宝首页搜索框你会怎么做\n直接操作dom性能问题，怎么优化(撸主自己扯到了react)\n虚拟dom\n介绍react的优缺点\nredux\n小部分基础的js和css问题\n平时是怎么学习的,遇到问题怎么解决的\n腾讯一面\n\n结合项目经验介绍一下自己\n介绍一下你在项目中遇到的坑，你又是怎么填坑的\n介绍一下项目两人对话的实现过程(项目是im,所以有这个问题)\n为什么放弃sails选用koa，koa和sails性能对比\n关于移动端开发\n关于性能优化\n腾讯二面\n\nhttp状态码(重点: 304)\ncache-control指令\n浏览器同源政策\n数据库的索引作用、原理\n客户端脚本安全(XSS、CSRF之类的，安利一下《白帽子讲Web安全》)\n目前就这些内容，百度还在等二面，腾讯在等结果(上帝保佑让我过吧)，有新的面试会继续更新，附上我github(https://github.com/redsx)欢迎star ～', '7', '2017-03-03 00:00:00');
INSERT INTO `article` VALUES ('8', '编程之美06期【如何用代码生成激活码（或者优惠券）】', '哇塞看他blingbling的', '我们在使用app的过程经常能看到激活码，优惠券，邀请码这些东西，总是感觉自己受制于人，想不想用自己的代码来生成优惠券呢，酷酷的！！！\n从产品的角度看激活码，一般需要涉及到\n1、要随机，不能简单，否则容易被人爆破；\n2、不要有混淆的字母，比如数字0和字母欧，I（爱）和小写的L，2和字目Z等等，否则输入容易出错。\n参考代码：\nimport random，string\nf=open(\'Promo_code.text\',\'wb\');\nfor i in range(200):\nchars=string.letters+string.digits;\ns=[random.choice(chars) for i in range(10)]\nf.write(\'\'.join(s)+\'\\n\')\nf.close();', '1', '2016-12-06 00:00:00');
INSERT INTO `article` VALUES ('9', '给18届准备春招的学弟学妹们一些小建议，附携程内推码', '倔强的盖茨比', '本人普通二本软件工程专业，现在已经在实习。 \n  去年找工作经历了很多事情也趟过很多坑，最终还是去了想去的公司和想去的城市。 \n  以下内容是上周末闲着写的，整理在个人的QQ空间里给同一个实验室的学弟学妹们参考，现在放到牛客网上算是一起交流吧。 \n  \n\n  昨晚，打完一把王者荣耀，评分依旧全队倒数第二，心一横卸载了，并向女票承诺再打一把罚款二十，我还能怎样，我也很绝望啊。 \n\n  话说，最近开始有2018届的学弟学妹问春招的事了，回想起去年春招走过的坑，又到后来经过学长指点后稍有起色的秋招，以及我们一群人在成都找工作的日子，不禁感慨。所以尝试分享下个人经验，仅供参考，希望有用。 \n\n  一、第一步，说服自己 \n\n  对于大部分还未踏出大学校门的学生来说，第一次面对春招内心的感受大概是兴奋憧憬焦虑急躁并存。你也许听到上一届的学长说找工作好辛苦好残酷；你可能会觉得自己是只菜鸟，某大神写起代码来键盘旁边都有风；你可能认为自己是普通二本，和985/211比起来没有半点优势；你可能刚刚过了个不再轻松好玩的假春节，晚上睡觉想到几个月后就要走出校门觉得兴奋，但是拿起书本复习或准备简历又发现一切都太困难... \n\n  对于我来说，这种感受是从我学长开始准备春招就开始了。他们准备面试刷题，我们接手实验室项目，开始意识到一年后就要轮到自己找工作。现在还能翻到当时的朋友圈：寒假留校做项目，深夜睡不着出去夜跑，面对满是雾霾的夜空拍的照片。 \n  如果你有以上顾忌，老司机告诉你:\n  稳住！春招对于大部分公司来说，是为了通过项目培养人才，而不会立马让你产出成果。所以勇敢点，再勇敢点。 \n\n  二、先不选择公司 \n  有的同学，在投递简历前，会根据自己喜好放弃某些公司。 \n  对此，个人的建议是先不要选择公司，在你精力允许的范围内尽量多的投递，尤其是大公司。 \n\n  也许你听说这个大公司三观不正你看不起，这个大公司996加班好累不想去，或者这个大公司对员工不好我不喜欢。不管是什么原因，春招都不是你选择公司的时候。总不能刚小学就开始纠结到底去清华还是北大，公交上和妹子碰了下就把小孩在哪读书都想好了。 \n\n  应该随时关注各大互联网公司招聘官网和公众号，只要有你符合的岗位就投递，目的不一定是要进公司，而是在面试过程中你会有机会不断的总结经验和完善自己。想要推掉敌方水晶，也需要先打小兵和野怪是吧。当然，如果一不小心被不喜欢的A公司发了Offer，你不去也可以啊。当面试喜欢的B公司时，A公司的Offer就是你的加分项。 \n  总之，精力允许范围内，光撒网，多打怪，快速升级，百利无一害。 \n\n  三、时间安排 \n\n  对于互联网行业，从本科生的大三下学期开始，接下来的一年是找工作的关键一年，你会经历春招、暑期实习、秋招、收到offer、签订三方再到公司实习的几个过程。 \n  现在只简单介绍春招这部分： \n  春招通常是春节后开始上班的第一周开始至暑期实习前的五六月份结束。 \n  大公司一般会较早开始发布招聘信息，各大公司的HR一般年后开工的第一件大事就是准备春招。 \n  你应该提前回校，考虑好找工作还是考研，想好求职岗位，开始尝试写简历，并联系已经工作的学长学姐给你修改。 \n\n  同时，还需要去网络上收集和你相关岗位面试的攻略，收集资料思考面试官可能会问什么，并准备自己的答案（有些面试官准备面试也会去网上找资料，有可能一不小心你们就搜索到同一个问题了)。 \n  个人觉得项目经验丰富的同学会在基础理论方面有所忽略，所以需要花时间复习专业相关书籍。 \n  同时，你需要关注各大招聘平台和各公司的校招官网，寻找学长学姐内推。定期与一同找实习的小伙伴交流分享信息，交流沟通是非常重要的。 \n\n  一般内推会免笔试，非内推需要笔试，各公司有所不同。接下来是筛选简历，过了简历筛选就会技术面试。可能是电话面试，视频面试或者现场面试。技术面试会有一面二面甚至三面，而且每次的面试官也不同。最后有的公司会有HR面试。这些流程都通过了，就会收到暑期实习的offer(暑期实习Offer一般不能转正，实习结束会根据考核决定是否可转正)，然后假期就可以去愉快的实习了。 \n\n  四、简历准备 \n  通常来说，第一次准备的简历基本上都是不合格的简历。 \n  从之前自己准备简历和最近看的几份学弟准备的简历来看，通常存在以下问题： \n  1.自己代码写了不少，但是简历上却不知道如何体现重点，导致在简历上无法展示真实的水平。 \n  2.无关信息太多，比如求职意向是Java后台开发，简历上却把优秀学生干部，特殊才艺甚至婚姻状况都写上了。 \n  3.简历太简陋或者太花哨。 \n  4.信息不精简，简历没有突出重点，使得自己的简历在一堆简历中无法得到HR的注意。 \n  5.对于精通，熟练，掌握，了解几个程度词掌握不好。 \n  针对以上问题，有以下的建议供参考。 \n\n  1.使用专业术语。比如将\"开发了一款安卓新闻app\"修改为“使用Okhttp作为网络请求，使用greenDao操作数据库，使用RecyclerView控件，实现了一款native\n  android\n  新闻客户端，现在用户活跃用户多少多少，下载量多少多少，再附带个下载链接加测试账号”，逼格瞬间就上来了对吧？面试官看到这些名词，然后继续问你Okhttp是什么，这时候你马上搬出早已准备好的Okhttp框架源码分析，一套一套的东西就出来了，立马和面试官谈笑风声。 \n\n  2.简历上写好求职意向，你提供的所有信息都应该围绕你的职位要求，删掉无关的奖项和个人信息。一般的，HR一天会看几百份简历，只有一份干货满满，言简意赅的简历才能在十秒之内引起HR的注意。 \n\n  3.简历布局合理，不花哨也不简陋。简历的设计要符合阅读顺序，使得HR从上到下在十秒内就能很友好的感受到你要表达的信息。烂大街的简历模板让HR感受不到你的诚意，太花哨的又喧宾夺主，容易让重要信息淹没。一般，简历的长度不超过两页。 \n\n  4.正确使用精通，熟练，掌握，了解几个程度词，应届生最多用熟练，不可能用精通。简历上不写自己不会的，写的一定要会。如果面试官发现简历上某个知识点你并不知道，那他有理由质疑整个简历的真实性。 \n  5.简历准备两份。一份word版本，方便文字修改。一份pdf版，投简历尽量发PDF，保证在各个显示设备上显示效果统一。 \n  6.贴上个人博客和github会加分不少。 \n\n   五、资源福利   \n\n  招聘信息： \n  搜索引擎以 “公司名字+校招”搜索可看相关公司校招官网 \n  公众号以 “公司名字+校招” 搜索可看相关公司校招公众号 \n  公众号：\"互联派\"，”实习僧“，“面包求职”，“互联网校招”，“校招日历” \n  app：拉勾网，中华英才网，大街网，智联招聘。 \n\n\n  一个师兄总结的面试攻略： \n  https://github.com/hadyang/interview \n\n  六、个人经历 \n  暑期实习在成都我要去哪，每天和小伙伴们早上排队买泡菜稀饭，天气好去公司宿舍楼顶露天party喝喝酒聊聊天很值得怀念。 \n  秋招过后在天府软件园客如云实习了三个月，一个Team的逗比跑遍E区C区食堂也是留下了美好的回忆。 \n  目前在上海携程机票无线实习，凌空SOHO确实高逼格，周围同事也是卧虎藏龙感觉好刺激啊。', '2', '2017-03-03 00:00:00');
INSERT INTO `article` VALUES ('10', '美团点评实习生面试经历+转正面试', '落花', '我是通过实习生转正拿到的美团点评offer，岗位为：美团外卖结算组的后端开发工程师（Java）。\n\n实习生面试\n美团点评的实习生招聘比较喜欢内推，没有网申和笔试的环节，这一点大家要注意。2016年的5月号，我听到在大众点评工作的同学说美团点评开始招聘暑期实习生了，我查看了一下美团点评各个业务线主要负责的内容，加上同学的建议，最后选择了美团外卖事业部。\n一面\n\n  在5月12号中午，我接到美团一面面试官预约面试的电话，开始面试官以为我在北京，当时我刚回到青岛，于是面试官提出帮我询问能不能电话面试，5月13号面试官打来电话说可以电话面试，并预约了电话面试的时间：14号下午六点半。\n  14号下午五点的时候面试官又打电话提醒了一次，六点半面试正式开始。\n  套路：先自我介绍：学历背景和项目经历。\n  hashtable和hashmap的区别， hashmap底层的实现机制：负载因子、冲突解决方式。Java 8的优化。\n  string 和stringbuffer的区别。\n  JVM内存模型，每个区域存放的内容。\n  JVM垃圾回收算法。\n  JVM类加载机制、双亲委托模型。\n  两道算法题： 在一百个数中寻找重复数字，并对自己提出的算法进行更进一步的优化；判断在一个链表中是否有环。\n  多线程相关知识：synchronized关键字、Lock，并解释它们之间的区别。\n  常见的设计模式如工厂模式，自己看的代码中哪些地方用到了工厂设计模式。\n  线程池的优点和实现机制。\n  网络基础知识：TCP三次握手、四次挥手，为什么建立连接是三次，而断开连接要四次？\n  HTTP POST 和 GET的区别和联系。\n  进程和线程的区别。\n  操作系统内存管理。\n  数据库知识，事务的四个特性ACID。\n  常见索引的实现原理，底层的数据结构B+树。\n  读过哪些源码，最近在看什么书？对MySQL 5.7等更新版本的关注。\n  有没有想问的问题。\n\n总体来说一面的问题并不是，但是面试官特别喜欢引申，一个问题问完了往往会往深处探讨。这个大家要注意。\n二面\n在5月19号我接到了二面面试官的电话。二面面试官详细、着重询问问了我在15年的一段实习经历\n\n  实习过程中的任务、技术点。\n  实习公司的管理方式。\n  实习过程中最大的收获。\n  考察了个人对工作的态度和沟通能力。\n  一面面试官反馈了MySQL掌握的不错，于是二面面试官着重询问了MySQL相关知识。\n  嵌套查询、关联查询等常用SQL语句的书写。\n  常见慢查询优化的方式。\n  常见索引，innodb和myISAM的区别，innodb底层的实现机制，索引前缀的概念，B+树数据结构，为什么常见索引采用B+树的数据结构而不是平衡二叉树。\n  给出具体的业务场景，分析数据库表索引的设计。\n  对美团有没有想了解的。\n\nHR面\n5月30号接到了HR的电话，询问具体的实习时间，就发放了实习offer。\n\n公司实习的经历\n我是6月20号入职的，\n\n  早上去公司南京厅签实习合同。\n  美团实习生实行导师制，签完实习合同后由导师带领去资产处领取电脑（Mac Pro）,美团的研发岗位包括实习生，公司统一配备MAC。\n  找到自己的组，然后分配工位，就正式开始工作了。\n  前几天一般都是搭开发环境，熟悉工作环境，几天后组长就开始分配任务了。\n  我们组每天十点半开早会，十点半之前要到公司，组长一般九点四十五到。\n  组内中午有午休的习惯，十二点吃中午饭，下午两点开始工作，下午六点吃晚饭。\n  晚上八点之后下班有三十块钱的餐补，九点半之后下班打车报销。\n  有望京西、惠新西街南口、东湖渠三个班车点。\n  美团内部的技术分享特别多，每天都有，有公司级别的分享也有部门内部的分享，老大非常鼓励去听分享。\n  每天早会、两周一个迭代会议、三个月一次季度总结，美团的节奏还是比较快的。\n  美团在技术管理上给我的震撼特别大，我们都听惯了大公司内部撕逼的段子，然而在美团，最起码在我们组是不存在这种情况的，每个人都对自己的业务负责，实习期间我也跟随着同事经历了几次线上事故，出了问题大家的第一个反应是互相帮助、尽快解决线上问题，而不是相互推卸责任，在事故处理结束后，实事求是的分析事故原因，相关责任人做事故报告，并和大家探讨如何避免相同事故发生的方案。\n  另外一个,组长在分配任务的时候会考虑每一个的成长，根据每个人负责的任务合理分配业务开发和技术开发任务。\n  能人异士比较多，隔壁组有一个90后的T3-2(级别），我们组一个工作了好多年的技术专家界别才是T3-1。\n  美团点评是双休，总体上差不多是9 9 5的节奏。\n  大约每两个月有一次团队建设，出去漂流、骑马什么的。\n  恒电大厦C座下面新开了个食堂，一顿中午饭在16~20之间，相对来说还是能接受的，没什么特别好吃的档口，也可以选择去对面的摩托大厦或者隔壁锐创大厦吃饭，在摩托大厦吃饭还能碰见锤子团队，是的，就是罗永浩老师的锤子手机团队。\n\n我觉得实习过程中，沟通特别重要，一定要做好风险前置，项目中遇到问题要及时反馈，避免要为自己而影响整个项目组的进程，项目delay的代价比较高，可能会影响个人的绩效。\n\n实习生转正面试\n美团点评在5月份正式招聘的这一批实习生是有转正机会的，需要通过转正面试。\n\n  在8月中旬校招组出台了实习生转正方案：转正窗口期有两次，分别是8月20号和9月12号，利用这两个窗口期来计算工作期限，针对Ｂ类实习生（5月份招聘的）需要组长评价，给出评定了的等级，分Ａ、Ｂ、Ｃ三个档次，评级Ａ的可以直接进入面试环节，评级为Ｂ的需要工作期限满8周才能进入面试环节，评级为Ｃ则被淘汰。\n  举个例子，我是6月20号入职的，到8月20号刚好满八周的工作期限，只要我的评级为Ｂ或者Ａ，那么我就可以进入第一个窗口期的面试，如果我是7月4号入职，评级为Ｂ，那我只能等第二个窗口期9月12号的时候再发起面试申请。\n  转正面试也分两次，第一次是组长面试，组长需要添一个评价表。第二次是部门老大面试。\n  组长面试内容：拉着导师坐一起，首先询问了我这段时间自己觉得做的最难的一个项目，最近哪一块做的好，哪一个部分做的不好，聊一下自己实习这段时间的收获，然后询问导师对我这段时间工作的评价。我个人觉得这个组长面试表现的不是很好，很多东西没有表达出来，没有表达出来自己对技术的热枕，没有对公司业务的深入探究。\n  部门老大面试：谈一谈自己实习这段时间经历的项目，分别描述一下，并针对项目内容进行一定的提问；谈一个自己觉得最难的项目，难在什么地方，最后怎么解决的。个人的教育经历：为什么不选择继续做算法，自己如何自学Java的。自己以后的职业规划。\n\n转正面试过程持续了大约两个周，流程走完以后就是等待结果了，大约中秋前后接到了美团的HR邮件，通知转正面试通过了，正式offer发放是跟秋招一起发放的，在十月底左右发了正式offer，告知了薪资、福利等等，再然后就是邮寄三方，签约。', '0', '2017-03-10 00:00:00');
INSERT INTO `article` VALUES ('11', '2016年算法岗位求职日记', 'hali', '自我介绍：  \n  \n        学历：双985本硕\n        专业：计算机视觉中的局部特征检测与描述\n        求职岗位：模式识别\\图像处理算法工程师\n        编程技能：本科学了编程的基础知识，由于并没有什么实际项目，自己也不是特别热爱，所以也只是懂点if，else之类的\n        交流技能：不善言辞，紧张容易结巴\n    为什么自我介绍了，因为首先需要对自己进行定位，然后再确定目标，最后设计战略。好比你是大神级人物，那完全没必要看我这篇文章；如果跟我一样水水的，可以借鉴一下。\n\n自我定位  \n  \n    分析一下自己的优势，自己的短板。\n  \n     就拿我举例： \n    本科和硕士都是双985，或者是双C9，然后本科发扬应试精神成绩比较漂亮，拿了一些奖学金，这些是我的优势，那么这些内容一定需要放在简历上显眼的地方。这个优势可以是真实的，也可以适当的美化，但是需要把握美化的程度，要不然穿帮了很难看的！怎么把握这个度？如果你觉得这个度你能hold住，那么就可以。  \n  \n    再说说我的短板，我本科阶段实际项目太少，编码能力很差！硕士阶段东做一点西做一点，都是浅尝辄止，方向也算是小众的，最大的问题是我不喜欢硕士阶段做的事情：  \n  \n    项目太少怎么办？两种方法：硕士阶段如果导师比较开明，那就找找实习，别闷着看书，解决实际问题是学习最快的途径；参与实验室的项目，这个参与不一定需要你深入参与，毕竟不是每个人都可以参与一个有意义而且跟你找工作相关的项目的，甚至如果你连实验室的项目都没怎么参与，只要你能和小伙伴多交流，把别人的项目整明白，那么不相当于你自己做了一个项目么？毕竟面试的时候，都是面试官在听你吹牛逼，他们没办法看你的实际成果，如果你说的滴水不漏，别人怎么质疑你？不过最重要的是总结，也就是这个项目你解决什么问题，技术难点在哪里，用了什么方法或者技术，总结与收获。（PS：但是不能“随便”堆砌项目，项目需要和你的求职岗位相关，要不然放在那里真的只是摆设）  \n  \n    编码能力很差怎么办？我先说说我怎么个差法，你们也许就有心理安慰了。开始硕士生涯的时候，我只学习了c的一些基础知识，考完试就直接还给老师了。本科是自动化这种万精油专业，学了挺多的，但都是学个皮毛，一方面是专业的实际情况所限，另外一方面是我不怎么喜欢码代码。还有就是我开始做本科毕设前，连MATLAB都不会。说到这里，你们估计有信心了吧。\n    \n    言归正传，编码能力差怎么办？那就是“练”呗，这个没啥捷径，毕竟码代码又不是一个完全靠你看书思考就能掌握的技能，你只有代码写多了，遇到的问题就多了，然后你每解决一个问题就进步一点了。但是针对找工作可以“速成”，因为在研二下学期开始前，我还是用过MATLAB，只能称之为“用过”，所谓用过就是接触比较多。所以我差不多从3月份开始刷题强推：\n     1.首先确定自己的求职语言为C++，一方面这个语言我多少用过，另一方面这个也是求职\n      算法岗位比较通用的考核语言，C++可以比较直观的反应编程者的思维逻辑；  \n     2.在实验室随便借了一本，C++本科教材，过了两遍，一遍温习，一遍加深印象，也将一些东西做笔记。期间还学习了一下《c++\n    primer》前面400多页，后面太多了，没时间看，重点学习了一下关于容器那几章，这个快的话只需要10天；  \n  \n    3.光说不练假把式，所以在PAT、leetcode以及现在的牛客网等oj网站进行代码练习。开始PAT是因为别人说简单，所以就在PAT上刷了一些题，后来发现PAT很多的时候你都在纠结输入输出的格式，而不是算法本身上，所以纠结了20多题转战leetcode了，但是纠结PAT的格式的时候让你对一些字符切分、输入输出流进行了熟悉，华为机试的时候有考核这方面知识。个人不是很推荐PAT，可以花一两天时间将字符切分、查找以及输入输出流专门了解一下。  \n  \n    4.leetcode应该很出名的，上面的题目很经典，但是对于我这种3月份才开始刷题的人而言，题目太多了（所以刷题趁早，最好是能刷两遍，那么你就无敌了），刷题我是按照easy、middle、hard的顺序进行刷题，因为面试算法岗位的时候，面试官让你手写代码都是循序渐进的，如果你第一道题都解决不了，那即使你会做后面难度较高的题目又如何？注意，不是你会做hard的就会做easy的！leetcode上的题目，很多时候就是一种思路，你做过类似的就很容易联想到解题思路，如果没有做过，你就指望面试的时候突发奇想了，但是常人面试总会紧张的，因此不如平时多刷题。一道题纠结20分钟没有思路，那就看答案吧，然后消化理解，自己敲一遍代码，这道题也许就成为你的一部分了，一遍不行，两遍总能记住。所以在保证效率的同时，需要保证刷题量。为了保证刷题质量和数量，你可以花更多的时间，但是如果跟我一样时间紧张那就试试我的办法。注意一点，刷题贵在坚持，我每天晚上9点以后就开始刷题，11点左右累了就回去休息，坚持一两个月，我就开始习惯C++了。\n作者：hali\n链接：https://www.nowcoder.com/discuss/20597?type=0&order=0&pos=16&page=1\n来源：牛客网\n\n做的项目都是浅尝辄止怎么办？这可以是好事也可以是坏事。坏事就是没法体现你的能力，毕竟你接触不深，没有办法讲出太多实质性的内容！怎么说是好事了？浅尝辄止说明你花的时间不多，但也就意味你尝试的项目就多了。只要你做一个项目都是认真实在地做了一部分内容，那么你就可以好好总结、提炼、升华为一个比较完整的项目，但是牛皮不能吹大了，要不然面试官会对你有太高的期望，如果你的回答不能让其满意，会让面试官心理落差很大，对你持怀疑态度。  \n  \n    研究方向小众，并且不喜欢硕士阶段做的事情怎么办？这是很蛋疼的问题！因为如果你硕士阶段的研究方向和求职岗位一致，特别是针对算法岗位。那么首先别人会觉得你专业对口，再者你硕士再怎么水都得毕业啊，所以你多多少少对自己的研究方向或者求职岗位的相关知识有了解，有探索过。所以如果你的求职岗位和研究方向一致，那么恭喜你了，你只需要好好复习一下自己曾经看过的论文，或者组会ppt把以前掌握的知识捡起来就行，然后着重准备一下编码能力（面试算法，不可能不考你的代码能力的！！！）。但是如果你跟我一样研究方向小众也不是自己愿意做的事，那么可以分两种：一种是研究方向是一些当前很难就业或者将来工作生活不能让你满意、而且你自己对研究方向对应的岗位也没有兴趣的；另外一种是研究方向小众，但是与主流热门的研究方向相关，同时主流热门的方向也是你喜欢的。  \n  \n    针对第一种情况，我也没什么好的建议，毕竟我没有经历过。但是我想谈谈自己的体验，如果将来的工作环境、工作内容不能让你开心或者有成就感，即使薪资再怎么令人羡慕，那也是一种折磨。毕竟从事技术这一门行业，起薪真的只是暂时的（但是也不能不在乎起薪，毕竟薪资代表公司对你价值的认同程度，公司hr和面试官很聪明的，给你多少钱就期待你能给公司带来多少产出的），更应该看中的是长远的发展，你只有干的开心，能学到东西，财务自由早晚的事！相反，你每天做的事毫无技术成长所言，得不到任何精神上的鼓励，而是非常痛苦的熬到下班时间点，每个月守着那几乎没怎么变过、毫无惊喜可言的工资账单，真的是一件很折磨人的事。所以如果硕士阶段的研究方向不是自己喜欢的，那就早点转行吧。别说什么，我花了差不多三年、甚至七年的时间去“研究”这个专业，那是你当时脑袋进水做出的选择，选择了一个自己不喜欢的东西，为什么还硬要自己坚持下去了？找工作无非两种：找一个自己喜欢的；找一个自己擅长的。自己喜欢的，一般可以做好；自己擅长的，说明你不排斥他，否则你也不可能做到“擅长”这个地步。  \n  \n      针对第二种情况，相对而言就比较方便。首先你需要从当前热门专业中，找到你喜欢的并且和你相关的。如果找不到与你相关的，那就找一个你喜欢的；如果找不到你喜欢的，那就找一个相关的。其实这两点也就是对应上面，我对求职的看法：找一个自己喜欢的或者找一个自己擅长的。就拿我举例：我硕士阶段主要做的是局部特征检测与描述，是一种偏底层的图像算法方向。因为局部特征已经发展很多年，单纯研究局部特征算子已经没有什么实质意义了，公司一般都是拿现有的特征算子进行工程实践，再加上深度学习的火热，这种定制化的人工特征算子已经被淹没在人工智能的浪潮中了。方向比较窄，对应的就业岗位也就比较少，同时我也觉得没什么前途，于是我决定转行。不过我的研究方向多多少少跟图像相关、跟机器人相关，再加上实验室的深度学习的氛围比较火热，自己对这个也一直很好奇（研一进入实验室就跟老板说想做深度学习，可是被老板一阵“忽悠”就做开始做局部特征算子），并且深度学习也是为了提取数据或者图像的特征虽然不同于局部特征这种人工设计的特征，但是两者还是有一定的相关性的。所以自己4月份就定下搞深度学习或者机器学习的目标，然后突击3个月就可以跟面试官吹牛逼了，当然也被面试官吐槽我深度学习相关的实际项目比较少很多次，但是我面试一次总结一次知识点上的缺漏，实际项目少这个我没办法，我能做到就是在知识点上装作很懂的样子。具体我怎么准备的，列一下：  \n  \n        李航《统计学习方法》必看！写得浅显易懂，其中推荐大家着重学习一下SVM、LR、决策树和adaboost等；\n        周志华《机器学习》，这本书挺厚的，有时间最好看一下，我主要是看里面的BP的推导\n        《机器学习实战》，这本书主要是用python将一些机器学习的算子实现了一遍，可以加强对机器学习相关算子的理解\n        如果你不了解python，可以学习一下廖雪峰的博客，一般有编程基础的人，两天就可以入门了\n        吴恩达的机器学习教程UFLDL\n      Tutorial，里面中英文都有，建议英语底子差的看一遍中文理解清楚，然后再看一遍英文，毕竟深度学习主流的相关资料是英文资料\n    \n      caffe官网上的例子都跑一遍吧，然后相关的caffe源码看一遍。因为暑假在百度实习期间，需要仿照caffe源码写一个类似的深度学习框架，自己把全连接层、卷积层等一些比较重要的层都看了一遍；面试官比较喜欢让我讲卷积层的实现方法和BP的实现方法。（8月份内推面试网易研究院的时候，二面面试官看到我的简历，直接就不想问我问题，直接吐槽我深度学习相关经历太少，因为当时还在学习深度学习基础知识，没有分析caffe的源代码，所以如果像我这种半路出家做深度学习的，就看看caffe的源代码吧，弥补一下没有相关项目的短板）\n    \n      因为我主要看的是与图像相关的深度学习、所以主要是cnn，关于cnn的卷积层、池化层的作用、局部连接和参数共享的特性、以及常规的正则化的trick、物体检测的几个经典的模型等都需要掌握了解的，建议大家多逛逛知乎，上面有很多人讲的非常好，对于小白而言，感觉开启了一个精彩异常的奇妙世界，会调动你的兴趣和热血的！\n  \n  \n    建议  \n     不知不觉唠叨这么多，最后总结一下，如果以后想到什么再补充：  \n  \n        趁早确定目标，趁早开始着手准备；\n        简历，学习一下你的师兄师姐的简历，让他们提意见，早点准备好；\n        1寸、2寸以及生活照（求职银行可能用到）等相关可能用到东西早点准备好，不要等到需要的时候再去弄；\n        博客和github里面最好是都有内容\n        3月份开始找暑期实习，一定不能懒，即使实验室导师不允许出去实习，也要去参加笔试面试，就当找工作预演；\n    \n      7月份开始，很多互联网公司已经开始了内推，如果你在外面实习，一定不能两耳不闻窗外事，能内推一定要内推，因为这是一次额外的机会，一般不会和你校招冲突；再者内推的时候，面试你的部门非常明确的，校招的时候也许你投递公司的a部门，但是刚好a部门今年不来你们学校招生面试，那你的通过率就减半了，毕竟不同部门的岗位一般是不对口的，此外内推可以避免你被表刷，甚至有的内推可以免笔试！\n    \n      一定不要慌，10月份之前我一个offer都没有，周围的人差不多都拿到心仪的offer了，我当时确实很焦急，但是我没有慌张，一种莫名的自信让我坚持每天浏览学校内网，查询招聘信息、投递简历、笔试、面试、复习、刷题。一定不能自暴自弃，制定好目标，有条不紊的进行；\n    \n      对于我这种紧张就容易结巴的人，我便把自己的简历分析了一遍，同时结合之前面试的经历，以面试官的角度起思考面试官会问我什么问题，然后我便将问题和对应答案打印出来，每次面试之前复习一遍，这样可以尽可能的避免由于面试发挥不理想造成的面试不通过的情况；\n    \n      由于求职季，笔试面试一大堆，所以大家最好用手机或者纸记录一下最近的一些笔试、面试、招聘会的日期、场所以及注意事项，做完一件事就划掉，避免漏掉\n    \n      笔试面试最好找一个安静的地方，我一般选择在宿舍。但是在宿舍进行笔试存在的一个问题是，你只能靠自己，无法和其他小伙伴一起交流商量，所以看你们的选择；面试在宿舍一个人比较自在，一方面没有杂音，另外你吹牛逼也不会不好意思，不过一定需要保证手机电话费充足、电量充足以及信息良好。', '1', '2017-03-18 00:00:00');

-- ----------------------------
-- Table structure for companyquestion
-- ----------------------------
DROP TABLE IF EXISTS `companyquestion`;
CREATE TABLE `companyquestion` (
  `companyid` int(11) NOT NULL AUTO_INCREMENT,
  `companycontent` longblob NOT NULL,
  `company` varchar(255) NOT NULL,
  PRIMARY KEY (`companyid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of companyquestion
-- ----------------------------

-- ----------------------------
-- Table structure for doctype
-- ----------------------------
DROP TABLE IF EXISTS `doctype`;
CREATE TABLE `doctype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `num` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of doctype
-- ----------------------------
INSERT INTO `doctype` VALUES ('1', 'tk', '题库');
INSERT INTO `doctype` VALUES ('2', 'mnms', '模拟面试');
INSERT INTO `doctype` VALUES ('3', 'xnsy', '虚拟试衣');
INSERT INTO `doctype` VALUES ('4', 'msjq', '面试技巧');
INSERT INTO `doctype` VALUES ('5', 'sq', '社区');

-- ----------------------------
-- Table structure for questionbank
-- ----------------------------
DROP TABLE IF EXISTS `questionbank`;
CREATE TABLE `questionbank` (
  `questionid` int(11) NOT NULL AUTO_INCREMENT,
  `class` varchar(255) DEFAULT NULL,
  `questiontype` varchar(255) NOT NULL,
  `score` int(2) NOT NULL,
  `questioncontent` text NOT NULL,
  `answers` longtext,
  `optiona` varchar(255) DEFAULT NULL,
  `optionb` varchar(255) DEFAULT NULL,
  `optionc` varchar(255) DEFAULT NULL,
  `optiond` varchar(255) DEFAULT NULL,
  `correctAnswer` int(255) DEFAULT NULL,
  `rightanswer` text NOT NULL,
  `knowledgepoint` varchar(255) NOT NULL,
  `analysis` text,
  `difficult` int(11) NOT NULL,
  `classs` varchar(255) NOT NULL,
  `time` date DEFAULT NULL,
  PRIMARY KEY (`questionid`),
  KEY `questionid` (`questionid`) USING HASH
) ENGINE=InnoDB AUTO_INCREMENT=395 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of questionbank
-- ----------------------------
INSERT INTO `questionbank` VALUES ('4', 'qd', 'cz', '15', '列举浏览器对象模型BOM里常用的至少4个对象，并列举window对象的常用方法至少5个 。', null, null, null, null, null, null, '对象：Window document location screen history navigator\r\n方法：Alert() confirm() prompt() open() close() ', 'JavaScript', null, '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('5', 'qd', 'cz', '15', '简述列举文档对象模型DOM里document的常用的查找访问节点的方法并做简单说明。', null, null, null, null, null, null, 'Document.getElementById 根据元素id查找元素\r\nDocument.getElementByName 根据元素name查找元素\r\nDocument.getElementTagName 根据指定的元素名查找元素', 'JavaScript', null, '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('6', 'qd', 'cz', '15', '规避javascript多人开发函数重名问题', null, null, null, null, null, null, '(1) 可以开发前规定命名规范，根据不同开发人员开发的功能在函数前加前缀   (2) 将每个开发人员的函数封装到类中，调用的时候就调用类的函数，即使函数重名只要类名不重复就ok', 'JavaScript', null, '3', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('7', 'qd', 'cz', '10', '如何控制alert中的换行。', null, null, null, null, null, null, '\\n alert(“p\\np”); ', 'JavaScript', null, '3', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('8', 'qd', 'cz', '10', 'CSS中哪些属性可以同父元素继承。', null, null, null, null, null, null, '继承：(X)HTML元素可以从其父元素那里继承部分CSS属性，即使当前元素并没有定义该属性 \nColor;font-size;', 'HTML', null, '0', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('9', 'qd', 'cz', '10', '什么是盒子模型？', null, null, null, null, null, null, '在网页中，一个元素占有空间的大小由几个部分构成，其中包括元素的内容（content），元素的内边距（padding），元素的边框（border），元素的外边距（margin）四个部分。这四个部分占有的空间中，有的部分可以显示相应的内容，而有的部分只用来分隔相邻的区域或区域。4个部分一起构成了css中元素的盒模型。', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('10', 'qd', 'cz', '10', '行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？', null, null, null, null, null, null, '行内元素：a、b、span、img、input、strong、select、label、em、button、textarea\n块级元素：div、ul、li、dl、dt、dd、p、h1-h6、blockquote\n空元素：即系没有内容的HTML元素，例如：br、meta、hr、link、input、img', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('11', 'qd', 'cz', '5', 'CSS实现垂直水平居中', null, null, null, null, null, null, '一道经典的问题，实现方法有很多种，以下是其中一种实现：\nHTML结构：\n<div class=\"wrapper\">\n        <div class=\"content\"></div>\n</div>\nCSS：\n.wrapper {\n      position: relative;\n      width: 500px;\n      height: 500px;\n      background-color: #ddd;\n     }\n    .content{\n        background-color:#6699FF;\n        width:200px;\n        height:200px;\n        position: absolute;        //父元素需要相对定位\n        top: 50%;\n        left: 50%;\n        margin-top:-100px ;   //二分之一的height，width\n        margin-left: -100px;\n    }', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('12', 'qd', 'cz', '10', '简述一下src与href的区别？', null, null, null, null, null, null, 'href 是指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，用于超链接。\nsrc是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('13', 'qd', 'cz', '10', '什么是CSS Hack?', null, null, null, null, null, null, '一般来说是针对不同的浏览器写不同的CSS,就是 CSS Hack。\nIE浏览器Hack一般又分为三种，条件Hack、属性级Hack、选择符Hack（详细参考CSS文档：css文档）。例如：\n// 1、条件Hack\n   <!--[if IE]>\n      <style>\n            .test{color:red;}\n      </style>\n   <![endif]-->\n   // 2、属性Hack\n    .test{\n    color:#090\\9; /* For IE8+ */\n    *color:#f00;  /* For IE7 and earlier */\n    _color:#ff0;  /* For IE6 and earlier */\n    }\n   // 3、选择符Hack\n    * html .test{color:#090;}       /* For IE6 and earlier */\n    * + html .test{color:#ff0;}     /* For IE7 */', 'CSS', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('14', 'qd', 'cz', '2', '为什么HTML5里面我们不需要DTD（Document Type Definition文档类型定义）？', null, null, null, null, null, null, 'HTML5没有使用SGML或者XHTML，他是一个全新的东西，因此你不需要参考DTD，对于HTML5，你仅需放置下面的文档类型代码告诉浏览器识别这是HTML5文档即可。', 'HTML', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('15', 'qd', 'cz', '10', '简述同步和异步的区别', null, null, null, null, null, null, '同步是阻塞模式，异步是非阻塞模式。\n同步就是指一个进程在执行某个请求的时候，若该请求需要一段时间才能返回信息，那么这个进程将会一直等待下去，直到收到返回信息才继续执行下去；\n异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回时系统会通知进程进行处理，这样可以提高执行的效率。', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('16', 'qd', 'cz', '5', 'px和em的区别？', null, null, null, null, null, null, 'px和em都是长度单位，区别是，px的值是固定的，指定是多少就是多少，计算比较容易。em得值不是固定的，并且em会继承父级元素的字体大小。\n浏览器的默认字体高都是16px。所以未经调整的浏览器都符合: 1em=16px。那么12px=0.75em, 10px=0.625em', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('17', 'qd', 'cz', '10', '什么叫优雅降级和渐进增强？', null, null, null, null, null, null, '渐进增强 progressive enhancement：\n针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。\n优雅降级 graceful degradation：\n一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。\n区别：\na. 优雅降级是从复杂的现状开始，并试图减少用户体验的供给\nb. 渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要\nc. 降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带', 'HTML', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('18', 'qd', 'cz', '5', '浏览器的内核分别是什么?', null, null, null, null, null, null, 'IE: trident内核\nFirefox：gecko内核\nSafari：webkit内核\nOpera：以前是presto内核，Opera现已改用Google Chrome的Blink内核\nChrome：Blink(基于webkit，Google与Opera Software共同开发)', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('19', 'qd', 'cz', '5', '怎样添加、移除、移动、复制、创建和查找节点？', null, null, null, null, null, null, '1）创建新节点\ncreateDocumentFragment() //创建一个DOM片段\ncreateElement() //创建一个具体的元素\ncreateTextNode() //创建一个文本节点\n2）添加、移除、替换、插入\nappendChild() //添加\nremoveChild() //移除\nreplaceChild() //替换\ninsertBefore() //插入\n3）查找\ngetElementsByTagName() //通过标签名称\ngetElementsByName() //通过元素的Name属性的值\ngetElementById() //通过元素Id，唯一性', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('20', 'qd', 'cz', '10', '实现一个函数clone，可以对JavaScript中的5种主要的数据类型（包括Number、String、Object、Array、Boolean）进行值复制。', null, null, null, null, null, null, '/**\n * 对象克隆\n * 支持基本数据类型及对象\n * 递归方法\n */\nfunction clone(obj) {\n    var o;\n    switch (typeof obj) {\n        case \"undefined\":\n            break;\n        case \"string\":\n            o = obj + \"\";\n            break;\n        case \"number\":\n            o = obj - 0;\n            break;\n        case \"boolean\":\n            o = obj;\n            break;\n        case \"object\": // object 分为两种情况 对象（Object）或数组（Array）\n            if (obj === null) {\n                o = null;\n            } else {\n                if (Object.prototype.toString.call(obj).slice(8, -1) === \"Array\") {\n                    o = [];\n                    for (var i = 0; i < obj.length; i++) {\n                        o.push(clone(obj[i]));\n                    }\n                } else {\n                    o = {};\n                    for (var k in obj) {\n                        o[k] = clone(obj[k]);\n                    }\n                }\n            }\n            break;\n        default:\n            o = obj;\n            break;\n    }\n    return o;\n}', 'JavaScript', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('21', 'qd', 'cz', '5', '如何消除一个数组里面重复的元素？', null, null, null, null, null, null, '// 方法一：\nvar arr1 =[1,2,2,2,3,3,3,4,5,6],\n    arr2 = [];\nfor(var i = 0,len = arr1.length; i< len; i++){\n    if(arr2.indexOf(arr1[i]) < 0){\n        arr2.push(arr1[i]);\n    }\n}\ndocument.write(arr2); // 1,2,3,4,5,6', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('22', 'qd', 'cz', '10', '在Javascript中什么是伪数组？如何将伪数组转化为标准数组？', null, null, null, null, null, null, '伪数组（类数组）：无法直接调用数组方法或期望length属性有什么特殊的行为，但仍可以对真正数组遍历方法来遍历它们。典型的是函数的argument参数，还有像调用getElementsByTagName,document.childNodes之类的,它们都返回NodeList对象都属于伪数组。可以使用Array.prototype.slice.call(fakeArray)将数组转化为真正的Array对象。\nfunction log(){\n      var args = Array.prototype.slice.call(arguments);  \n//为了使用unshift数组方法，将argument转化为真正的数组\n      args.unshift(\'(app)\');\n \n      console.log.apply(console, args);\n};', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('23', 'qd', 'cz', '5', 'Javascript中callee和caller的作用？', null, null, null, null, null, null, 'caller是返回一个对函数的引用，该函数调用了当前函数；\ncallee是返回正在被执行的function函数，也就是所指定的function对象的正文。', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('24', 'qd', 'cz', '10', '请描述一下cookies，sessionStorage和localStorage的区别', null, null, null, null, null, null, 'sessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。\nweb storage和cookie的区别\nWeb Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。\n除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生。', 'JavaScript', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('25', 'qd', 'cz', '5', '统计字符串中字母个数或统计最多字母数。', null, null, null, null, null, null, 'var str = \"aaaabbbccccddfgh\";\nvar obj  = {};\nfor(var i=0;i<str.length;i++){\n    var v = str.charAt(i);\n    if(obj[v] && obj[v].value == v){\n        obj[v].count = ++ obj[v].count;\n    }else{\n        obj[v] = {};\n        obj[v].count = 1;\n        obj[v].value = v;\n    }\n}\nfor(key in obj){\n    document.write(obj[key].value +\'=\'+obj[key].count+\'&nbsp;\'); // a=4  b=3  c=4  d=2  f=1  g=1  h=1 \n}', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('26', 'qd', 'cz', '5', '一次完整的HTTP事务是怎样的一个过程？', null, null, null, null, null, null, '基本流程：\na. 域名解析\nb. 发起TCP的3次握手\nc. 建立TCP连接后发起http请求\nd. 服务器端响应http请求，浏览器得到html代码\ne. 浏览器解析html代码，并请求html代码中的资源\nf. 浏览器对页面进行渲染呈现给用户', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('27', 'qd', 'cz', '15', 'JavaScript实现二分法查找', null, null, null, null, null, null, '二分法查找，也称折半查找，是一种在有序数组中查找特定元素的搜索算法。查找过程可以分为以下步骤：\n（1）首先，从有序数组的中间的元素开始搜索，如果该元素正好是目标元素（即要查找的元素），则搜索过程结束，否则进行下一步。\n（2）如果目标元素大于或者小于中间元素，则在数组大于或小于中间元素的那一半区域查找，然后重复第一步的操作。\n（3）如果某一步数组为空，则表示找不到目标元素。\n参考代码:\n     // 非递归算法\n        function binary_search(arr, key) {\n            var low = 0,\n                high = arr.length - 1;\n            while(low <= high){\n                var mid = parseInt((high + low) / 2);\n                if(key == arr[mid]){\n                    return  mid;\n                }else if(key > arr[mid]){\n                    low = mid + 1;\n                }else if(key < arr[mid]){\n                    high = mid -1;\n                }else{\n                    return -1;\n                }\n            }\n        };\n        var arr = [1,2,3,4,5,6,7,8,9,10,11,23,44,86];\n        var result = binary_search(arr,10);\n        alert(result); // 9 返回目标元素的索引值       \n\n    // 递归算法\n        function binary_search(arr,low, high, key) {\n            if (low > high){\n                return -1;\n            }\n            var mid = parseInt((high + low) / 2);\n            if(arr[mid] == key){\n                return mid;\n            }else if (arr[mid] > key){\n                high = mid - 1;\n                return binary_search(arr, low, high, key);\n            }else if (arr[mid] < key){\n                low = mid + 1;\n                return binary_search(arr, low, high, key);\n            }\n        };\n        var arr = [1,2,3,4,5,6,7,8,9,10,11,23,44,86];\n        var result = binary_search(arr, 0, 13, 10);\n        alert(result); // 9 返回目标元素的索引值', 'JavaScript', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('38', 'qd', 'cz', '5', '你所了解到的Web攻击技术', null, null, null, null, null, null, '（1）XSS（Cross-Site Scripting，跨站脚本攻击）：指通过存在安全漏洞的Web网站注册用户的浏览器内运行非法的HTML标签或者JavaScript进行的一种攻击。\n（2）SQL注入攻击\n（3）CSRF（Cross-Site Request Forgeries，跨站点请求伪造）：指攻击者通过设置好的陷阱，强制对已完成的认证用户进行非预期的个人信息或设定信息等某些状态更新。', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('39', 'qd', 'cz', '5', '写一个function，清除字符串前后的空格。（兼容所有浏览器）', null, null, null, null, null, null, 'function trim(str) {\n    if (str && typeof str === \"string\") {\n        return str.replace(/(^\\s*)|(\\s*)$/g,\"\"); //去除前后空白符\n    }\n}', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('40', 'qd', 'cz', '5', '使用正则表达式验证邮箱格式', null, null, null, null, null, null, 'var reg = /^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w{2,3}){1,3})$/;\n    var email = \"example@qq.com\";\n    console.log(reg.test(email));  // true', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('41', 'qd', 'cz', '5', 'xhtml和html有什么区别', null, null, null, null, null, null, 'HTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言\n最主要的不同：\nXHTML 元素必须被正确地嵌套。\nXHTML 元素必须被关闭。\n标签名必须用小写字母。\nXHTML 文档必须拥有根元素。', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('42', 'qd', 'cz', '5', 'Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?', null, null, null, null, null, null, '用于声明文档使用那种规范（html/Xhtml）一般为 严格 过度 基于框架的html文档\n加入XMl声明可触发，解析方式更改为IE5.5 拥有IE5.5的bug', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('43', 'qd', 'cz', '5', '行内元素有哪些?块级元素有哪些?CSS的盒模型?', null, null, null, null, null, null, '块级元素：div p h1 h2 h3 h4 form ul\n行内元素: a b br i span input select\nCss盒模型:内容，border ,margin，padding', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('44', 'qd', 'cz', '5', 'CSS引入的方式有哪些? link和@import的区别是?', null, null, null, null, null, null, '内联 内嵌 外链 导入\n区别 ：同时加载\n前者无兼容性，后者CSS2.1以下浏览器不支持\nLink 支持使用javascript改变样式，后者不可', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('45', 'qd', 'cz', '5', 'CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?', null, null, null, null, null, null, '标签选择符 类选择符 id选择符\n继承不如指定 Id>class>标签选择\n后者优先级高', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('46', 'qd', 'cz', '5', '前端页面有哪三层构成，分别是什么?作用是什么?', null, null, null, null, null, null, '结构层 Html 表示层 CSS 行为层 js', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('47', 'qd', 'cz', '2', '你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?', null, null, null, null, null, null, 'Ie(Ie内核) 火狐（Gecko） 谷歌（webkit） opear(Presto)', 'HTML', '开放题，答对即可。Ie(Ie内核) 火狐（Gecko） 谷歌（webkit） opear(Presto)', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('48', 'qd', 'cz', '7', '写出几种IE6 BUG的解决方法', null, null, null, null, null, null, '1.双边距BUG float引起的 使用display\n2.3像素问题 使用float引起的 使用dislpay:inline -3px\n3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active\n4.Ie z-index问题 给父级添加position:relative\n5.Png 透明 使用js代码 改\n6.Min-height 最小高度 ！Important 解决’\n7.select 在ie6下遮盖 使用iframe嵌套\n8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）', 'HTML', '开放题，答对3点即可。', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('49', 'qd', 'cz', '5', '标签上title与alt属性的区别是什么?', null, null, null, null, null, null, 'Alt 当图片不显示是 用文字代表。\nTitle 为该属性提供信息', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('50', 'qd', 'cz', '5', '浏览器标准模式和怪异模式之间的区别是什么?', null, null, null, null, null, null, '盒子模型 渲染模式的不同\n使用 window.top.document.compatMode 可显示为什么模式', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('51', 'qd', 'cz', '5', '你如何对网站的文件和资源进行优化?期待的解决方案包括：', null, null, null, null, null, null, '文件合并\n文件最小化/文件压缩\n使用CDN托管\n缓存的使用', 'HTML', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('52', 'qd', 'cz', '5', '清除浮动的几种方式，各自的优缺点', null, null, null, null, null, null, '1.使用空标签清除浮动 clear:both（理论上能清楚任何标签，，，增加无意义的标签）\n2.使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）\n3.是用afert伪元素清除浮动(用于非IE浏览器)', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('53', 'qd', 'cz', '5', 'javascript的typeof返回哪些数据类型', null, null, null, null, null, null, 'Object number function boolean underfind', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('54', 'qd', 'cz', '5', 'split() join() 的区别', null, null, null, null, null, null, '前者是切割成数组的形式，后者是将数组转换成字符串', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('55', 'qd', 'cz', '5', '数组方法pop() push() unshift() shift()', null, null, null, null, null, null, 'Push()尾部添加 pop()尾部删除\nUnshift()头部添加 shift()头部删除', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('56', 'qd', 'cz', '5', '.IE和DOM事件流的区别', null, null, null, null, null, null, '1.执行顺序不一样、\n2.参数不一样\n3.事件加不加on\n4.this指向问题', 'JavaScript', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('57', 'qd', 'cz', '5', 'ajax请求的时候get 和post方式的区别', null, null, null, null, null, null, '一个在url后面 一个放在虚拟载体里面\n有大小限制\n安全问题\n应用不同 一个是论坛等只需要请求的，一个是类似修改密码的', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('58', 'qd', 'cz', '5', 'call和apply的区别', null, null, null, null, null, null, 'Object.call(this,obj1,obj2,obj3)\nObject.apply(this,arguments)', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('59', 'qd', 'cz', '5', 'ajax请求时，如何解释json数据', null, null, null, null, null, null, '使用eval parse 鉴于安全性考虑 使用parse更靠谱', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('60', 'qd', 'cz', '5', '添加 删除 替换 插入到某个接点的方法', null, null, null, null, null, null, 'obj.appendChidl()\nobj.innersetBefore\nobj.replaceChild\nobj.removeChild', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('61', 'qd', 'cz', '5', '解释jsonp的原理，以及为什么不是真正的ajax', null, null, null, null, null, null, '动态创建script标签，回调函数\nAjax是页面无刷新请求数据操作', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('62', 'qd', 'cz', '5', 'document load 和document ready的区别', null, null, null, null, null, null, 'Document.onload 是在结构和样式加载完才执行js\nDocument.ready原生种没有这个方法，jquery中有 $().ready(function)', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('63', 'qd', 'cz', '5', '”==”和“===”的不同', null, null, null, null, null, null, '前者会自动转换类型\n后者不会', 'JavaScript', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('64', 'qd', 'bc', '5', '编写一个数组去重的方法', null, null, null, null, null, null, 'function oSort(arr)\n{\nvar result ={};\nvar newArr=[];\nfor(var i=0;i<arr.length;i++)\n{\nif(!result[arr])\n{\nnewArr.push(arr)\nresult[arr]=1\n}\n}\nreturn newArr\n}', 'HTML', '达到同样效果即可。', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('65', 'qd', 'cz', '5', '对WEB标准以及W3C的理解与认识', null, null, null, null, null, null, '标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维 护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性；', 'HTML', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('66', 'qd', 'cz', '5', 'CSS引入的方式有哪些? link和@import的区别是?', null, null, null, null, null, null, '内联 内嵌 外链 导入\n区别 ：同时加载\n前者无兼容性，后者CSS2.1以下浏览器不支持\nLink 支持使用javascript改变样式，后者不可', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('67', 'qd', 'cz', '5', 'CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?', null, null, null, null, null, null, '标签选择符 类选择符 id选择符\n继承不如指定 Id>class>标签选择\n后者优先级高', 'CSS', '', '1', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('68', 'qd', '语音题', '10', '有没有关注HTML5和CSS3?如有请简单说一些您对它们的了解情况！', null, null, null, null, null, null, '有，HTML5的是目前正在为未来的HTML标准的主要修订的发展。其前任一样，4.01和XHTML 1.1的HTML，HTML5的是一个结构和提交万维网内容的标准。新标准结合了诸如视频播放，拖动和放下以前曾在第三方浏览器插件依赖例如Adobe Flash，微软的Silverlight的功能，和谷歌齿轮。', 'HTML', '开放题，答案供参考。', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('69', 'qd', '语音题', '10', '如果让你来制作一个访问量很高的大型网站，你会如何来管理所有CSS文件、JS与图片?', null, null, null, null, null, null, '把所有的CSS文件都放入一个样式表中,通过把所有的脚本放到一个文件中来减少HTTP请求的方法。js文件也采用同样的方法。把所有的背景图像都放到一个图片文件中，然后通过CSS的background-image和background-position属性来显示图片的不同部分。', 'HTML', '开放题，答案供参考。', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('70', 'qd', '语音题', '10', '你对前端界面工程师这个职位是怎么样理解的?它的前景会怎么样?', null, null, null, null, null, null, '前端界面工程师：1. 与交互设计师、视觉设计师协作，根据设计图完成页面制作。 2. 维护及优化网站前端性能。\n前景： 长期以来，国内前端开发在整个软件开发行业内占得比重较小，发展较晚。网站也多倾向于赢利最大化而轻视用户体验。前后端比例悬殊大。近几年来，随着 以用户为中心 的思想普及发展。前端开发呈现出强劲的发展态势，前端开发人员在项目中的重要性日益突出。前端开发人员呈现出严重的人员短缺现象。', 'HTML', '开放题，答案供参考。', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('71', 'qd', '语音题', '10', 'js是什么，js和html 的开发如何结合?', null, null, null, null, null, null, 'js是一种基于对象和事件驱动，并具有安全性的脚本语言。\n可以html的三个地方编写js脚本语言：一是在网页文件的标签对中直接编写脚本程序代码；二是将脚本程序代码放置在一个单独的文件中，在网页文件中引用这个脚本程序语言；三是将脚本程序代码作为某个元素的事件属性值或超链接的href属性值。', 'JavaScript', '', '2', 'qd', '2017-03-02');
INSERT INTO `questionbank` VALUES ('72', 'ht', '语音题', '10', '常使用的库有哪些?常用的前端开发工具?开发过什么应用或组件?', null, null, null, null, null, null, '最常用的库：jquery-1.4.2.min.js\n常用的前端开发工具：firebug、photoshop、editplus、取色器、色板、eclipse', 'JQuery', '开放题，言之有据即可。', '2', 'ht', '2017-03-02');
INSERT INTO `questionbank` VALUES ('73', 'ht', '语音题', '10', '说说YSlow(可以详细一点)', null, null, null, null, null, null, 'yslow是一个工具，也可以理解成是一个插件，是基于Mozilla Firefox上firebug插件的一个插件。它的出现的主要目的就是检测我们的页面性能。它让用户可以就近取得所需的内容，解决网络拥挤的状况，提高用户访问网站的响应速度；其次，yahoo在ETags配置上也有独特之处，声明过期，就是说，用户从服务器取数据的时候，如果文件变化了，给他反馈新的文件，如果文件没有变化，只需告诉客户端没有变化即可，不必再把文件取回来，这样就节省了大量的网络带宽和资源。另外，只要将那些在加载过程中要执行的脚本放到底部，就可以实现最大的下载并行。\n小说网对其评价：(a) 从样式表着手，避免CSS表达式。CSS表达式需要很多资源，有时甚至会造成页面假死。(b) 缓存一下不常修改的文件，并开启 GZIP压缩，减少网络传输时间(c) 减少DNS查找。YSlow认为一个页面上2个以内的域名比较合理。有些网站挂了不少统计代码，或者广告代码。统计拖累用户速度、广告影响用户视觉。(d) 避免重定向（跳转），我们在给链接地址的时候，一般会把链接地址写成 http://xxx.cn/xxx 或者 http://xxx.cn/xxx/ ，有区别吗?有！服务器如果接收到的URL是http://xxx.cn/xxx，它会自动重定向到http://xxx.cn/xxx/，虽然进入的都 是同一个页面，但是前者比后者多走了一步，重定向，显然多多少少浪费了一点时间。', 'JQuery', '开放题，答案供参考。', '3', 'ht', '2017-03-02');
INSERT INTO `questionbank` VALUES ('74', 'qd', 'sxz', '2', '在CSS3中，以下哪个IE浏览器（Trident内核）的私有属性前缀？ （ ）', '-Webkit`-trident`-ie`-ms', '-Webkit', '-trident', '-ie', '-ms', '4', 'D', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('75', 'qd', '判断题', '2', 'css属性font-style用于设置字体的粗细。请判断这句话的正确与否。', 'T`F``', 'T', 'F', '', '', '2', 'B', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('76', 'qd', 'sxz', '2', '下列js可以让一个input的背景颜色变成红色的是？', 'inputElement.style.backgroundColor = \'red\';`inputElement.backgroundColor = \'red\';`inputElement.style.backgroundColor = \'#0000\';`inputElement.backgroundColor = \'#0000\';', 'inputElement.style.backgroundColor = \'red\';', 'inputElement.backgroundColor = \'red\';', 'inputElement.style.backgroundColor = \'#0000\';', 'inputElement.backgroundColor = \'#0000\';', '1', 'A', 'JavaScript', '来自百度套题。', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('77', 'qd', 'sxz', '2', '可以仅仅把“首页”二字设置为白色的样式是（）\n<div class=”menu”>\n<ul>\n<li><a class=”home” href=”home.html”> 首页 </a></li>\n<li><a href=”about.html”></a> 关于 </li>\n</ul>\n</div>', '.menu a {color:#fff;}`li a {color:#fff;}`.menu .home {color:#fff;}`div.menu li a {color:#fff;}', '.menu a {color:#fff;}', 'li a {color:#fff;}', '.menu .home {color:#fff;}', 'div.menu li a {color:#fff;}', '3', 'C', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('78', 'qd', 'sxz', '2', 'HTML5 提供两种新对象，通过 javascript API 来存储本地数据，这两种对象是（）。', 'cookies和sessionVariables`localStorage和sessionStorage`cookies和locationObjects`', 'cookies和sessionVariables', 'localStorage和sessionStorage', 'cookies和locationObjects', '', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('79', 'qd', 'sxz', '2', '在 HTML5 中，哪个方法用于获得用户的当前位置？', 'getPosition()`getCurrentPosition()`getUserPosition()`getLocation()', 'getPosition()', 'getCurrentPosition()', 'getUserPosition()', 'getLocation()', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('80', 'qd', 'sxz', '2', '网页开发中，一般需判断浏览器类型，需通过userAgent中获取浏览器内核来判断，下列说法错误的是？', '一直到IE9，都是Trident内核`firefox是Gecko内核`chrome是webkit内核`IE是目前最快的浏览器', '一直到IE9，都是Trident内核', 'firefox是Gecko内核', 'chrome是webkit内核', 'IE是目前最快的浏览器', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('82', 'qd', 'sxz', '2', 'HTML的注释标记是以下哪个选项？', '//注释内容`/* 注释内容 */`<!-- 注释内容 -->`《注释内容》', '//注释内容', '/* 注释内容 */', '<!-- 注释内容 -->', '《注释内容》', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('83', 'qd', 'sxz', '2', '列表分为两类，一是无序列表，一是有序列表，以下哪个是无序列表？', '<UL>`<OL>`<DIR>`<DL>', '<UL>', '<OL>', '<DIR>', '<DL>', '1', 'A', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('84', 'qd', 'sxz', '2', '关于下列类的说法错误的是？', 'show用来显示一个区块`hide用来隐藏一个div`hidden用来隐藏一个div`text-hide将会隐藏掉文字', 'show用来显示一个区块', 'hide用来隐藏一个div', 'hidden用来隐藏一个div', 'text-hide将会隐藏掉文字', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('85', 'qd', 'sxz', '2', '下面有关css选择器的说法错误的是？', '.intro --- 选择 class=\"intro\" 的所有元素。`#firstname --- 选择 id=\"firstname\" 的元素。`div>p --- 选择所有 <div> 元素和所有 <p> 元素`p --- 选择所有 <p> 元素', '.intro --- 选择 class=\"intro\" 的所有元素。', '#firstname --- 选择 id=\"firstname\" 的元素。', 'div>p --- 选择所有 <div> 元素和所有 <p> 元素', 'p --- 选择所有 <p> 元素', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('86', 'qd', 'sxz', '2', '以下正确表示10^2的是', '10<sub>2</sub>`10<sup>2</sup>`10<mark></mark>`10*2', '10<sub>2</sub>', '10<sup>2</sup>', '10<mark></mark>', '10*2', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('87', 'qd', 'sxz', '2', '以下标签为换行符的是', '<hr>`<br>`<p>`<div>', '<hr>', '<br>', '<p>', '<div>', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('88', 'qd', 'sxz', '2', '下面有关html的描述，不推荐的是？', '在页面顶部添加 doctype声明；`在 </head> … <body> 中间插入 HTML 代码；`避免使用 <font> 标签；`使用 <table> 元素展现学生成绩表等数据。', '在页面顶部添加 doctype声明；', '在 </head> … <body> 中间插入 HTML 代码；', '避免使用 <font> 标签；', '使用 <table> 元素展现学生成绩表等数据。', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('89', 'qd', 'sxz', '2', '请阅读以下代码：\n<div style=”width:400px;height:200px;”>\n  <span style=”float:left;width:auto;height:100%;”>\n           <i style=”position:absolute;float:left;width:100px;height:50px;”>hello</i>\n  </span>\n</div>\n问题：span标签的width和height分别为多少？', 'width = 0px，height = 0px`width = 400px，height = 200px`width = 100px，height = 50px`width = 0px，height = 200px', 'width = 0px，height = 0px', 'width = 400px，height = 200px', 'width = 100px，height = 50px', 'width = 0px，height = 200px', '4', 'D', 'JavaScript', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('90', 'qd', 'sxz', '2', '把鼠标移到按钮并点击时，会产生一串什么样的事件？', 'active hove focus`foucs hove active`hover active foucus`hover focus active', 'active hove focus', 'foucs hove active', 'hover active foucus', 'hover focus active', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('91', 'qd', 'sxz', '2', '负责美化网页的是什么技术', 'css`html`javascript`java', 'css', 'html', 'javascript', 'java', '1', 'A', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('92', 'qd', 'sxz', '2', '请选出错误的标签', '<p>段落</p>`<h1>标题</h1>`<blockquote>引用内容</blockquote>`<img src=”http://www.nowcoder.com/”></img>', '<p>段落</p>', '<h1>标题</h1>', '<blockquote>引用内容</blockquote>', '<img src=”http://www.nowcoder.com/”></img>', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('93', 'qd', 'sxz', '2', '<meta>', '<pre>`<pre>`<mark>`<small>', '<pre>', '<pre>', '<mark>', '<small>', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('94', 'qd', 'sxz', '2', '能在1024的windows机器上显示8列而在肾6手机上显示12列的是', 'col-md-8 col-xs-12`col-lg-8 col-sm-12`col-md-8 col-sm-12`col-lg-8 col-xs-12', 'col-md-8 col-xs-12', 'col-lg-8 col-sm-12', 'col-md-8 col-sm-12', 'col-lg-8 col-xs-12', '1', 'A', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('95', 'qd', 'sxz', '2', '关于bootstrap3的说法，错误的是', '在windows上支持IE8`在IOS上支持Opera`在MAC OS及Windows上支持firefox`在IOS及android上都支持chrome', '在windows上支持IE8', '在IOS上支持Opera', '在MAC OS及Windows上支持firefox', '在IOS及android上都支持chrome', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('96', 'qd', 'sxz', '2', '浮动会导致页面的非正常显示，以下几种清除浮动的方法，哪个是不推荐使用的？', '在浮动元素末尾添加一个空的标签例如 <div style=”clear:both”></div>`通过设置父元素overflow值为hidden；`父元素也设置浮动`给父元素添加clearfix类', '在浮动元素末尾添加一个空的标签例如 <div style=”clear:both”></div>', '通过设置父元素overflow值为hidden；', '父元素也设置浮动', '给父元素添加clearfix类', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('97', 'qd', 'sxz', '2', 'Blob对象中的type属性表示文件的是（）', '文件大小`文件名`MIME类型`图片格式', '文件大小', '文件名', 'MIME类型', '图片格式', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('98', 'qd', 'sxz', '2', '置文字颜色应使用属性', 'font-family`font-color`color`font', 'font-family', 'font-color', 'color', 'font', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('99', 'qd', 'sxz', '2', '新窗口打开网页，用到以下哪个值（）。', '_self`_blank`_top`_parent', '_self', '_blank', '_top', '_parent', '4', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('100', 'qd', 'sxz', '2', '哪个HTML5内建对象用于在画布上绘制？（）', 'getContent`getContext`getGraphics`getCanvas', 'getContent', 'getContext', 'getGraphics', 'getCanvas', '4', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('101', 'qd', 'sxz', '2', 'CSS 样式，边距： 10px 20px 40px 30px ；哪一个是底边距？', '10px`40px`30px`20px', '10px', '40px', '30px', '20px', '4', 'B', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('102', 'qd', 'sxz', '2', '如何在CSS文件中插入注释？', '//this is a comment`//this is a comment//`/*this is a comment*/`\'this is a comment', '//this is a comment', '//this is a comment//', '/*this is a comment*/', '\'this is a comment', '3', 'C', 'CSS', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('103', 'ht', 'sxz', '2', '下面有关jquery事件的响应，描述错误的是？', 'onclick 鼠标点击某个对象`onfocus 元素失去焦点`onload 是某个页面的css js html 文档结构和图像被完成加载`onmousedown 某个鼠标按键被按下', 'onclick 鼠标点击某个对象', 'onfocus 元素失去焦点', 'onload 是某个页面的css js html 文档结构和图像被完成加载', 'onmousedown 某个鼠标按键被按下', '2', 'B', 'JQuery', '', '1', 'ht', '2017-03-09');
INSERT INTO `questionbank` VALUES ('104', 'qd', 'sxz', '2', '表单提交时会触发什么Dom事件', 'submit`onsubmit`onupload`onresize', 'submit', 'onsubmit', 'onupload', 'onresize', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('105', 'qd', 'sxz', '2', '下列不属于bootstrap3的标签是', 'row`row-fluid`col-md-*`form-group', 'row', 'row-fluid', 'col-md-*', 'form-group', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('106', 'qd', 'sxz', '2', '以下标签，错误的是', 'text-left用于左对齐`text-center水平居中对齐`text-vertical垂直居中对齐`text-uppercase可以将文字全部大写', 'text-left用于左对齐', 'text-center水平居中对齐', 'text-vertical垂直居中对齐', 'text-uppercase可以将文字全部大写', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('107', 'qd', 'sxz', '2', '英文字母全部转为大写正确的是（）', 'text-transform: capitalize;`text-transform: lowercase;`text-transform: uppercase;`font-weight: bold;', 'text-transform: capitalize;', 'text-transform: lowercase;', 'text-transform: uppercase;', 'font-weight: bold;', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('108', 'qd', 'sxz', '2', '关于canvas不正确的是？', 'canvas是HTML5的一部分，允许脚本动态渲染位图像`canvas是作为Flash的替代技术出现`canvas拥有多种绘制路径、矩形、圆形、字符及添加图像的方法`Internet Explorer自Internet Explorer9起已经可以支持canvas', 'canvas是HTML5的一部分，允许脚本动态渲染位图像', 'canvas是作为Flash的替代技术出现', 'canvas拥有多种绘制路径、矩形、圆形、字符及添加图像的方法', 'Internet Explorer自Internet Explorer9起已经可以支持canvas', '2', 'B', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('109', 'qd', 'sxz', '2', '在css3中要使元素由一种样式转换成另一种样式，为元素添加效果的属性是？', 'animation`keyframes`flash`transition', 'animation', 'keyframes', 'flash', 'transition', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('110', 'qd', 'sxz', '2', '下列哪一个是页面载入时会触发什么Dom事件？', 'onchange`onaclive`onload`onresize', 'onchange', 'onaclive', 'onload', 'onresize', '3', 'C', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('111', 'qd', 'sxz', '2', '使用CSS的flexbox布局，不能实现以下哪一个效果：', '三列布局，随容器宽度等宽弹性伸缩`多列布局，每列的高度按内容最高的一列等高`三列布局，左列宽度像素数确定，中、右列随容器宽度等宽弹性伸缩`多个宽高不等的元素，实现无缝瀑布流布局', '三列布局，随容器宽度等宽弹性伸缩', '多列布局，每列的高度按内容最高的一列等高', '三列布局，左列宽度像素数确定，中、右列随容器宽度等宽弹性伸缩', '多个宽高不等的元素，实现无缝瀑布流布局', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('112', 'qd', 'sxz', '2', '以下全部属于块级标签的是？', '<div><p><input><span><img>`<div><h1><p><img><dl>`<span><h1><p><img><dl>`<div><p><form><ul><h1>', '<div><p><input><span><img>', '<div><h1><p><img><dl>', '<span><h1><p><img><dl>', '<div><p><form><ul><h1>', '4', 'D', 'HTML', '', '1', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('113', 'qd', 'sxz', '2', '关于HTML语义化，以下哪个说法是正确的？', '语义化的HTML有利于机器的阅读，如PDA手持设备、搜索引擎爬虫；但不利于人的阅读`Table 属于过时的标签，遇到数据列表时，需尽量使用 div 来模拟表格`语义化是HTML5带来的新概念，此前版本的HTML无法做到语义化`Header、article、address都属于语义化明确的标签', '语义化的HTML有利于机器的阅读，如PDA手持设备、搜索引擎爬虫；但不利于人的阅读', 'Table 属于过时的标签，遇到数据列表时，需尽量使用 div 来模拟表格', '语义化是HTML5带来的新概念，此前版本的HTML无法做到语义化', 'Header、article、address都属于语义化明确的标签', '4', 'D', 'HTML', '', '2', 'qd', '2017-03-09');
INSERT INTO `questionbank` VALUES ('114', 'qd', '语音题', '20', '请你谈谈Cookie的弊端', null, null, null, null, null, null, 'cookie虽然在持久保存客户端数据提供了方便，分担了服务器存储的负担，但还是有很多局限性的。\n第一：每个特定的域名下最多生成20个cookie\n\n1.IE6或更低版本最多20个cookie\n2.IE7和之后的版本最后可以有50个cookie。\n3.Firefox最多50个cookie\n4.chrome和Safari没有做硬性限制\nIE和Opera 会清理近期最少使用的cookie，Firefox会随机清理cookie。\n\ncookie的最大大约为4096字节，为了兼容性，一般不能超过4095字节。\n\nIE 提供了一种存储可以持久化用户数据，叫做uerData，从IE5.0就开始支持。每个数据最多128K，每个域名下最多1M。这个持久化数据放在缓存中，如果缓存没有清理，那么会一直存在。\n\n优点：极高的扩展性和可用性\n\n1.通过良好的编程，控制保存在cookie中的session对象的大小。\n2.通过加密和安全传输技术（SSL），减少cookie被破解的可能性。\n3.只在cookie中存放不敏感数据，即使被盗也不会有重大损失。\n4.控制cookie的生命期，使之不会永远有效。偷盗者很可能拿到一个过期的cookie。\n\n缺点：\n1.`Cookie`数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。\n\n2.安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。\n\n3.有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('115', 'qd', '语音题', '20', '简单说一下浏览器本地存储是怎样的', null, null, null, null, null, null, '在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localStorage来取代globalStorage。\n\nhtml5中的Web Storage包括了两种存储方式：sessionStorage和localStorage。\n\nsessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。\n\n而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('116', 'qd', '语音题', '20', 'web storage和cookie的区别', null, null, null, null, null, null, 'Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。\n\n除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n\n但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n\n浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n\nlocalStorage和sessionStorage都具有相同的操作方法，例如setItem、getItem和removeItem等', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('117', 'qd', '语音题', '20', 'display:none和visibility:hidden的区别？', null, null, null, null, null, null, 'display:none  隐藏对应的元素，在文档布局中不再给它分配空间，它各边的元素会合拢，\n就当他从来不存在。\n\nvisibility:hidden  隐藏对应的元素，但是在文档布局中仍保留原来的空间。', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('118', 'qd', '语音题', '20', 'CSS中 link 和@import 的区别是？', null, null, null, null, null, null, '(1) link属于HTML标签，而@import是CSS提供的; \n\n(2) 页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;\n\n(3) import只在IE5以上才能识别，而link是HTML标签，无兼容问题; \n\n(4) link方式的样式的权重 高于@import的权重.', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('119', 'qd', '语音题', '20', 'position的absolute与fixed共同点与不同点', null, null, null, null, null, null, 'A：共同点：\n1.改变行内元素的呈现方式，display被置为block；\n2.让元素脱离普通流，不占据空间；\n3.默认会覆盖到非定位元素上\n\nB不同点：\nabsolute的”根元素“是可以设置的，而fixed的”根元素“固定为浏览器窗口。\n当你滚动网页，fixed元素与浏览器窗口之间的距离是不变的。', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('120', 'qd', '语音题', '20', '介绍一下CSS的盒子模型？', null, null, null, null, null, null, '1）盒模型： 内容(content)、填充(padding)、边界(margin)、 边框(border)\n\n2）有两种， IE 盒子模型、标准 W3C 盒子模型；IE的content部分包含了 border 和 padding;', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('121', 'qd', '语音题', '20', 'CSS 选择符有哪些？哪些属性可以继承？优先级算法如何计算？ CSS3新增伪类有那些？', null, null, null, null, null, null, 'CSS 选择符：\n1.id选择器(# myid)\n2.类选择器(.myclassname)\n3.标签选择器(div, h1, p)\n4.相邻选择器(h1 + p)\n5.子选择器(ul > li)\n6.后代选择器(li a)\n7.通配符选择器( * )\n8.属性选择器(a[rel = \"external\"])\n9.伪类选择器(a: hover, li:nth-child)\n\n可继承的样式：\n1.font-size\n2.font-family\n3.color\n4.text-indent\n\n不可继承的样式：\n1.border\n2.padding\n3.margin\n4.width\n5.height\n\n优先级算法：\n1.优先级就近原则，同权重情况下样式定义最近者为准;\n2.载入样式以最后载入的定位为准;\n3.!important >  id > class > tag  \n4.important 比 内联优先级高，但内联比 id 要高\n\nCSS3新增伪类举例：\np:first-of-type 选择属于其父元素的首个 <p> 元素的每个 <p> 元素。\np:last-of-type  选择属于其父元素的最后 <p> 元素的每个 <p> 元素。\np:only-of-type  选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。\np:only-child    选择属于其父元素的唯一子元素的每个 <p> 元素。\np:nth-child(2)  选择属于其父元素的第二个子元素的每个 <p> 元素。\n:enabled :disabled 控制表单控件的禁用状态。\n:checked        单选框或复选框被选中。', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('122', 'qd', '语音题', '20', '列出display的值，说明他们的作用。position的值， relative和absolute分别是相对于谁进行定位的？', null, null, null, null, null, null, 'display 的值的作用： \n1.block 象块类型元素一样显示。\n2.inline 缺省值。象行内元素类型一样显示。\n3.inline-block 象行内元素一样显示，但其内容象块类型元素一样显示。\n4.list-item 象块类型元素一样显示，并添加样式列表标记。\n\nposition 的值的定位区别：\n1.absolute 生成绝对定位的元素，相对于 static 定位以外的第一个祖先元素进行定位。 \n2.fixed 生成绝对定位的元素，相对于浏览器窗口进行定位（老IE不支持）。\n3.relative 生成相对定位的元素，相对于其在普通流中的位置进行定位。 \n4.static 默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n5.inherit 规定从父元素继承 position 属性的值。', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('123', 'qd', '语音题', '20', 'CSS3有哪些新特性？', null, null, null, null, null, null, '1. CSS3实现圆角（border-radius），阴影（box-shadow），\n2. 对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）\n3. transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);// 旋转,缩放,定位,倾斜\n4. 增加了更多的CSS选择器  多背景 rgba \n5. 在CSS3中唯一引入的伪元素是 ::selection.\n6. 媒体查询，多栏布局\n7. border-image', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('124', 'qd', '语音题', '20', '为什么要初始化CSS样式。', null, null, null, null, null, null, '因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。\n\n当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。\n\n*最简单的初始化方法就是（不建议）：\n1\n{padding: 0; margin: 0;}\n\n淘宝的样式初始化： \n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\nbody, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\nbody, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\nh1, h2, h3, h4, h5, h6{ font-size:100%; }\naddress, cite, dfn, em, var { font-style:normal; }\ncode, kbd, pre, samp { font-family:couriernew, courier, monospace; }\nsmall{ font-size:12px; }\nul, ol { list-style:none; }\na { text-decoration:none; }\na:hover { text-decoration:underline; }\nsup { vertical-align:text-top; }\nsub{ vertical-align:text-bottom; }\nlegend { color:#000; }\nfieldset, img { border:0; }\nbutton, input, select, textarea { font-size:100%; }\ntable { border-collapse:collapse; border-spacing:0; }', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('125', 'qd', '语音题', '20', '对BFC规范的理解？', null, null, null, null, null, null, 'BFC，块级格式化上下文，一个创建了新的BFC的盒子是独立布局的，盒子里面的子元素的样式不会影响到外面的元素。在同一个 BFC 中的两个毗邻的块级盒在垂直方向（和布局方向有关系）的 margin 会发生折叠。\n\nW3C CSS 2.1 规范中的一个概念，它决定了元素如何对其内容进行布局，以及与其他元素的关系和相互作用。', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('126', 'qd', '语音题', '20', '解释下 CSS sprites，以及你要如何在页面或网站中使用它。', null, null, null, null, null, null, 'CSS Sprites 其实就是把网页中一些背景图片整合到一张图片文件中，再利用 CSS 的\"background-image\"，\"background-repeat\"，\"background-position\" 的组合进行背景定位，background-position 可以用数字能精确的定位出背景图片的位置。这样可以减少很多图片请求的开销，因为请求耗时比较长；请求虽然可以并发，但是也有限制，一般浏览器都是6个。对于未来而言，就不需要这样做了，因为有了 http2。', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('127', 'qd', '语音题', '20', '说说你对语义化的理解？', null, null, null, null, null, null, '1. 去掉或者丢失样式的时候能够让页面呈现出清晰的结构\n2. 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n3. 方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；\n4. 便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。', 'HTML', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('128', 'qd', '语音题', '20', 'Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?', null, null, null, null, null, null, '1. <!DOCTYPE> 声明位于文档中的最前面，处于 <html> 标签之前。告知浏览器以何种模式来渲染文档。 \n2. 严格模式的排版和 JS 运作模式是  以该浏览器支持的最高标准运行。\n3. 在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。\n4. DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。', 'HTML', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('129', 'qd', '语音题', '20', '你知道多少种Doctype文档类型？', null, null, null, null, null, null, '1. 该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的 HTML 文档。\n2. HTML 4.01 规定了三种文档类型：Strict、Transitional 以及 Frameset。\n3. XHTML 1.0 规定了三种 XML 文档类型：Strict、Transitional 以及 Frameset。\n4. Standards （标准）模式（也就是严格呈现模式）用于呈现遵循最新标准的网页，而 Quirks（包容）模式（也就是松散呈现模式或者兼容模式）用于呈现为传统浏览器而设计的网页。', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('130', 'qd', '语音题', '20', 'HTML与XHTML——二者有什么区别', null, null, null, null, null, null, '1. 所有的标记都必须要有一个相应的结束标记\n2. 所有标签的元素和属性的名字都必须使用小写\n3. 所有的 XML 标记都必须合理嵌套\n4. 所有的属性必须用引号 \"\" 括起来\n5. 把所有 < 和 & 特殊符号用编码表示\n6. 给所有属性赋一个值\n7. 不要在注释内容中使用 \"--\"\n8. 图片必须有说明文字', 'HTML', '开放题，答对5点即可。', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('131', 'qd', '语音题', '20', 'html常见兼容性问题？', null, null, null, null, null, null, '1. png24位的图片在iE6浏览器上出现背景\n解决方案：做成PNG8，也可以引用一段脚本处理.\n\n2. 浏览器默认的margin和padding不同\n解决方案：加一个全局的 *{margin:0;padding:0;} 来统一。\n\n3. IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或margin-right，margin值会加倍。\n1\n#box{ float:left; width:10px; margin:0 0 0 10px;} \n这种情况之下IE会产生20px的距离\n解决方案：在float的标签样式控制中加入 _display:inline; 将其转化为行内属性。( _ 这个符号只有ie6会识别)\n\n4. 渐进识别的方式，从总体中逐渐排除局部。 \n首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。 \n接着，再次使用 \"+\" 将IE8和IE7、IE6分离开来，这样IE8已经独立识别。\n1\n2\n3\n4\n5\n6\n.bb{\n    background-color:#f1ee18; /*所有识别*/\n    .background-color:#00deff\\9; /*IE6、7、8识别*/\n    +background-color:#a200ff; /*IE6、7识别*/\n    _background-color:#1e0bd1; /*IE6识别*/ \n} \n\n5.IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用 getAttribute() 获取自定义属性；Firefox下,只能使用getAttribute()获取自定义属性\n解决方法：统一通过getAttribute()获取自定义属性\n\n6. IE下，event对象有 x、y 属性，但是没有 pageX、pageY属性; Firefox下，event对象有 pageX、pageY 属性，但是没有 x、y 属性\n解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。\n\n7. Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示\n解决方法：可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决\n\n8. 超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了\n解决方法：改变CSS属性的排列顺序 L-V-H-A\n1\n2\n3\n4\na:link {}\na:visited {}\na:hover {}\na:active {}\n\n9. 怪异模式问题：漏写 DTD 声明，Firefox 仍然会按照标准模式来解析网页，但在 IE 中会触发怪异模式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写 DTD 声明的好习惯。现在可以使用[html5](http://www.w3.org/TR/html5/single-page.html) 推荐的写法：<!DOCTYPE html>\n\n10. 上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。\n解决方法：养成良好的代码编写习惯，同时采用margin-top或者同时采用margin-bottom。\n\n11. ie6对png图片格式支持不好\n解决方案：引用一段脚本处理', 'HTML', '开放题，答对即可。', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('132', 'qd', '语音题', '20', '解释下浮动和它的工作原理？清除浮动的技巧', null, null, null, null, null, null, '浮动元素脱离文档流，不占据空间。浮动元素碰到包含它的边框或者浮动元素的边框停留。\n\n1. 使用空标签清除浮动。\n这种方法是在所有浮动标签后面添加一个空标签 定义css clear:both. 弊端就是增加了无意义标签。\n\n2. 使用overflow。\n给包含浮动元素的父标签添加css属性 overflow:auto; zoom:1; zoom:1用于兼容IE6。\n\n3. 使用after伪对象清除浮动。\n该方法只适用于非IE浏览器。具体写法可参照以下示例。使用中需注意以下几点。一、该方法中必须为需要清除浮动元素的伪对象中设置 height:0，否则该元素会比实际高出若干像素；', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('133', 'qd', '语音题', '20', '浮动元素引起的问题和解决办法？', null, null, null, null, null, null, '浮动元素引起的问题：\n1. 父元素的高度无法被撑开，影响与父元素同级的元素\n2. 与浮动元素同级的非浮动元素会跟随其后\n3. 若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构\n\n解决方法：\n使用 CSS 中的 clear:both; 属性来清除元素的浮动可解决2、3问题，对于问题1，添加如下样式，给父元素添加clearfix样式：\n1\n2\n.clearfix:after{content: \".\";display: block;height: 0;clear: both;visibility: hidden;}\n.clearfix{display: inline-block;} /* for IE/Mac */\n\n清除浮动的几种方法：\n1. 额外标签法，<div style=\"clear:both;\"></div>（缺点：不过这个办法会增加额外的标签使HTML结构看起来不够简洁。）\n2. 使用after伪元素\n1\n2\n3\n4\n5\n6\n7\n#parent:after{\n    content:\".\";\n    height:0;\n    visibility:hidden;\n    display:block;\n    clear:both;\n}\n3. 浮动外部元素\n4. 设置 overflow 为 hidden 或者 auto', 'CSS', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('134', 'qd', '语音题', '20', 'IE 8以下版本的浏览器中的盒模型有什么不同', null, null, null, null, null, null, 'IE8以下浏览器的盒模型中定义的元素的宽高包括内边距和边框', 'CSS', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('135', 'ht', 'sxz', '2', 'DOM操作——怎样添加、移除、移动、复制、创建和查找节点。', null, null, null, null, null, null, '1. 创建新节点\n1\n2\n3\ncreateDocumentFragment() // 创建一个DOM片段\ncreateElement() // 创建一个具体的元素\ncreateTextNode() // 创建一个文本节点\n\n2. 添加、移除、替换、插入\n1\n2\n3\n4\nappendChild()\nremoveChild()\nreplaceChild()\ninsertBefore() // 在已有的子节点前插入一个新的子节点\n\n3. 查找\n1\n2\n3\ngetElementsByTagName() // 通过标签名称\ngetElementsByName() // 通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)\ngetElementById() // 通过元素Id，唯一性', 'JQuery', '', '1', 'ht', '2017-03-10');
INSERT INTO `questionbank` VALUES ('136', 'qd', '语音题', '20', 'html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？', null, null, null, null, null, null, '新特性：\nHTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。\n1. 拖拽释放(Drag and drop) API \n2. 语义化更好的内容标签（header,nav,footer,aside,article,section）\n3. 音频、视频API(audio,video)\n4. 画布(Canvas) API\n5. 地理(Geolocation) API\n6. 本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；\n7. sessionStorage 的数据在浏览器关闭后自动删除\n8. 表单控件，calendar、date、time、email、url、search  \n9. 新的技术webworker, websocket, Geolocation\n\n移除的元素：\n1. 纯表现的元素：basefont，big，center，font, s，strike，tt，u；\n2. 对可用性产生负面影响的元素：frame，frameset，noframes；\n\n支持HTML5新标签：\n1. IE8/IE7/IE6支持通过 document.createElement 方法产生的标签，可以利用这一特性让这些浏览器支持 HTML5 新标签，浏览器支持新标签后，还需要添加标签默认的样式（当然最好的方式是直接使用成熟的框架、使用最多的是html5shiv框架）：\n1\n2\n3\n<!--[if lt IE 9]> \n<script> src=\"http://html5shiv.googlecode.com/svn/trunk/html5.js\"</script> \n<![endif]--> \n如何区分： \nDOCTYPE声明新增的结构元素、功能元素', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('137', 'qd', '语音题', '20', 'iframe的优缺点？', null, null, null, null, null, null, '优点：\n1. 解决加载缓慢的第三方内容如图标和广告等的加载问题\n2. Security sandbox\n3. 并行加载脚本\n\n缺点：\n1. iframe会阻塞主页面的Onload事件\n2. 即时内容为空，加载也需要时间\n3. 没有语意', 'HTML', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('138', 'ht', '语音题', '20', '如何实现浏览器内多个标签页之间的通信?', null, null, null, null, null, null, '调用 localstorge、cookies 等本地存储方式', 'JQuery', '', '1', 'ht', '2017-03-10');
INSERT INTO `questionbank` VALUES ('139', 'qd', '语音题', '20', 'webSocket 如何兼容低浏览器？', null, null, null, null, null, null, 'Adobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR', 'HTML', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('140', 'qd', '语音题', '20', '线程与进程的区别', null, null, null, null, null, null, '1. 一个程序至少有一个进程,一个进程至少有一个线程\n2. 线程的划分尺度小于进程，使得多线程程序的并发性高\n3. 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率\n4. 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制 \n5. 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('141', 'qd', '语音题', '20', '你如何对网站的文件和资源进行优化？', null, null, null, null, null, null, '期待的解决方案包括：\n1. 文件合并\n2. 文件最小化/文件压缩\n3. 使用 CDN 托管\n4. 缓存的使用（多个域名来提供缓存）\n5. 其他', 'HTML', '开放题，答对2点即可。', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('142', 'qd', '语音题', '20', '请说出三种减少页面加载时间的方法', null, null, null, null, null, null, '1. 优化图片 \n2. 图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方） \n3. 优化CSS（压缩合并css，如 margin-top, margin-left...) \n4. 网址后加斜杠（如www.campr.com/目录，会判断这个目录是什么文件类型，或者是目录。） \n5. 标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。 \n当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了） \n6. 减少http请求（合并文件，合并图片）', 'HTML', '答出3点即可。', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('143', 'qd', '语音题', '20', '你都使用哪些工具来测试代码的性能？', null, null, null, null, null, null, '1. Profiler\n2. JSPerf（http://jsperf.com/nexttick-vs-setzerotimeout-vs-settimeout）\n3. Dromaeo', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('144', 'ht', '语音题', '20', '什么是 FOUC（无样式内容闪烁）？你如何来避免 FOUC？', null, null, null, null, null, null, 'FOUC - Flash Of Unstyled Content 文档样式闪烁\n<style type=\"text/css\" media=\"all\">@import \"../fouc.css\";</style> \n而引用CSS文件的@import就是造成这个问题的罪魁祸首。IE会先加载整个HTML文档的DOM，然后再去导入外部的CSS文件，因此，在页面DOM加载完成到CSS导入完成中间会有一段时间页面上的内容是没有样式的，这段时间的长短跟网速，电脑速度都有关系。\n解决方法简单的出奇，只要在<head>之间加入一个<link>或者<script>元素就可以了。', 'JQuery', '', '1', 'ht', '2017-03-10');
INSERT INTO `questionbank` VALUES ('145', 'qd', '语音题', '20', 'null和undefined的区别？', null, null, null, null, null, null, 'null是一个表示\"无\"的对象，转为数值时为0\nundefined是一个表示\"无\"的原始值，转为数值时为NaN\n\n当声明的变量还未被初始化时，变量的默认值为undefined\nnull用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象\n\nundefined表示 “缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：\n1. 变量被声明了，但没有赋值时，就等于 undefined\n2. 调用函数时，应该提供的参数没有提供，该参数等于 undefined\n3. 对象没有赋值的属性，该属性的值为 undefined\n4. 函数没有返回值时，默认返回 undefined\n\nnull表示“没有对象”，即该处不应该有值。典型用法是：\n1. 作为函数的参数，表示该函数的参数不是对象\n2. 作为对象原型链的终点', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('146', 'qd', '语音题', '20', 'new操作符具体干了什么呢?', null, null, null, null, null, null, '1. 创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型\n2. 属性和方法被加入到 this 引用的对象中\n3. 新创建的对象由 this 所引用，并且最后隐式的返回 this\n\n1\n2\n3\nvar obj  = {};\nobj.__proto__ = Base.prototype;\nBase.call(obj);', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('147', 'qd', '语音题', '20', '对JSON 的了解？', null, null, null, null, null, null, 'JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小。\n1\n{\"age\":\"12\", \"name\":\"back\"}', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('148', 'qd', '语音题', '20', 'js延迟加载的方式有哪些？', null, null, null, null, null, null, '1. defer和async\n2. 动态创建DOM方式（创建script，插入到DOM中，加载完毕后callBack）\n3. 按需异步载入js', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('149', 'qd', '语音题', '20', '如何解决跨域问题?', null, null, null, null, null, null, '1. jsonp（jsonp 的原理是动态插入 script 标签）\n2. document.domain + iframe\n3. window.name、window.postMessage\n4. 服务器上设置代理页面', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('150', 'qd', '语音题', '20', 'documen.write和 innerHTML 的区别', null, null, null, null, null, null, 'document.write 只能重绘整个页面\n\ninnerHTML 可以重绘页面的一部分', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('151', 'qd', '语音题', '20', '.call() 和 .apply() 的作用？', null, null, null, null, null, null, '动态改变某个类的某个方法的运行环境', 'JavaScript', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('152', 'qd', '语音题', '20', '哪些操作会造成内存泄漏？', null, null, null, null, null, null, '内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。\n垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。\n\n1. setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。\n2. 闭包\n3. 控制台日志\n4. 循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）', 'HTML', '', '1', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('153', 'ht', '语音题', '20', '如何判断当前脚本运行在浏览器还是node环境中？', null, null, null, null, null, null, '通过判断 Global 对象是否为window，如果不为window，当前脚本没有运行在浏览器中。即在node中的全局变量是global ,浏览器的全局变量是window。 可以通过该全局变量是否定义来判断宿主环境', 'JQuery', '', '1', 'ht', '2017-03-10');
INSERT INTO `questionbank` VALUES ('154', 'qd', '语音题', '20', '什么叫优雅降级和渐进增强？', null, null, null, null, null, null, '1. 优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会检查以确认它们是否能正常工作。由于IE独特的盒模型布局问题，针对不同版本的IE的hack实践过优雅降级了,为那些无法支持功能的浏览器增加候选方案，使之在旧式浏览器上以某种形式降级体验却不至于完全失效。\n\n2. 渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新式浏览器才支持的功能,向页面增加无害于基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('155', 'qd', '语音题', '20', '对Node的优点和缺点提出了自己的看法？', null, null, null, null, null, null, '优点：\n1. 因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。\n2. 与Node代理服务器交互的客户端代码是由javascript语言编写的，因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。\n\n缺点：\n1. Node是一个相对新的开源项目，所以不太稳定，它总是一直在变。\n2. 缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子（第三方库现在已经很丰富了，所以这个缺点可以说不存在了）', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('156', 'qd', '语音题', '20', '对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？', null, null, null, null, null, null, '前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。\n1. 实现界面交互\n2. 提升用户体验\n3. 有了Node.js，前端可以实现服务端的一些事情\n\n前景：\n1. 前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好\n2. 参与项目，快速高质量完成实现效果图，精确到1px；\n3. 与团队成员，UI设计，产品经理的沟通；\n4. 做好的页面结构，页面重构和用户体验；\n5. 处理hack，兼容、写出优美的代码格式；\n6. 针对服务器的优化、拥抱最新前端技术。', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('157', 'qd', '语音题', '20', '你有哪些性能优化的方法？', null, null, null, null, null, null, '1. 减少http请求次数：CSS Sprites, JS、CSS 源码压缩、图片大小控制合适；网页 Gzip，CDN 托管，data 缓存 ，图片服务器\n2. 前端模板 JS + 数据，减少由于HTML标签导致的带宽浪费，前端用变量保存 AJAX 请求结果，每次操作本地变量，不用请求，减少请求次数\n3. 用 innerHTML 代替 DOM 操作，减少 DOM 操作次数，优化 javascript 性能\n4. 当需要设置的样式很多时设置 className 而不是直接操作 style\n5. 少用全局变量、缓存DOM节点查找的结果。减少 IO 读取操作\n6. 避免使用 CSS Expression（css表达式)又称 Dynamic properties(动态属性)\n7. 图片预加载，将样式表放在顶部，将脚本放在底部，加上时间戳', 'JavaScript', '开放题，答出4点即可。', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('158', 'qd', '语音题', '20', 'http状态码有那些？分别代表是什么意思？', null, null, null, null, null, null, '1. 100-199 用于指定客户端应相应的某些动作\n2. 200-299 用于表示请求成功\n3. 300-399 用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息\n4. 400-499 用于指出客户端的错误\n    400：语义有误，当前请求无法被服务器理解\n    401：当前请求需要用户验证\n    403：服务器已经理解请求，但是拒绝执行它\n5. 500-599 用于支持服务器错误\n    503：服务不可用', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('159', 'qd', '语音题', '20', '一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？', null, null, null, null, null, null, '分为4个步骤：\n1. 当发送一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个请求，同时在远程 DNS 服务器上启动一个 DNS 查询。这能使浏览器获得请求对应的 IP 地址。\n2. 浏览器与远程 Web 服务器通过 TCP 三次握手协商来建立一个 TCP/IP 连接。该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由客户端发出该请求已经被接受的报文。\n3. 一旦 TCP/IP 连接建立，浏览器会通过该连接向远程服务器发送 HTTP 的 GET 请求。远程服务器找到资源并使用 HTTP 响应返回该资源，值为 200 的 HTTP 响应状态表示一个正确的响应。\n4. 此时，Web 服务器提供资源服务，客户端开始下载资源。\n\n请求返回后，便进入了我们关注的前端模块\n简单来说，浏览器会解析 HTML 生成 DOM Tree，其次会根据 CSS 生成 CSS Rule Tree，而 javascript 又可以根据 DOM API 操作 DOM', 'HTML', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('160', 'qd', '语音题', '20', '平时如何管理你的项目？', null, null, null, null, null, null, '1. 先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等\n2. 编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）\n3. 标注样式编写人，各模块都及时标注（标注关键样式调用的地方）\n4. 页面进行标注（例如 页面 模块 开始和结束）\n5. CSS 跟 HTML 分文件夹并行存放，命名都得统一（例如 style.css）\n6. JS 分文件夹存放 命名以该 JS 功能为准的英文翻译\n7. 图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理', 'HTML', '开放题，合理即可。', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('161', 'qd', '语音题', '20', '说说最近最流行的一些东西吧？常去的哪些网站？', null, null, null, null, null, null, '最流行的一些东西：\n1. Node.js\n2. Mongodb\n3. npm\n4. MVVM\n5. MEAN\n6. three.js\n7. React\n\n常去的网站：\n1. 牛客网\n2. Github\n3. CSDN', 'HTML', '开放题，根据自身情况说明即可。', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('162', 'qd', '语音题', '20', 'javascript对象的几种创建方式', null, null, null, null, null, null, '1. 工厂模式\n2. 构造函数模式\n3. 原型模式\n4. 混合构造函数和原型模式\n5. 动态原型模式\n6. 寄生构造函数模式\n7. 稳妥构造函数模式', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('163', 'qd', '语音题', '20', 'javascript继承的 6 种方法', null, null, null, null, null, null, '1. 原型链继承\n2. 借用构造函数继承\n3. 组合继承(原型+借用构造)\n4. 原型式继承\n5. 寄生式继承\n6. 寄生组合式继承', 'JavaScript', '', '2', 'qd', '2017-03-10');
INSERT INTO `questionbank` VALUES ('164', 'ht', '语音题', '20', 'ajax 的过程是怎样的', null, null, null, null, null, null, '1. 创建XMLHttpRequest对象,也就是创建一个异步调用对象\n2. 创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息\n3. 设置响应HTTP请求状态变化的函数\n4. 发送HTTP请求\n5. 获取异步调用返回的数据\n6. 使用JavaScript和DOM实现局部刷新', 'JQuery', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('165', 'ht', '语音题', '20', '异步加载和延迟加载', null, null, null, null, null, null, '1. 异步加载的方案： 动态插入 script 标签\n2. 通过 ajax 去获取 js 代码，然后通过 eval 执行\n3. script 标签上添加 defer 或者 async 属性\n4. 创建并插入 iframe，让它异步执行 js\n5. 延迟加载：有些 js 代码并不是页面初始化的时候就立刻需要的，而稍后的某些情况才需要的', 'JQuery', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('166', 'qd', '语音题', '20', '前端的安全问题？', null, null, null, null, null, null, '1. XSS\n2. sql注入\n3. CSRF：是跨站请求伪造，很明显根据刚刚的解释，他的核心也就是请求伪造，通过伪造身份提交POST和GET请求来进行跨域的攻击\n\n完成CSRF需要两个步骤：\n1. 登陆受信任的网站A，在本地生成 COOKIE\n2. 在不登出A的情况下，或者本地 COOKIE 没有过期的情况下，访问危险网站B。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('167', 'qd', '语音题', '20', 'ie 各版本和 chrome 可以并行下载多少个资源', null, null, null, null, null, null, '1. IE6 2 个并发\n2. iE7 升级之后的 6 个并发，之后版本也是 6 个\n3. Firefox，chrome 也是6个', 'HTML', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('168', 'qd', '语音题', '20', 'javascript里面的继承怎么实现，如何避免原型链上面的对象共享', null, null, null, null, null, null, '用构造函数和原型链的混合模式去实现继承，避免对象共享可以参考经典的extend()函数，很多前端框架都有封装的，就是用一个空函数当做中间变量', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('169', 'qd', 'cz', '15', 'grunt， YUI compressor 和 google clojure用来进行代码压缩的用法。', null, null, null, null, null, null, 'grunt：\nUglifyJS 是基于 NodeJS 的 Javascript 语法解析/压缩/格式化工具\n官网：http://lisperator.net/uglifyjs/ 或者 https://github.com/mishoo/UglifyJS2\n安装：\n1\n$ npm install uglify-js -g\n使用方法见官网 demo\n\nYUI compressor：\nYUI Compressor 是一个用来压缩 JS 和 CSS 文件的工具，采用Java开发。\n使用方法：\n1\n2\n3\n4\n// 压缩JS\njava -jar yuicompressor-2.4.2.jar --type js --charset utf-8 -v src.js > packed.js\n// 压缩CSS\njava -jar yuicompressor-2.4.2.jar --type css --charset utf-8 -v src.css > packed.css\n\nGoogle Closure Compiler：\n官网：https://developers.google.com/closure/compiler/\n使用方法：\n1. 在命令行下使用一个google编译好的java程序\n2. 使用google提供的在线服务\n3. 使用google提供的RESTful API', 'JavaScript', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('170', 'qd', '语音题', '20', 'Flash、Ajax各自的优缺点，在使用中如何取舍？', null, null, null, null, null, null, 'Flash：\n1. Flash适合处理多媒体、矢量图形、访问机器\n2. 对CSS、处理文本上不足，不容易被搜索\n\nAjax：\n1. Ajax对CSS、文本支持很好，支持搜索\n2. 多媒体、矢量图形、机器访问不足\n\n共同点：\n1. 与服务器的无刷新传递消息\n2. 可以检测用户离线和在线状态\n2. 操作DOM', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('171', 'qd', '语音题', '20', '请解释一下 JavaScript 的同源策略。', null, null, null, null, null, null, '概念：\n同源策略是客户端脚本（尤其是Javascript）的重要的安全度量标准。它最早出自Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。\n这里的同源策略指的是：协议，域名，端口相同，同源策略是一种安全协议，指一段脚本只能读取来自同一来源的窗口和文档的属性。\n\n为什么要有同源限制：\n我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('172', 'qd', '语音题', '20', '为什么要有同源限制？', null, null, null, null, null, null, '我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('173', 'ht', '语音题', '20', '什么是 \"use strict\"; ? 使用它的好处和坏处分别是什么？', null, null, null, null, null, null, 'ECMAscript 5添加了第二种运行模式：\"严格模式\"（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。\n\n设立\"严格模式\"的目的，主要有以下几个：\n1. 消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;\n2. 消除代码运行的一些不安全之处，保证代码运行的安全；\n3. 提高编译器效率，增加运行速度；\n4. 为未来新版本的Javascript做好铺垫。\n注：经过测试 IE6,7,8,9 均不支持严格模式。\n\n缺点：\n现在网站的 JS 都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge 后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节。', 'JQuery', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('174', 'qd', '语音题', '20', 'GET和POST的区别，何时使用POST？', null, null, null, null, null, null, 'GET：一般用于信息获取，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符\nPOST：一般用于修改服务器上的资源，对所发送的信息没有限制\n\nGET方式需要使用 Request.QueryString 来取得变量的值\nPOST方式通过 Request.Form 来获取变量的值\n也就是说 Get 是通过地址栏来传值，而 Post 是通过提交表单来传值。\n\n在以下情况中，请使用 POST 请求：\n1. 无法使用缓存文件（更新服务器上的文件或数据库）\n2. 向服务器发送大量数据（POST 没有数据量限制）\n3. 发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('175', 'qd', '语音题', '20', '哪些地方会出现css阻塞，哪些地方会出现js阻塞？', null, null, null, null, null, null, 'js 的阻塞特性：所有浏览器在下载 JS 的时候，会阻止一切其他活动，比如其他资源的下载，内容的呈现等等。直到 JS 下载、解析、执行完毕后才开始继续并行下载其他资源并呈现内容。为了提高用户体验，新一代浏览器都支持并行下载 JS，但是 JS 下载仍然会阻塞其它资源的下载（例如.图片，css文件等）。\n由于浏览器为了防止出现 JS 修改 DOM 树，需要重新构建 DOM 树的情况，所以就会阻塞其他的下载和呈现。\n嵌入 JS 会阻塞所有内容的呈现，而外部 JS 只会阻塞其后内容的显示，2 种方式都会阻塞其后资源的下载。也就是说外部样式不会阻塞外部脚本的加载，但会阻塞外部脚本的执行。\n\nCSS 怎么会阻塞加载了？CSS 本来是可以并行下载的，在什么情况下会出现阻塞加载了(在测试观察中，IE6 下 CSS 都是阻塞加载）\n当 CSS 后面跟着嵌入的 JS 的时候，该 CSS 就会出现阻塞后面资源下载的情况。而当把嵌入 JS 放到 CSS 前面，就不会出现阻塞的情况了。\n根本原因：因为浏览器会维持 html 中 css 和 js 的顺序，样式表必须在嵌入的 JS 执行前先加载、解析完。而嵌入的 JS 会阻塞后面的资源加载，所以就会出现上面 CSS 阻塞下载的情况。\n\n嵌入JS应该放在什么位置？\n1. 放在底部，虽然放在底部照样会阻塞所有呈现，但不会阻塞资源下载。\n2. 如果嵌入JS放在head中，请把嵌入JS放在CSS头部。\n3. 使用 defer（只支持IE）\n4. 不要在嵌入的JS中调用运行时间较长的函数，如果一定要用，可以用 setTimeout 来调用\n\nJavascript无阻塞加载具体方式：\n1. 将脚本放在底部。<link>还是放在head中，用以保证在js加载前，能加载出正常显示的页面。<script>标签放在</body>前。\n2. 阻塞脚本：由于每个<script>标签下载时阻塞页面解析过程，所以限制页面的<script>总数也可以改善性能。适用于内联脚本和外部脚本。\n3. 非阻塞脚本：等页面完成加载后，再加载js代码。也就是，在 window.onload 事件发出后开始下载代码。\n4. defer属性：支持IE4和fierfox3.5更高版本浏览器\n5. 动态脚本元素：文档对象模型（DOM）允许你使用js动态创建HTML的几乎全部文档内容。代码如下：\n1\n2\n3\n4\n5\n6\n<script>\n    var script=document.createElement(\"script\");\n    script.type=\"text/javascript\";\n    script.src=\"file.js\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n</script>\n此技术的重点在于：无论在何处启动下载，文件额下载和运行都不会阻塞其他页面处理过程，即使在head里（除了用于下载文件的 http 链接）。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('176', 'qd', '语音题', '20', 'eval是做什么的？', null, null, null, null, null, null, '1. 它的功能是把对应的字符串解析成JS代码并运行\n2. 应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('177', 'qd', 'bc', '10', '写一个通用的事件侦听器函数', null, null, null, null, null, null, '// event(事件)工具集，来源：github.com/markyun\nmarkyun.Event = {\n    // 页面加载完成后\n    readyEvent : function(fn) {\n        if (fn==null) {\n            fn=document;\n        }\n        var oldonload = window.onload;\n        if (typeof window.onload != \'function\') {\n            window.onload = fn;\n        } else {\n            window.onload = function() {\n                oldonload();\n                fn();\n            };\n        }\n    },\n    // 视能力分别使用dom0||dom2||IE方式 来绑定事件\n    // 参数： 操作的元素,事件名称 ,事件处理程序\n    addEvent : function(element, type, handler) {\n        if (element.addEventListener) {\n            //事件类型、需要执行的函数、是否捕捉\n            element.addEventListener(type, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\'on\' + type, function() {\n                handler.call(element);\n            });\n        } else {\n            element[\'on\' + type] = handler;\n        }\n    },\n    // 移除事件\n    removeEvent : function(element, type, handler) {\n        if (element.removeEnentListener) {\n            element.removeEnentListener(type, handler, false);\n        } else if (element.detachEvent) {\n            element.detachEvent(\'on\' + type, handler);\n        } else {\n            element[\'on\' + type] = null;\n        }\n    }, \n    // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)\n    stopPropagation : function(ev) {\n        if (ev.stopPropagation) {\n            ev.stopPropagation();\n        } else {\n            ev.cancelBubble = true;\n        }\n    },\n    // 取消事件的默认行为\n    preventDefault : function(event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        } else {\n            event.returnValue = false;\n        }\n    },\n    // 获取事件目标\n    getTarget : function(event) {\n        return event.target || event.srcElement;\n    },\n    // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；\n    getEvent : function(e) {\n        var ev = e || window.event;\n        if (!ev) {\n            var c = this.getEvent.caller;\n            while (c) {\n                ev = c.arguments[0];\n                if (ev && Event == ev.constructor) {\n                    break;\n                }\n                c = c.caller;\n            }\n        }\n        return ev;\n    }\n};', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('178', 'qd', 'cz', '20', 'Node.js 的适用场景', null, null, null, null, null, null, '1. 高并发\n2. 聊天\n3. 实时消息推送', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('179', 'qd', '语音题', '20', 'JavaScript 原型，原型链 ? 有什么特点？', null, null, null, null, null, null, '1. 原型对象也是普通的对象，是对象一个自带隐式的 __proto__ 属性，原型也有可能有自己的原型，如果一个原型对象的原型不为 null 的话，我们就称之为原型链\n2. 原型链是由一些用来继承和共享属性的对象组成的（有限的）对象链', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('180', 'qd', '语音题', '20', '怎么重构页面？', null, null, null, null, null, null, '1. 编写 CSS\n2. 让页面结构更合理化，提升用户体验\n3. 实现良好的页面效果和提升性能', 'CSS', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('181', 'qd', '语音题', '20', 'WEB应用从服务器主动推送Data到客户端有那些方式？', null, null, null, null, null, null, '1. html5 websocket\n2. WebSocket 通过 Flash\n3. XHR长时间连接\n4. XHR Multipart Streaming\n5. 不可见的Iframe\n6. <script>标签的长时间连接(可跨域)', 'HTML', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('182', 'qd', '语音题', '20', '事件、IE与火狐的事件机制有什么区别？ 如何阻止冒泡？', null, null, null, null, null, null, '1. 我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为\n2. 事件处理机制：IE是事件冒泡、firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件\n3. ev.stopPropagation();\n注意旧ie的方法：ev.cancelBubble = true;', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('183', 'qd', '语音题', '20', 'Ajax 是什么？Ajax 的交互模型？同步和异步的区别？如何解决跨域问题？', null, null, null, null, null, null, 'Ajax 是什么：\n1. 通过异步模式，提升了用户体验\n2. 优化了浏览器和服务器之间的传输，减少不必要的数据往返，减少了带宽占用\n3. Ajax 在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载。\n\nAjax 的最大的特点：\n1. Ajax可以实现动态不刷新（局部刷新）\n2. readyState 属性 状态 有5个可取值： 0 = 未初始化，1 = 启动， 2 = 发送，3 = 接收，4 = 完成\n\nAjax 同步和异步的区别:\n1. 同步：提交请求 -> 等待服务器处理 -> 处理完毕返回，这个期间客户端浏览器不能干任何事\n2. 异步：请求通过事件触发 -> 服务器处理（这是浏览器仍然可以作其他事情）-> 处理完毕\najax.open方法中，第3个参数是设同步或者异步。\n\nAjax 的缺点：\n1. Ajax 不支持浏览器 back 按钮\n2. 安全问题 Ajax 暴露了与服务器交互的细节\n3. 对搜索引擎的支持比较弱\n4. 破坏了程序的异常机制\n5. 不容易调试\n\n解决跨域问题：\n1. jsonp\n2. iframe\n3. window.name、window.postMessage\n4. 服务器上设置代理页面', 'JavaScript', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('184', 'qd', 'bc', '10', 'js对象的深度克隆代码实现', null, null, null, null, null, null, 'function clone(Obj) {\n    var buf;   \n    if (Obj instanceof Array) {\n        buf = [];  // 创建一个空的数组\n        var i = Obj.length;\n        while (i--) {\n            buf[i] = clone(Obj[i]);\n        }\n        return buf;\n    } else if (Obj instanceof Object){\n        buf = {};  // 创建一个空对象\n        for (var k in Obj) {  // 为这个对象添加新的属性\n            buf[k] = clone(Obj[k]);\n        }\n        return buf;\n    }else{\n        return Obj;\n    }\n}', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('185', 'qd', '语音题', '20', '对网站重构的理解', null, null, null, null, null, null, '网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。也就是说是在不改变 UI 的情况下，对网站进行优化，在扩展的同时保持一致的 UI。\n\n对于传统的网站来说重构通常是：\n1. 表格(table)布局改为 DIV + CSS\n2. 使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对 IE6 有效的)\n3. 对于移动平台的优化\n4. 针对于 SEO 进行优化\n5. 深层次的网站重构应该考虑的方面\n6. 减少代码间的耦合\n7. 让代码保持弹性\n8. 严格按规范编写代码\n9. 设计可扩展的API\n10. 代替旧有的框架、语言(如VB)\n11. 增强用户体验\n12. 通常来说对于速度的优化也包含在重构中\n13. 压缩JS、CSS、image等前端资源(通常是由服务器来解决)\n14. 程序的性能优化(如数据读写)\n15. 采用CDN来加速资源加载\n16. 对于JS DOM的优化\n17. HTTP服务器的文件缓存', 'HTML', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('186', 'qd', 'bc', '10', '如何获取UA', null, null, null, null, null, null, '<script> \nfunction whatBrowser() {  \n    document.Browser.Name.value=navigator.appName;  \n    document.Browser.Version.value=navigator.appVersion;  \n    document.Browser.Code.value=navigator.appCodeName;  \n    document.Browser.Agent.value=navigator.userAgent;  \n}\n</script>', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('187', 'qd', '语音题', '20', 'HTTP状态码', null, null, null, null, null, null, '100 Continue  继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息\n200 OK   正常返回信息\n201 Created  请求成功并且服务器创建了新的资源\n202 Accepted  服务器已接受请求，但尚未处理\n301 Moved Permanently  请求的网页已永久移动到新位置\n302 Found  临时性重定向\n303 See Other  临时性重定向，且总是使用 GET 请求新的 URI\n304 Not Modified  自从上次请求后，请求的网页未修改过\n400 Bad Request  服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求\n401 Unauthorized  请求未授权\n403 Forbidden  禁止访问\n404 Not Found  找不到如何与 URI 相匹配的资源\n500 Internal Server Error  最常见的服务器端错误\n503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('188', 'qd', '语音题', '20', 'cache-control', null, null, null, null, null, null, '网页的缓存是由HTTP消息头中的“Cache-control”来控制的，常见的取值有private、no-cache、max-age、must-revalidate等，默认为private。\n\nExpires 头部字段提供一个日期和时间，响应在该日期和时间后被认为失效。允许客户端在这个时间之前不去检查（发请求），等同max-age的效果。但是如果同时存在，则被Cache-Control的max-age覆盖。\n\nExpires = \"Expires\" \":\" HTTP-date\n例如：\nExpires: Thu, 01 Dec 1994 16:00:00 GMT （必须是GMT格式）\n如果把它设置为-1，则表示立即过期\n\nExpires 和 max-age 都可以用来指定文档的过期时间，但是二者有一些细微差别\n1. Expires在HTTP/1.0中已经定义，Cache-Control:max-age在HTTP/1.1中才有定义，为了向下兼容，仅使用max-age不够\n2. Expires指定一个绝对的过期时间(GMT格式),这么做会导致至少2个问题：\n    2.1客户端和服务器时间不同步导致Expires的配置出现问题。 \n    2.2很容易在配置后忘记具体的过期时间，导致过期来临出现浪涌现象\n3. max-age 指定的是从文档被访问后的存活时间，这个时间是个相对值(比如:3600s)，相对的是文档第一次被请求时服务器记录的Request_time(请求时间)\n4. Expires 指定的时间可以是相对文件的最后访问时间(Atime)或者修改时间(MTime)，而max-age相对对的是文档的请求时间(Atime)\n5. 如果值为 no-cache,那么每次都会访问服务器。如果值为max-age，则在过期之前不会重复访问服务器。', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('189', 'qd', 'bc', '15', 'js操作获取和设置cookie', null, null, null, null, null, null, '// 创建cookie\nfunction setCookie(name, value, expires, path, domain, secure) {\n    var cookieText = encodeURIComponent(name) + \'=\' + encodeURIComponent(value);\n    if (expires instanceof Date) {\n        cookieText += \'; expires=\' + expires;\n    }\n    if (path) {\n        cookieText += \'; expires=\' + expires;\n    }\n    if (domain) {\n        cookieText += \'; domain=\' + domain;\n    }\n    if (secure) {\n        cookieText += \'; secure\';\n    }\n    document.cookie = cookieText;\n}\n// 获取cookie\nfunction getCookie(name) {\n    var cookieName = encodeURIComponent(name) + \'=\';\n    var cookieStart = document.cookie.indexOf(cookieName);\n    var cookieValue = null;\n    if (cookieStart > -1) {\n        var cookieEnd = document.cookie.indexOf(\';\', cookieStart);\n        if (cookieEnd == -1) {\n            cookieEnd = document.cookie.length;\n        }\n        cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd));\n    }\n    return cookieValue;\n}\n// 删除cookie\nfunction unsetCookie(name) {\n    document.cookie = name + \"= ; expires=\" + new Date(0);\n}', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('190', 'qd', '语音题', '20', '请你谈谈Cookie的弊端', null, null, null, null, null, null, 'cookie虽然在持久保存客户端数据提供了方便，分担了服务器存储的负担，但还是有很多局限性的。\n第一：每个特定的域名下最多生成20个cookie\n\n1.IE6或更低版本最多20个cookie\n2.IE7和之后的版本最后可以有50个cookie。\n3.Firefox最多50个cookie\n4.chrome和Safari没有做硬性限制\nIE和Opera 会清理近期最少使用的cookie，Firefox会随机清理cookie。\n\ncookie的最大大约为4096字节，为了兼容性，一般不能超过4095字节。\n\nIE 提供了一种存储可以持久化用户数据，叫做uerData，从IE5.0就开始支持。每个数据最多128K，每个域名下最多1M。这个持久化数据放在缓存中，如果缓存没有清理，那么会一直存在。\n\n优点：极高的扩展性和可用性\n\n1.通过良好的编程，控制保存在cookie中的session对象的大小。\n2.通过加密和安全传输技术（SSL），减少cookie被破解的可能性。\n3.只在cookie中存放不敏感数据，即使被盗也不会有重大损失。\n4.控制cookie的生命期，使之不会永远有效。偷盗者很可能拿到一个过期的cookie。\n\n缺点：\n1.`Cookie`数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。\n\n2.安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。\n\n3.有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。', 'JavaScript', '开放题，没点答对3个即可。', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('191', 'qd', '语音题', '20', '简单说一下浏览器本地存储是怎样的', null, null, null, null, null, null, '在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localStorage来取代globalStorage。\n\nhtml5中的Web Storage包括了两种存储方式：sessionStorage和localStorage。\n\nsessionStorage用于本地存储一个会话（session）中的数据，这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。\n\n而localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('192', 'qd', 'cz', '15', 'web storage和cookie的区别', null, null, null, null, null, null, 'Web Storage的概念和cookie相似，区别是它是为了更大容量存储设计的。Cookie的大小是受限的，并且每次你请求一个新的页面的时候Cookie都会被发送过去，这样无形中浪费了带宽，另外cookie还需要指定作用域，不可以跨域调用。\n\n除此之外，Web Storage拥有setItem,getItem,removeItem,clear等方法，不像cookie需要前端开发者自己封装setCookie，getCookie。\n\n但是Cookie也是不可以或缺的：Cookie的作用是与服务器进行交互，作为HTTP规范的一部分而存在 ，而Web Storage仅仅是为了在本地“存储”数据而生\n\n浏览器的支持除了IE７及以下不支持外，其他标准浏览器都完全支持(ie及FF需在web服务器里运行)，值得一提的是IE总是办好事，例如IE7、IE6中的UserData其实就是javascript本地存储的解决方案。通过简单的代码封装可以统一到所有的浏览器都支持web storage。\n\nlocalStorage和sessionStorage都具有相同的操作方法，例如setItem、getItem和removeItem等', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('193', 'qd', 'cz', '10', 'display:none和visibility:hidden的区别？', null, null, null, null, null, null, 'display:none  隐藏对应的元素，在文档布局中不再给它分配空间，它各边的元素会合拢，\n就当他从来不存在。\n\nvisibility:hidden  隐藏对应的元素，但是在文档布局中仍保留原来的空间。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('194', 'qd', 'cz', '10', 'CSS中 link 和@import 的区别是？', null, null, null, null, null, null, '(1) link属于HTML标签，而@import是CSS提供的; \n\n(2) 页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载;\n\n(3) import只在IE5以上才能识别，而link是HTML标签，无兼容问题; \n\n(4) link方式的样式的权重 高于@import的权重.', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('195', 'qd', 'cz', '10', 'position的absolute与fixed共同点与不同点', null, null, null, null, null, null, 'A：共同点：\n1.改变行内元素的呈现方式，display被置为block；\n2.让元素脱离普通流，不占据空间；\n3.默认会覆盖到非定位元素上\n\nB不同点：\nabsolute的”根元素“是可以设置的，而fixed的”根元素“固定为浏览器窗口。\n当你滚动网页，fixed元素与浏览器窗口之间的距离是不变的。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('196', 'qd', 'cz', '10', '列出display的值，说明他们的作用。position的值， relative和absolute分别是相对于谁进行定位的？', null, null, null, null, null, null, 'display 的值的作用： \n1.block 象块类型元素一样显示。\n2.inline 缺省值。象行内元素类型一样显示。\n3.inline-block 象行内元素一样显示，但其内容象块类型元素一样显示。\n4.list-item 象块类型元素一样显示，并添加样式列表标记。\n\nposition 的值的定位区别：\n1.absolute 生成绝对定位的元素，相对于 static 定位以外的第一个祖先元素进行定位。 \n2.fixed 生成绝对定位的元素，相对于浏览器窗口进行定位（老IE不支持）。\n3.relative 生成相对定位的元素，相对于其在普通流中的位置进行定位。 \n4.static 默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。\n5.inherit 规定从父元素继承 position 属性的值。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('197', 'qd', 'cz', '10', 'CSS3有哪些新特性？', null, null, null, null, null, null, '1. CSS3实现圆角（border-radius），阴影（box-shadow），\n2. 对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）\n3. transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);// 旋转,缩放,定位,倾斜\n4. 增加了更多的CSS选择器  多背景 rgba \n5. 在CSS3中唯一引入的伪元素是 ::selection.\n6. 媒体查询，多栏布局\n7. border-image', 'CSS', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('198', 'qd', 'cz', '15', '为什么要初始化CSS样式。', null, null, null, null, null, null, '因为浏览器的兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。\n\n当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。\n\n*最简单的初始化方法就是（不建议）：\n1\n{padding: 0; margin: 0;}\n\n淘宝的样式初始化： \n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\nbody, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td { margin:0; padding:0; }\nbody, button, input, select, textarea { font:12px/1.5tahoma, arial, \\5b8b\\4f53; }\nh1, h2, h3, h4, h5, h6{ font-size:100%; }\naddress, cite, dfn, em, var { font-style:normal; }\ncode, kbd, pre, samp { font-family:couriernew, courier, monospace; }\nsmall{ font-size:12px; }\nul, ol { list-style:none; }\na { text-decoration:none; }\na:hover { text-decoration:underline; }\nsup { vertical-align:text-top; }\nsub{ vertical-align:text-bottom; }\nlegend { color:#000; }\nfieldset, img { border:0; }\nbutton, input, select, textarea { font-size:100%; }\ntable { border-collapse:collapse; border-spacing:0; }', 'CSS', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('199', 'qd', 'cz', '10', '对BFC规范的理解？', null, null, null, null, null, null, 'BFC，块级格式化上下文，一个创建了新的BFC的盒子是独立布局的，盒子里面的子元素的样式不会影响到外面的元素。在同一个 BFC 中的两个毗邻的块级盒在垂直方向（和布局方向有关系）的 margin 会发生折叠。\n\nW3C CSS 2.1 规范中的一个概念，它决定了元素如何对其内容进行布局，以及与其他元素的关系和相互作用。', 'CSS', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('200', 'qd', 'cz', '10', '解释下 CSS sprites，以及你要如何在页面或网站中使用它。', null, null, null, null, null, null, 'CSS Sprites 其实就是把网页中一些背景图片整合到一张图片文件中，再利用 CSS 的\"background-image\"，\"background-repeat\"，\"background-position\" 的组合进行背景定位，background-position 可以用数字能精确的定位出背景图片的位置。这样可以减少很多图片请求的开销，因为请求耗时比较长；请求虽然可以并发，但是也有限制，一般浏览器都是6个。对于未来而言，就不需要这样做了，因为有了 http2。', 'CSS', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('201', 'qd', '语音题', '20', '说说你对语义化的理解？', null, null, null, null, null, null, '1. 去掉或者丢失样式的时候能够让页面呈现出清晰的结构\n2. 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n3. 方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以意义的方式来渲染网页；\n4. 便于团队开发和维护，语义化更具可读性，是下一步吧网页的重要动向，遵循W3C标准的团队都遵循这个标准，可以减少差异化。', 'HTML', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('202', 'qd', 'cz', '10', 'Doctype作用? 严格模式与混杂模式如何区分？它们有何意义?', null, null, null, null, null, null, '1. <!DOCTYPE> 声明位于文档中的最前面，处于 <html> 标签之前。告知浏览器以何种模式来渲染文档。 \n2. 严格模式的排版和 JS 运作模式是  以该浏览器支持的最高标准运行。\n3. 在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。\n4. DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现。', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('203', 'qd', '语音题', '20', '你知道多少种Doctype文档类型？', null, null, null, null, null, null, '1. 该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的 HTML 文档。\n2. HTML 4.01 规定了三种文档类型：Strict、Transitional 以及 Frameset。\n3. XHTML 1.0 规定了三种 XML 文档类型：Strict、Transitional 以及 Frameset。\n4. Standards （标准）模式（也就是严格呈现模式）用于呈现遵循最新标准的网页，而 Quirks（包容）模式（也就是松散呈现模式或者兼容模式）用于呈现为传统浏览器而设计的网页。', 'HTML', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('204', 'qd', 'cz', '2', 'html常见兼容性问题？', null, null, null, null, null, null, '1. png24位的图片在iE6浏览器上出现背景\n解决方案：做成PNG8，也可以引用一段脚本处理.\n\n2. 浏览器默认的margin和padding不同\n解决方案：加一个全局的 *{margin:0;padding:0;} 来统一。\n\n3. IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或margin-right，margin值会加倍。\n1\n#box{ float:left; width:10px; margin:0 0 0 10px;} \n这种情况之下IE会产生20px的距离\n解决方案：在float的标签样式控制中加入 _display:inline; 将其转化为行内属性。( _ 这个符号只有ie6会识别)\n\n4. 渐进识别的方式，从总体中逐渐排除局部。 \n首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。 \n接着，再次使用 \"+\" 将IE8和IE7、IE6分离开来，这样IE8已经独立识别。\n1\n2\n3\n4\n5\n6\n.bb{\n    background-color:#f1ee18; /*所有识别*/\n    .background-color:#00deff\\9; /*IE6、7、8识别*/\n    +background-color:#a200ff; /*IE6、7识别*/\n    _background-color:#1e0bd1; /*IE6识别*/ \n} \n\n5.IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用 getAttribute() 获取自定义属性；Firefox下,只能使用getAttribute()获取自定义属性\n解决方法：统一通过getAttribute()获取自定义属性\n\n6. IE下，event对象有 x、y 属性，但是没有 pageX、pageY属性; Firefox下，event对象有 pageX、pageY 属性，但是没有 x、y 属性\n解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。\n\n7. Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示\n解决方法：可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决\n\n8. 超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了\n解决方法：改变CSS属性的排列顺序 L-V-H-A\n1\n2\n3\n4\na:link {}\na:visited {}\na:hover {}\na:active {}\n\n9. 怪异模式问题：漏写 DTD 声明，Firefox 仍然会按照标准模式来解析网页，但在 IE 中会触发怪异模式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写 DTD 声明的好习惯。现在可以使用[html5](http://www.w3.org/TR/html5/single-page.html) 推荐的写法：<!DOCTYPE html>\n\n10. 上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。\n解决方法：养成良好的代码编写习惯，同时采用margin-top或者同时采用margin-bottom。\n\n11. ie6对png图片格式支持不好\n解决方案：引用一段脚本处理', 'HTML', '开放题，至少答对7点。', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('205', 'qd', '语音题', '20', '浮动元素引起的问题和解决办法？', null, null, null, null, null, null, '浮动元素引起的问题：\n1. 父元素的高度无法被撑开，影响与父元素同级的元素\n2. 与浮动元素同级的非浮动元素会跟随其后\n3. 若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构\n\n解决方法：\n使用 CSS 中的 clear:both; 属性来清除元素的浮动可解决2、3问题，对于问题1，添加如下样式，给父元素添加clearfix样式：\n1\n2\n.clearfix:after{content: \".\";display: block;height: 0;clear: both;visibility: hidden;}\n.clearfix{display: inline-block;} /* for IE/Mac */\n\n清除浮动的几种方法：\n1. 额外标签法，<div style=\"clear:both;\"></div>（缺点：不过这个办法会增加额外的标签使HTML结构看起来不够简洁。）\n2. 使用after伪元素\n1\n2\n3\n4\n5\n6\n7\n#parent:after{\n    content:\".\";\n    height:0;\n    visibility:hidden;\n    display:block;\n    clear:both;\n}\n3. 浮动外部元素\n4. 设置 overflow 为 hidden 或者 auto', 'CSS', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('206', 'qd', 'bc', '10', 'DOM操作——怎样添加、移除、移动、复制、创建和查找节点。', null, null, null, null, null, null, '1. 创建新节点\n1\n2\n3\ncreateDocumentFragment() // 创建一个DOM片段\ncreateElement() // 创建一个具体的元素\ncreateTextNode() // 创建一个文本节点\n\n2. 添加、移除、替换、插入\n1\n2\n3\n4\nappendChild()\nremoveChild()\nreplaceChild()\ninsertBefore() // 在已有的子节点前插入一个新的子节点\n\n3. 查找\n1\n2\n3\ngetElementsByTagName() // 通过标签名称\ngetElementsByName() // 通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)\ngetElementById() // 通过元素Id，唯一性', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('207', 'qd', 'cz', '15', 'html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？', null, null, null, null, null, null, '新特性：\nHTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。\n1. 拖拽释放(Drag and drop) API \n2. 语义化更好的内容标签（header,nav,footer,aside,article,section）\n3. 音频、视频API(audio,video)\n4. 画布(Canvas) API\n5. 地理(Geolocation) API\n6. 本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；\n7. sessionStorage 的数据在浏览器关闭后自动删除\n8. 表单控件，calendar、date、time、email、url、search  \n9. 新的技术webworker, websocket, Geolocation\n\n移除的元素：\n1. 纯表现的元素：basefont，big，center，font, s，strike，tt，u；\n2. 对可用性产生负面影响的元素：frame，frameset，noframes；\n\n支持HTML5新标签：\n1. IE8/IE7/IE6支持通过 document.createElement 方法产生的标签，可以利用这一特性让这些浏览器支持 HTML5 新标签，浏览器支持新标签后，还需要添加标签默认的样式（当然最好的方式是直接使用成熟的框架、使用最多的是html5shiv框架）：\n1\n2\n3\n<!--[if lt IE 9]> \n<script> src=\"http://html5shiv.googlecode.com/svn/trunk/html5.js\"</script> \n<![endif]--> \n如何区分： \nDOCTYPE声明新增的结构元素、功能元素', 'HTML', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('208', 'ht', '语音题', '20', 'webSocket 如何兼容低浏览器？', null, null, null, null, null, null, 'Adobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR', 'JQuery', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('209', 'qd', '语音题', '20', '线程与进程的区别', null, null, null, null, null, null, '1. 一个程序至少有一个进程,一个进程至少有一个线程\n2. 线程的划分尺度小于进程，使得多线程程序的并发性高\n3. 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率\n4. 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制 \n5. 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('210', 'qd', '语音题', '20', '请说出三种减少页面加载时间的方法', null, null, null, null, null, null, '1. 优化图片 \n2. 图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方） \n3. 优化CSS（压缩合并css，如 margin-top, margin-left...) \n4. 网址后加斜杠（如www.campr.com/目录，会判断这个目录是什么文件类型，或者是目录。） \n5. 标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。 \n当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了） \n6. 减少http请求（合并文件，合并图片）', 'HTML', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('211', 'qd', '语音题', '20', '什么是 FOUC（无样式内容闪烁）？你如何来避免 FOUC？', null, null, null, null, null, null, 'FOUC - Flash Of Unstyled Content 文档样式闪烁\n<style type=\"text/css\" media=\"all\">@import \"../fouc.css\";</style> \n而引用CSS文件的@import就是造成这个问题的罪魁祸首。IE会先加载整个HTML文档的DOM，然后再去导入外部的CSS文件，因此，在页面DOM加载完成到CSS导入完成中间会有一段时间页面上的内容是没有样式的，这段时间的长短跟网速，电脑速度都有关系。\n解决方法简单的出奇，只要在<head>之间加入一个<link>或者<script>元素就可以了。', 'CSS', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('212', 'qd', '语音题', '20', 'null和undefined的区别？', null, null, null, null, null, null, 'null是一个表示\"无\"的对象，转为数值时为0\nundefined是一个表示\"无\"的原始值，转为数值时为NaN\n\n当声明的变量还未被初始化时，变量的默认值为undefined\nnull用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象\n\nundefined表示 “缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：\n1. 变量被声明了，但没有赋值时，就等于 undefined\n2. 调用函数时，应该提供的参数没有提供，该参数等于 undefined\n3. 对象没有赋值的属性，该属性的值为 undefined\n4. 函数没有返回值时，默认返回 undefined\n\nnull表示“没有对象”，即该处不应该有值。典型用法是：\n1. 作为函数的参数，表示该函数的参数不是对象\n2. 作为对象原型链的终点', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('213', 'qd', 'cz', '10', 'new操作符具体干了什么呢?', null, null, null, null, null, null, '1. 创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型\n2. 属性和方法被加入到 this 引用的对象中\n3. 新创建的对象由 this 所引用，并且最后隐式的返回 this\n\n1\n2\n3\nvar obj  = {};\nobj.__proto__ = Base.prototype;\nBase.call(obj);', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('214', 'qd', '语音题', '20', '对JSON 的了解？', null, null, null, null, null, null, 'JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小。\n1\n{\"age\":\"12\", \"name\":\"back\"}', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('215', 'qd', 'cz', '10', '如何解决跨域问题?', null, null, null, null, null, null, '1. jsonp（jsonp 的原理是动态插入 script 标签）\n2. document.domain + iframe\n3. window.name、window.postMessage\n4. 服务器上设置代理页面', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('216', 'qd', '语音题', '15', 'documen.write和 innerHTML 的区别', null, null, null, null, null, null, 'document.write 只能重绘整个页面\n\ninnerHTML 可以重绘页面的一部分', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('217', 'qd', 'cz', '10', '.call() 和 .apply() 的作用？', null, null, null, null, null, null, '动态改变某个类的某个方法的运行环境', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('218', 'ht', '语音题', '15', '哪些操作会造成内存泄漏？', null, null, null, null, null, null, '内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。\n垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。\n\n1. setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。\n2. 闭包\n3. 控制台日志\n4. 循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）', 'JQuery', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('219', 'qd', '语音题', '15', '对Node的优点和缺点提出了自己的看法？', null, null, null, null, null, null, '优点：\n1. 因为Node是基于事件驱动和无阻塞的，所以非常适合处理并发请求，因此构建在Node上的代理服务器相比其他技术实现（如Ruby）的服务器表现要好得多。\n2. 与Node代理服务器交互的客户端代码是由javascript语言编写的，因此客户端和服务器端都用同一种语言编写，这是非常美妙的事情。\n\n缺点：\n1. Node是一个相对新的开源项目，所以不太稳定，它总是一直在变。\n2. 缺少足够多的第三方库支持。看起来，就像是Ruby/Rails当年的样子（第三方库现在已经很丰富了，所以这个缺点可以说不存在了）。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('220', 'qd', '语音题', '15', '对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？', null, null, null, null, null, null, '前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。\n1. 实现界面交互\n2. 提升用户体验\n3. 有了Node.js，前端可以实现服务端的一些事情\n\n前景：\n1. 前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好\n2. 参与项目，快速高质量完成实现效果图，精确到1px；\n3. 与团队成员，UI设计，产品经理的沟通；\n4. 做好的页面结构，页面重构和用户体验；\n5. 处理hack，兼容、写出优美的代码格式；\n6. 针对服务器的优化、拥抱最新前端技术。', 'CSS', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('222', 'qd', 'cz', '15', 'javascript对象的几种创建方式', null, null, null, null, null, null, '1. 工厂模式\n2. 构造函数模式\n3. 原型模式\n4. 混合构造函数和原型模式\n5. 动态原型模式\n6. 寄生构造函数模式\n7. 稳妥构造函数模式', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('223', 'qd', 'cz', '15', 'javascript继承的 6 种方法', null, null, null, null, null, null, '1. 原型链继承\n2. 借用构造函数继承\n3. 组合继承(原型+借用构造)\n4. 原型式继承\n5. 寄生式继承\n6. 寄生组合式继承', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('224', 'qd', '语音题', '15', '前端的安全问题？', null, null, null, null, null, null, '1. XSS\n2. sql注入\n3. CSRF：是跨站请求伪造，很明显根据刚刚的解释，他的核心也就是请求伪造，通过伪造身份提交POST和GET请求来进行跨域的攻击\n\n完成CSRF需要两个步骤：\n1. 登陆受信任的网站A，在本地生成 COOKIE\n2. 在不登出A的情况下，或者本地 COOKIE 没有过期的情况下，访问危险网站B。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('225', 'qd', 'cz', '10', 'ie 各版本和 chrome 可以并行下载多少个资源', null, null, null, null, null, null, '1. IE6 2 个并发\n2. iE7 升级之后的 6 个并发，之后版本也是 6 个\n3. Firefox，chrome 也是6个', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('226', 'qd', 'cz', '10', 'javascript里面的继承怎么实现，如何避免原型链上面的对象共享', null, null, null, null, null, null, '用构造函数和原型链的混合模式去实现继承，避免对象共享可以参考经典的extend()函数，很多前端框架都有封装的，就是用一个空函数当做中间变量', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('227', 'qd', 'cz', '15', 'grunt， YUI compressor 和 google clojure用来进行代码压缩的用法。', null, null, null, null, null, null, 'grunt：\nUglifyJS 是基于 NodeJS 的 Javascript 语法解析/压缩/格式化工具\n官网：http://lisperator.net/uglifyjs/ 或者 https://github.com/mishoo/UglifyJS2\n安装：\n1\n$ npm install uglify-js -g\n使用方法见官网 demo\n\nYUI compressor：\nYUI Compressor 是一个用来压缩 JS 和 CSS 文件的工具，采用Java开发。\n使用方法：\n1\n2\n3\n4\n// 压缩JS\njava -jar yuicompressor-2.4.2.jar --type js --charset utf-8 -v src.js > packed.js\n// 压缩CSS\njava -jar yuicompressor-2.4.2.jar --type css --charset utf-8 -v src.css > packed.css\n\nGoogle Closure Compiler：\n官网：https://developers.google.com/closure/compiler/\n使用方法：\n1. 在命令行下使用一个google编译好的java程序\n2. 使用google提供的在线服务\n3. 使用google提供的RESTful API', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('228', 'qd', '语音题', '15', '请解释一下 JavaScript 的同源策略。', null, null, null, null, null, null, '概念：\n同源策略是客户端脚本（尤其是Javascript）的重要的安全度量标准。它最早出自Netscape Navigator2.0，其目的是防止某个文档或脚本从多个不同源装载。\n这里的同源策略指的是：协议，域名，端口相同，同源策略是一种安全协议，指一段脚本只能读取来自同一来源的窗口和文档的属性。\n\n为什么要有同源限制：\n我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('229', 'qd', 'cz', '10', '为什么要有同源限制？', null, null, null, null, null, null, '我们举例说明：比如一个黑客程序，他利用Iframe把真正的银行登录页面嵌到他的页面上，当你使用真实的用户名，密码登录时，他的页面就可以通过Javascript读取到你的表单中input中的内容，这样用户名，密码就轻松到手了。', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('230', 'qd', '语音题', '15', '什么是 \"use strict\"; ? 使用它的好处和坏处分别是什么？', null, null, null, null, null, null, 'ECMAscript 5添加了第二种运行模式：\"严格模式\"（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。\n\n设立\"严格模式\"的目的，主要有以下几个：\n1. 消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;\n2. 消除代码运行的一些不安全之处，保证代码运行的安全；\n3. 提高编译器效率，增加运行速度；\n4. 为未来新版本的Javascript做好铺垫。\n注：经过测试 IE6,7,8,9 均不支持严格模式。\n\n缺点：\n现在网站的 JS 都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge 后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节。', 'JavaScript', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('231', 'qd', 'cz', '20', '哪些地方会出现css阻塞，哪些地方会出现js阻塞？', null, null, null, null, null, null, 'js 的阻塞特性：所有浏览器在下载 JS 的时候，会阻止一切其他活动，比如其他资源的下载，内容的呈现等等。直到 JS 下载、解析、执行完毕后才开始继续并行下载其他资源并呈现内容。为了提高用户体验，新一代浏览器都支持并行下载 JS，但是 JS 下载仍然会阻塞其它资源的下载（例如.图片，css文件等）。\n由于浏览器为了防止出现 JS 修改 DOM 树，需要重新构建 DOM 树的情况，所以就会阻塞其他的下载和呈现。\n嵌入 JS 会阻塞所有内容的呈现，而外部 JS 只会阻塞其后内容的显示，2 种方式都会阻塞其后资源的下载。也就是说外部样式不会阻塞外部脚本的加载，但会阻塞外部脚本的执行。\n\nCSS 怎么会阻塞加载了？CSS 本来是可以并行下载的，在什么情况下会出现阻塞加载了(在测试观察中，IE6 下 CSS 都是阻塞加载）\n当 CSS 后面跟着嵌入的 JS 的时候，该 CSS 就会出现阻塞后面资源下载的情况。而当把嵌入 JS 放到 CSS 前面，就不会出现阻塞的情况了。\n根本原因：因为浏览器会维持 html 中 css 和 js 的顺序，样式表必须在嵌入的 JS 执行前先加载、解析完。而嵌入的 JS 会阻塞后面的资源加载，所以就会出现上面 CSS 阻塞下载的情况。\n\n嵌入JS应该放在什么位置？\n1. 放在底部，虽然放在底部照样会阻塞所有呈现，但不会阻塞资源下载。\n2. 如果嵌入JS放在head中，请把嵌入JS放在CSS头部。\n3. 使用 defer（只支持IE）\n4. 不要在嵌入的JS中调用运行时间较长的函数，如果一定要用，可以用 setTimeout 来调用\n\nJavascript无阻塞加载具体方式：\n1. 将脚本放在底部。<link>还是放在head中，用以保证在js加载前，能加载出正常显示的页面。<script>标签放在</body>前。\n2. 阻塞脚本：由于每个<script>标签下载时阻塞页面解析过程，所以限制页面的<script>总数也可以改善性能。适用于内联脚本和外部脚本。\n3. 非阻塞脚本：等页面完成加载后，再加载js代码。也就是，在 window.onload 事件发出后开始下载代码。\n4. defer属性：支持IE4和fierfox3.5更高版本浏览器\n5. 动态脚本元素：文档对象模型（DOM）允许你使用js动态创建HTML的几乎全部文档内容。代码如下：\n1\n2\n3\n4\n5\n6\n<script>\n    var script=document.createElement(\"script\");\n    script.type=\"text/javascript\";\n    script.src=\"file.js\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n</script>\n此技术的重点在于：无论在何处启动下载，文件额下载和运行都不会阻塞其他页面处理过程，即使在head里（除了用于下载文件的 http 链接）。', 'JavaScript', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('232', 'qd', 'bc', '15', '写一个通用的事件侦听器函数', null, null, null, null, null, null, '// event(事件)工具集，来源：github.com/markyun\nmarkyun.Event = {\n    // 页面加载完成后\n    readyEvent : function(fn) {\n        if (fn==null) {\n            fn=document;\n        }\n        var oldonload = window.onload;\n        if (typeof window.onload != \'function\') {\n            window.onload = fn;\n        } else {\n            window.onload = function() {\n                oldonload();\n                fn();\n            };\n        }\n    },\n    // 视能力分别使用dom0||dom2||IE方式 来绑定事件\n    // 参数： 操作的元素,事件名称 ,事件处理程序\n    addEvent : function(element, type, handler) {\n        if (element.addEventListener) {\n            //事件类型、需要执行的函数、是否捕捉\n            element.addEventListener(type, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\'on\' + type, function() {\n                handler.call(element);\n            });\n        } else {\n            element[\'on\' + type] = handler;\n        }\n    },\n    // 移除事件\n    removeEvent : function(element, type, handler) {\n        if (element.removeEnentListener) {\n            element.removeEnentListener(type, handler, false);\n        } else if (element.detachEvent) {\n            element.detachEvent(\'on\' + type, handler);\n        } else {\n            element[\'on\' + type] = null;\n        }\n    }, \n    // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)\n    stopPropagation : function(ev) {\n        if (ev.stopPropagation) {\n            ev.stopPropagation();\n        } else {\n            ev.cancelBubble = true;\n        }\n    },\n    // 取消事件的默认行为\n    preventDefault : function(event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        } else {\n            event.returnValue = false;\n        }\n    },\n    // 获取事件目标\n    getTarget : function(event) {\n        return event.target || event.srcElement;\n    },\n    // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；\n    getEvent : function(e) {\n        var ev = e || window.event;\n        if (!ev) {\n            var c = this.getEvent.caller;\n            while (c) {\n                ev = c.arguments[0];\n                if (ev && Event == ev.constructor) {\n                    break;\n                }\n                c = c.caller;\n            }\n        }\n        return ev;\n    }\n};', 'JavaScript', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('233', 'qd', 'cz', '10', 'WEB应用从服务器主动推送Data到客户端有那些方式？', null, null, null, null, null, null, '1. html5 websocket\n2. WebSocket 通过 Flash\n3. XHR长时间连接\n4. XHR Multipart Streaming\n5. 不可见的Iframe\n6. <script>标签的长时间连接(可跨域)', 'HTML', '', '2', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('234', 'qd', 'cz', '10', '事件、IE与火狐的事件机制有什么区别？ 如何阻止冒泡？', null, null, null, null, null, null, '1. 我们在网页中的某个操作（有的操作对应多个事件）。例如：当我们点击一个按钮就会产生一个事件。是可以被 JavaScript 侦测到的行为\n2. 事件处理机制：IE是事件冒泡、firefox同时支持两种事件模型，也就是：捕获型事件和冒泡型事件\n3. ev.stopPropagation();\n注意旧ie的方法：ev.cancelBubble = true;', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('235', 'qd', 'cz', '20', 'Ajax 是什么？Ajax 的交互模型？同步和异步的区别？如何解决跨域问题？', null, null, null, null, null, null, 'Ajax 是什么：\n1. 通过异步模式，提升了用户体验\n2. 优化了浏览器和服务器之间的传输，减少不必要的数据往返，减少了带宽占用\n3. Ajax 在客户端运行，承担了一部分本来由服务器承担的工作，减少了大用户量下的服务器负载。\n\nAjax 的最大的特点：\n1. Ajax可以实现动态不刷新（局部刷新）\n2. readyState 属性 状态 有5个可取值： 0 = 未初始化，1 = 启动， 2 = 发送，3 = 接收，4 = 完成\n\nAjax 同步和异步的区别:\n1. 同步：提交请求 -> 等待服务器处理 -> 处理完毕返回，这个期间客户端浏览器不能干任何事\n2. 异步：请求通过事件触发 -> 服务器处理（这是浏览器仍然可以作其他事情）-> 处理完毕\najax.open方法中，第3个参数是设同步或者异步。\n\nAjax 的缺点：\n1. Ajax 不支持浏览器 back 按钮\n2. 安全问题 Ajax 暴露了与服务器交互的细节\n3. 对搜索引擎的支持比较弱\n4. 破坏了程序的异常机制\n5. 不容易调试\n\n解决跨域问题：\n1. jsonp\n2. iframe\n3. window.name、window.postMessage\n4. 服务器上设置代理页面', 'JavaScript', '', '3', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('236', 'qd', 'bc', '10', 'js对象的深度克隆代码实现', null, null, null, null, null, null, '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\nfunction clone(Obj) {\n    var buf;   \n    if (Obj instanceof Array) {\n        buf = [];  // 创建一个空的数组\n        var i = Obj.length;\n        while (i--) {\n            buf[i] = clone(Obj[i]);\n        }\n        return buf;\n    } else if (Obj instanceof Object){\n        buf = {};  // 创建一个空对象\n        for (var k in Obj) {  // 为这个对象添加新的属性\n            buf[k] = clone(Obj[k]);\n        }\n        return buf;\n    }else{\n        return Obj;\n    }\n}', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('237', 'qd', 'bc', '10', '如何获取UA', null, null, null, null, null, null, '<script> \nfunction whatBrowser() {  \n    document.Browser.Name.value=navigator.appName;  \n    document.Browser.Version.value=navigator.appVersion;  \n    document.Browser.Code.value=navigator.appCodeName;  \n    document.Browser.Agent.value=navigator.userAgent;  \n}\n</script>', 'JavaScript', '', '1', 'qd', '2017-03-11');
INSERT INTO `questionbank` VALUES ('238', 'ht', 'sxz', '5', '在关系数据库中，用来表示实体间联系的是（）', '属性`二维表`网状结构`树状结构', '属性', '二维表', '网状结构', '树状结构', '2', 'B', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('239', 'ht', 'sxz', '2', '从四个选项选出不同的一个。', 'Mysql`MongoDB`DB2`PostgreSQL', 'Mysql', 'MongoDB', 'DB2', 'PostgreSQL', '2', 'B', '数据库', 'A、C、D均为数据库。', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('240', 'ht', 'sxz', '2', '下列关于视图的说法错误的是：', '视图是从一个或多个基本表导出的表，它是虚表`视图一经定义就可以和基本表一样被查询、删除和更新`某一用户可以定义若干个视图`视图可以用来定义新的视图', '视图是从一个或多个基本表导出的表，它是虚表', '视图一经定义就可以和基本表一样被查询、删除和更新', '某一用户可以定义若干个视图', '视图可以用来定义新的视图', '2', 'B', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('241', 'ht', 'sxz', '2', '某关系表有：员工（部门编号，部门名称，员工编号，姓名，性别，年龄），则其主码为（）。', '部门编号、员工编号`员工编号`姓名`部门编号', '部门编号、员工编号', '员工编号', '姓名', '部门编号', '1', 'A', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('242', 'ht', 'sxz', '2', '在数据库管理技术发展的三个阶段中，没有专门的软件对数据进行管理的是（ ）', '人工管理阶段`文件系统阶段`文件系统阶段和数据库阶段`人工管理阶段和文件系统阶段', '人工管理阶段', '文件系统阶段', '文件系统阶段和数据库阶段', '人工管理阶段和文件系统阶段', '1', 'A', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('243', 'ht', 'sxz', '2', '在学生表 Student 的系别 (Sdept) 属性中查询信息系 (IS) 、数学系 (MA) 和计算机系 (CS) 的学生姓名 (Sname) 和性别 (Ssex) ，正确的命名格式应为：', 'SELECT Student FROM Sname, Ssex WHERE Sdept IN (‘IS’, ’MA’, ‘CS’)`SELECT Sname, Ssex FROM Student WHERE Sdept IN (‘IS’, ’MA’, ‘CS’)`SELECT Sname, Ssex FROM Student WHERE Sdept (IS, MA, CS)`SELECT Sname, Ssex FROM Student WHERE Sdept LIKE IS, MA, CS', 'SELECT Student FROM Sname, Ssex WHERE Sdept IN (‘IS’, ’MA’, ‘CS’)', 'SELECT Sname, Ssex FROM Student WHERE Sdept IN (‘IS’, ’MA’, ‘CS’)', 'SELECT Sname, Ssex FROM Student WHERE Sdept (IS, MA, CS)', 'SELECT Sname, Ssex FROM Student WHERE Sdept LIKE IS, MA, CS', '2', 'B', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('244', 'ht', 'sxz', '2', '关系数据库所采用的数据存放形式是（）', '二维表`链表`网状`二叉树', '二维表', '链表', '网状', '二叉树', '1', 'A', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('245', 'ht', 'sxz', '2', '如果事务T获得了数据项Q上的排它锁，则T对Q______。', '只能读不能写`只能写不能读`既可读又可写`不能读不能写', '只能读不能写', '只能写不能读', '既可读又可写', '不能读不能写', '3', 'C', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('246', 'ht', 'sxz', '2', 'athletes 表包含运动员姓名，年纪和代表国家。下面哪个查询可以找出代表每个国家最年轻的运动员情况？', 'SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT country, min(age) FROM athletes GROUP BY country)`SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT min(age), country FROM athletes GROUP BY country)`SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT country, min(age) FROM athletes) GROUP BY country`SELECT name, country, age FROM athletes WHERE age IN (SELECT country, min(age) FROM athletes GROUP BY country)', 'SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT country, min(age) FROM athletes GROUP BY country)', 'SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT min(age), country FROM athletes GROUP BY country)', 'SELECT name, country, age FROM athletes WHERE (country, age) IN (SELECT country, min(age) FROM athletes) GROUP BY country', 'SELECT name, country, age FROM athletes WHERE age IN (SELECT country, min(age) FROM athletes GROUP BY country)', '1', 'A', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('247', 'ht', 'sxz', '2', 'SQL Server 2005 属于（ ）', '应用软件`操作系统`语言处理系统`数据库管理系统', '应用软件', '操作系统', '语言处理系统', '数据库管理系统', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('248', 'ht', 'sxz', '2', '牛客网的数据库有一个paper表，现在要查询试卷名字包含\"人人网\"的所有数据，则sql语句应该为？', 'SELECT * FROM paper WHERE paper_name LIKE \'人人网\';`SELECT * FROM paper WHERE paper_name LIKE \'%人人网\';`SELECT * FROM paper WHERE paper_name LIKE \'人人网%\';`SELECT * FROM paper WHERE paper_name LIKE \'%人人网%\';', 'SELECT * FROM paper WHERE paper_name LIKE \'人人网\';', 'SELECT * FROM paper WHERE paper_name LIKE \'%人人网\';', 'SELECT * FROM paper WHERE paper_name LIKE \'人人网%\';', 'SELECT * FROM paper WHERE paper_name LIKE \'%人人网%\';', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('249', 'ht', 'sxz', '2', '某网站的数据库有一个成绩表myscore，希望找出成绩表中平均得分小于90的所有试卷。', 'select paper_id from myscore where sum(score) > 90 group by paper_id`select paper_id from myscore group by paper_id having avg(score) > 90`select paper_id from myscore where avg(score) > 90`select paper_id from myscore where avg(score) > 90 group by paper_id', 'select paper_id from myscore where sum(score) > 90 group by paper_id', 'select paper_id from myscore group by paper_id having avg(score) > 90', 'select paper_id from myscore where avg(score) > 90', 'select paper_id from myscore where avg(score) > 90 group by paper_id', '2', 'B', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('250', 'ht', 'sxz', '2', '数据库设计过程不包括以下选项的哪一个？', '概念设计`逻辑设计`物理设计`算法设计', '概念设计', '逻辑设计', '物理设计', '算法设计', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('251', 'ht', 'sxz', '2', '某公司有数据库,其中有一个表包含几十万个数据,但用户报怨说查询速度太慢，下面哪种方法能提高的查询速度？', '收缩数据库`减少数据占用空间`建立聚集索引和非聚集索引`换个高档服务器', '收缩数据库', '减少数据占用空间', '建立聚集索引和非聚集索引', '换个高档服务器', '3', 'C', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('252', 'ht', 'sxz', '2', 'mysql 导出数据命令是？', 'grant`mysqldump`mysqlimport`source', 'grant', 'mysqldump', 'mysqlimport', 'source', '2', 'B', '数据库', '具体的格式是 \nmysqldump -u 用户名 -p 数据库名 > 导出的文件名', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('253', 'ht', 'sxz', '2', '下面有关sql绑定变量的描述，说法错误的是？', '绑定变量是指在SQL语句中使用变量，改变变量的值来改变SQL语句的执行结果`使用绑定变量，可以减少SQL语句的解析，能减少数据库引擎消耗在SQL语句解析上的资源`使用绑定变量，提高了编程效率和可靠性，减少访问数据库的次数`使用绑定变量，查询优化器会预估的比字面变量更加真实', '绑定变量是指在SQL语句中使用变量，改变变量的值来改变SQL语句的执行结果', '使用绑定变量，可以减少SQL语句的解析，能减少数据库引擎消耗在SQL语句解析上的资源', '使用绑定变量，提高了编程效率和可靠性，减少访问数据库的次数', '使用绑定变量，查询优化器会预估的比字面变量更加真实', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('254', 'ht', 'sxz', '2', 'SQL中关于视图操作，错误的说法是？', '更新视图包括插入、删除、修改三类操作`视图多用于查询`视图是实际数据库实体`安全起见，更新视图时需要在定义视图时增加with check option子句', '更新视图包括插入、删除、修改三类操作', '视图多用于查询', '视图是实际数据库实体', '安全起见，更新视图时需要在定义视图时增加with check option子句', '3', 'C', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('255', 'ht', 'sxz', '2', '下面Transact-SQL语句中可以用于创建主键的是（）', 'alter table table1 with notcheck add constraint [PK_table1] primary key nonclustered (column1) on primary;`alter table table1 column1 primary key;`alter table table1 column1;`create table table1 (column1 char(13) not null primary,column2 int not) on primary;', 'alter table table1 with notcheck add constraint [PK_table1] primary key nonclustered (column1) on primary;', 'alter table table1 column1 primary key;', 'alter table table1 column1;', 'create table table1 (column1 char(13) not null primary,column2 int not) on primary;', '1', 'A', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('256', 'ht', 'sxz', '2', '下面关于存储过程的描述不正确的是？', '存储过程实际上是一组T-SQL语句`存储过程预先被编译存放在服务器的系统中`存储过程独立于数据库而存在`存储过程可以完成某一特定的业务逻辑', '存储过程实际上是一组T-SQL语句', '存储过程预先被编译存放在服务器的系统中', '存储过程独立于数据库而存在', '存储过程可以完成某一特定的业务逻辑', '3', 'C', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('257', 'ht', 'sxz', '2', 'SQL语言允许使用通配符进行字符串匹配的操作,其中‘%’可以表示', '零个字符`1个字符`多个字符`以上都可以', '零个字符', '1个字符', '多个字符', '以上都可以', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('258', 'ht', 'sxz', '2', '下列哪个不是存储过程的好处（）', '更加安全`SQL优化`增加网络流量`重复使用', '更加安全', 'SQL优化', '增加网络流量', '重复使用', '3', 'C', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('259', 'ht', 'sxz', '2', '表的主键特点中,说法不正确的是()', '主键的每一列都必须非空`主键的每一列都必须唯一`一个表只能定义一个主键`主键可以定义在表级或列级', '主键的每一列都必须非空', '主键的每一列都必须唯一', '一个表只能定义一个主键', '主键可以定义在表级或列级', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('260', 'ht', 'sxz', '2', '一个查询语句执行后显示的结果为：\n1班 80\n2班 75\n3班 NULL\n，则最有可能的查询语句是（）', 'SELECT AVG(成绩) FROM 成绩表 WHERE class<=3`SELECT AVG(成绩) FROM 成绩表 WHERE class<=3 GROUP BY class`SELECT AVG(成绩) FROM 成绩表 WHERE class<=3 order by class`SELECT AVG(成绩) FROM 成绩表 HAVING class <=3 GROUP BY class', 'SELECT AVG(成绩) FROM 成绩表 WHERE class<=3', 'SELECT AVG(成绩) FROM 成绩表 WHERE class<=3 GROUP BY class', 'SELECT AVG(成绩) FROM 成绩表 WHERE class<=3 order by class', 'SELECT AVG(成绩) FROM 成绩表 HAVING class <=3 GROUP BY class', '2', 'B', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('261', 'ht', 'sxz', '2', '数据库中存在学生表S，课程表C和学生选择表SC三个表，它们的结构如下：S（S＃，SN，SEX，AGE，DEPT） GRADE）其中：S＃为学号，SN为姓名，SEX为性别，AGE为年龄，DEPT为系别，C＃为课程号，CN为课程名，GRADE为成绩。请检索选修课程号为C2的学生中成绩最高的学号。（）', 'SELECT＃S，SUM（GRADE）FROM SC WHERE GRADE> = 60 GROUP BY S＃ORDER BY 2 DESC HAVING COUNT（*）> = 4 WHERE C＃=“C2”AND GRADE> =（SELECT GRANDE FORM SC WHERE C＃ C2“）`SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE IN（SELECT GRANE FORM SC WHERE C＃=“C2”）`SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE NOT IN（SELECT GREE FORM SC WHERE C＃=“C2”）`SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE> = ALL（SELECT GREE FORM SC WHERE C＃=“C2”）', 'SELECT＃S，SUM（GRADE）FROM SC WHERE GRADE> = 60 GROUP BY S＃ORDER BY 2 DESC HAVING COUNT（*）> = 4 WHERE C＃=“C2”AND GRADE> =（SELECT GRANDE FORM SC WHERE C＃ C2“）', 'SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE IN（SELECT GRANE FORM SC WHERE C＃=“C2”）', 'SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE NOT IN（SELECT GREE FORM SC WHERE C＃=“C2”）', 'SELECT S＃FORM SC WHERE C＃=“C2”AND GRADE> = ALL（SELECT GREE FORM SC WHERE C＃=“C2”）', '4', 'D', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('262', 'ht', 'sxz', '2', '若要删除book表中的所有数据，如下哪些语法是错误的？', 'drop table book;`truncate table book;`delete from book;`delelet *from book;', 'drop table book;', 'truncate table book;', 'delete from book;', 'delelet *from book;', null, 'AD', '数据库', '', '1', 'ht', '2017-03-11');
INSERT INTO `questionbank` VALUES ('263', 'ht', 'sxz', '2', '如果要从数据库中删除触发器，应该使用SQL语言的命令（）', 'DELETE TRIGGER`DROP TRIGGER`DISABLE TRIGGER`REMOVE TRIGGER', 'DELETE TRIGGER', 'DROP TRIGGER', 'DISABLE TRIGGER', 'REMOVE TRIGGER', '2', 'B', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('264', 'ht', 'sxz', '2', '下列关于视图的说法错误的是：', '视图是从一个或多个基本表导出的表，它是虚表`视图一经定义就可以和基本表一样被查询、删除和更新`某一用户可以定义若干个视图`视图可以用来定义新的视图', '视图是从一个或多个基本表导出的表，它是虚表', '视图一经定义就可以和基本表一样被查询、删除和更新', '某一用户可以定义若干个视图', '视图可以用来定义新的视图', '2', 'B', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('265', 'ht', 'sxz', '2', '下列哪个不属于事务的特性（）', '原子性`并发性`隔离性`持久性', '原子性', '并发性', '隔离性', '持久性', '2', 'B', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('266', 'ht', 'sxz', '2', '下面描述中不属于数据库系统特点的是（）', '数据共享`数据完整性`数据冗余度高`数据独立性高', '数据共享', '数据完整性', '数据冗余度高', '数据独立性高', '3', 'C', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('267', 'ht', 'sxz', '2', '下列叙述正确的是：', '数据库是一个独立的系统,不需要操作系统的支持`数据库设计是指设计数据库管理`数据库技术的根本目标是要解决数据共享的问题`数据库系统中,数据的物理结构必须与逻辑结构一致', '数据库是一个独立的系统,不需要操作系统的支持', '数据库设计是指设计数据库管理', '数据库技术的根本目标是要解决数据共享的问题', '数据库系统中,数据的物理结构必须与逻辑结构一致', '3', 'C', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('268', 'ht', 'sxz', '2', '单表 ( 订单号，雇员代号，地区代号，订购日期 ) 中订单号为主键，要删除订单中前三年以前的信息， SQL 为：', 'delete from 订单表 where 订购日期<getdate()+3`delete from 订单表 where 订购日期<DATEADD(yy,3,getdate())`delete from 订单表 where 订购日期<getdate()-3`delete from 订单表 where 订购日期<DATEADD(yy,-3,getdate())', 'delete from 订单表 where 订购日期<getdate()+3', 'delete from 订单表 where 订购日期<DATEADD(yy,3,getdate())', 'delete from 订单表 where 订购日期<getdate()-3', 'delete from 订单表 where 订购日期<DATEADD(yy,-3,getdate())', '4', 'D', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('269', 'ht', 'sxz', '2', '下列不属于数据库并发操作带来的问题是（）？', '丢失修改`不可重复读`死锁`脏读', '丢失修改', '不可重复读', '死锁', '脏读', '3', 'C', '数据库', '', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('270', 'ht', 'sxz', '2', '数据表建建立复合索引tab_index(“name”,”age”)，下面哪些语句能用上索引？（	）', 'select*from table where age=18 and name=’test’;`select*from table where name=’test’and age=18;`select*from table where name like”%test%”and age=18;`select*from table where name like”%test”and age=18;', 'select*from table where age=18 and name=’test’;', 'select*from table where name=’test’and age=18;', 'select*from table where name like”%test%”and age=18;', 'select*from table where name like”%test”and age=18;', '2', 'B', '数据库', '引可以包含一个、两个或更多个列。两个或更多个列上的索引被称作复合索引。\n对索引中的所有列执行搜索或仅对前几列执行搜索时，复合索引非常有用；仅对后面的任意列执行搜索时，复合索引则没有用处。\n\n根据这些原则， where应该先包含name， 再包含age。\n然后对于字符串的like操作 % 出现在前面的， 都需要全表扫描， 而用不上索引。\n所以， 选择B', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('271', 'ht', 'sxz', '2', '设有表示学生选课的三张表，学生S（学号，姓名，性别，年龄，身份证号），课程C（课号，课名），选课SC（学号，课号，成绩），则表SC的关键字（键或码）为（  ）。', '课号，成绩`学号，成绩`学号，课号`学号，姓名，成绩', '课号，成绩', '学号，成绩', '学号，课号', '学号，姓名，成绩', '3', 'C', '数据库', '学号是学生表S的主键，课号是课程表C的主键，所以选课表SC的关键字就应该是与前两个表能够直接联系且能唯一定义的学号和课号，所以选择C。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('272', 'ht', 'sxz', '2', '下列关于视图与基本表的对比正确的是()', '视图的定义功能强于基本表`视图的操作功能强于基本表`视图的数据控制功能弱于基本表`上面提到的三种功能二者均相当', '视图的定义功能强于基本表', '视图的操作功能强于基本表', '视图的数据控制功能弱于基本表', '上面提到的三种功能二者均相当', '1', 'A', '数据库', '选择A。\n视图可以定义在多张表上，因此定义功能比表强。\n视图中数据更新受到诸多限制，例如不能有聚集函数，不能是定义在多张表上等，因此操作功能弱于表。\n视图的数据控制功能和表的数据控制功能相当，都有GRANT、REVOKE。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('273', 'ht', 'sxz', '2', 'SQL中，下列涉及空值的操作，不正确的是？( )', 'name IS NULL`name= NULL`namee IS NoT NULL`NoT（name IS NULL）', 'name IS NULL', 'name= NULL', 'namee IS NoT NULL', 'NoT（name IS NULL）', '2', 'B', '数据库', 'Null值使用 is not 或者 is 比较，不能使用=比较 \n1. 判断是为空的时候，用 name IS NULL  ；判断不为空用name IS NoT NULL或者 NoT（name IS NULL）', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('274', 'ht', 'sxz', '2', '给定学生和成绩的数据库表，写一个sql语句求出每门课程的平均分。', 'SELECT SUM(score) FROM course GROUP BY student_id;`SELECT score FROM course GROUP BY course_id;`SELECT AVG(score) FROM course GROUP BY course_id;`SELECT AVG(score) FROM course ;', 'SELECT SUM(score) FROM course GROUP BY student_id;', 'SELECT score FROM course GROUP BY course_id;', 'SELECT AVG(score) FROM course GROUP BY course_id;', 'SELECT AVG(score) FROM course ;', '3', 'C', '数据库', '正确答案：C\nSQL语句中求平均值用AVG（）函数，因为可能存在很多个课程，所以要用GROUP BY来把课程分类', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('275', 'ht', 'sxz', '2', 'A表字段a 类型int中有100条记录，值分别为1至100。如下语句 SELECT a FROM A WHERE a BETWEEN 1 AND 50 OR (a IN (25,70,95) AND a BETWEEN 25 AND 75)  则如下哪个值在这个sql语句返回的结果集中?', '30`51`75`95', '30', '51', '75', '95', '1', 'A', '数据库', 'SELECT a FROM A WHERE a BETWEEN 1 AND 50 OR (a IN (25,70,95) AND a BETWEEN 25 AND 75)\n\n1.  BETWEEN 1 AND 50   \n    a的值在 1 到 50 区间，条件则成立\n2.  a IN (25,70,95) AND a BETWEEN 25 AND 75\n    a的值在 25 到 75 区间且a的值为25,70,95其中一个，条件则成立\n    显然，在第一个条件不成立的情况下，这里第二个条件只有70满足条件。\n\n所以，满足上述选择条件的结果集包括 1 到 50，和 70', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('276', 'ht', 'sxz', '2', '下面名词解释错误的是：', 'SQL结构化查询语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统`TCP 传输控制协议TCP是一种面向连接（连接导向）的、可靠的、基于字节流的运输层（Transport layer）通信协议`QoS 服务质量，是网络的一种安全机制。QoS是局域网的一个重要的需求。`STL 标准模板库', 'SQL结构化查询语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统', 'TCP 传输控制协议TCP是一种面向连接（连接导向）的、可靠的、基于字节流的运输层（Transport layer）通信协议', 'QoS 服务质量，是网络的一种安全机制。QoS是局域网的一个重要的需求。', 'STL 标准模板库', '3', 'C', '数据库', 'C\nQoS(Quality of Service)，中文名为\"服务质量\"。它是指网络提供更高优先服务的一种能力，包括专用带宽、抖动控制和延迟（用于实时和交互式流量情形）、丢包率的改进以及不同WAN、LAN 和 MAN 技术下的指定网络流量等，同时确保为每种流量提供的优先权不会阻碍其它流量的进程\n只要涉及到带宽分配和对业务服务质量有要求的地方，就会有QoS设计。QoS技术多应用于广域网络和语音、视频等媒体业务系统。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('277', 'ht', 'sxz', '2', '现有表user，字段：userid，username, salary, deptid，email; 表department，字段：deptid, deptname;下面应采用检查约束来实现?', '若department中不存在deptid为2的纪录，则不允许在user表中插入deptid为2的数据行`若user表中已经存在userid为10的记录，则不允许在user表中再次插入userid为10的数据行`User表中的salary（薪水）值必须在1000元以上`若User表的email列允许为空，则向user表中插入数据时， 可以不输入email值', '若department中不存在deptid为2的纪录，则不允许在user表中插入deptid为2的数据行', '若user表中已经存在userid为10的记录，则不允许在user表中再次插入userid为10的数据行', 'User表中的salary（薪水）值必须在1000元以上', '若User表的email列允许为空，则向user表中插入数据时， 可以不输入email值', '3', 'C', '数据库', '选C：用检查约束(check)来检查输入数值的合法性\n    alter table user\n    add constraint CK_SALARY check(salary > 1000)\nA：外键约束Foreign Key，选项中说明了department与user两张表的数据具有相关约束性\n    alter table user\n    add constraint CK_DEPID foreign key(depid) references department (depid)\nB：唯一性约束Unique，确保userid字段不重复\n    add constraint CK_USERID unique(userid)\nD：没用到约束', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('278', 'ht', 'sxz', '2', '下面有关tablespace和datafile之间的关系的描述，说法错误的是？', '一个tablespace可以有一个或多个datafile`每个datafile只能在一个tablespace内`table中的数据，通过hash算法分布在tablespace中的各个datafile中`datafile是逻辑上的概念，tablespace则在物理上储存了数据库的种种对象', '一个tablespace可以有一个或多个datafile', '每个datafile只能在一个tablespace内', 'table中的数据，通过hash算法分布在tablespace中的各个datafile中', 'datafile是逻辑上的概念，tablespace则在物理上储存了数据库的种种对象', '4', 'D', '数据库', 'D\ntablespace是逻辑上的概念，datafile是物理上的概念。\n一个tablespace可以由多个datafile组成，一个datafile不能跨越多个tablespace。table中的数据,通过hash算法分布在tablespace中的各个datafile中,tablespace是逻辑上的概念,datafile则在物理上储存了数据库的种种对象。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('279', 'ht', 'sxz', '2', '下列选项中,不属于SQL约束的是:', 'UNIQUE`PRIMARY KEY`FOREIGN KEY`BETWEEN', 'UNIQUE', 'PRIMARY KEY', 'FOREIGN KEY', 'BETWEEN', '4', 'D', '数据库', 'D\n约束主要有一下几种:\nNOT NULL : 用于控制字段的内容一定不能为空（NULL）。 \nUNIQUE : 控制字段内容不能重复，一个表允许有多个 Unique 约束。\nPRIMARY KEY: 也是用于控制字段内容不能重复，但它在一个表只允许出现一个。\nFOREIGN KEY: FOREIGN KEY 约束用于预防破坏表之间连接的动作，FOREIGN KEY 约束也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。\nCHECK: 用于控制字段的值范围。\nDEFAULT: 用于设置新记录的默认值。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('280', 'ht', 'sxz', '2', '根据关系数据库规范范理论，关系数据库中的关系要满足第一范式，在部门关系中，因哪个属性而使它不满足第一范式？（）', '部门号`部门名`部门总经理`部门成员', '部门号', '部门名', '部门总经理', '部门成员', '4', 'D', '数据库', '数据项必须都是不可分的，部门成员是成员1、成员2，...，成员n的集合，是可分的', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('281', 'ht', 'sxz', '2', '关于PreparedStatement与Statement描述错误的是（）', '一般而言，PreparedStatement比Statement执行效率更高`PreparedStatement会预编译SQL语句`Statement每次都会解析/编译SQL，确立并优化数据获取路径`Statement执行扫描的结果集比PreparedStatement大', '一般而言，PreparedStatement比Statement执行效率更高', 'PreparedStatement会预编译SQL语句', 'Statement每次都会解析/编译SQL，确立并优化数据获取路径', 'Statement执行扫描的结果集比PreparedStatement大', '4', 'D', '数据库', '因为PreparedStatement有预编译的过程，所以第一次扫描的集合 \nPreparedStatement会大于等于 Statement', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('282', 'ht', 'sxz', '2', '在视图上不能完成的操作是（）', '更新视图`查询`在视图上定义新的表`在视图上定义新的视图', '更新视图', '查询', '在视图上定义新的表', '在视图上定义新的视图', '3', 'C', '数据库', 'C\n\n视图是基于数据表的一种查询窗口，不能在这种查询窗口中再建数据表。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('283', 'ht', 'sxz', '2', 'SQL 语句中修改表结构的命令是（）', 'MODIFYTALE`ALTER TABLE`ALTER STRUCTURE`MODIFY STRUCTURE', 'MODIFYTALE', 'ALTER TABLE', 'ALTER STRUCTURE', 'MODIFY STRUCTURE', '2', 'B', '数据库', 'B\n修改表结构包括：增加字段、删除字段、增加约束、删除约束、修改缺省值、修改字段数据类型、重命名字段、重命名表。所有的这些动作都是用alter table命令执行的。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('284', 'ht', 'sxz', '2', '在SQL中，建立表用得命令是（ ）', 'CREATE TABLE`CREATE RULE`CREATE VIEW`CREATE INDEX', 'CREATE TABLE', 'CREATE RULE', 'CREATE VIEW', 'CREATE INDEX', '1', 'A', '数据库', 'A\nA是建立表，B是建立规则，C是建立视图，D是建立索引', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('285', 'ht', 'sxz', '2', '以下SQL语句的作用是：（）\nSELECT count(*) FROM \'t_users\' where id <> 0', 't_users表id等于0的全部记录`t_users表id不等于0的全部记录`t_users表id等于0的记录数量`t_users表id不等于0的记录数量', 't_users表id等于0的全部记录', 't_users表id不等于0的全部记录', 't_users表id等于0的记录数量', 't_users表id不等于0的记录数量', '4', 'D', '数据库', '答案：D\nwhere id <> 0\n这里限制条件id>0或id<0，也就是id不等于0\nSELECT * FROM \'t_users\'表示查找全部记录\nSELECT count(*) FROM \'t_users\'表示全部记录的数量\n综合起来就是查找\'t_users\'表中全部id不等于0的全部记录数量', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('286', 'ht', 'sxz', '2', '若实体A和B是一对多的联系,实体B和C是一对一的联系,则实体A和C的联系是？', '一对一`一对多`多对一`多对多', '一对一', '一对多', '多对一', '多对多', '2', 'B', '数据库', 'A和B为一对多的敏感词,则对于A中的每一个实体,B中有多个实体与之敏感词,而B和C为一对一的敏感词,则对于B中的每一个实体,C中之多有一个实体与之敏感词,则可推出对于A中的每一个实体,C中有多个实体与敏感词,所以为一对多敏感词。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('287', 'ht', 'sxz', '2', 'MYSQL实现主从复制的日志是哪种？', 'READ LOG`UNDO LOG`BINLOG`GENERAL LOG', 'READ LOG', 'UNDO LOG', 'BINLOG', 'GENERAL LOG', '3', 'C', '数据库', 'mysql日志一般分为5种\n错误日志：-log-err (记录启动，运行，停止mysql时出现的信息)\n\n二进制日志：-log-bin （记录所有更改数据的语句，还用于复制，恢复数据库用）\n\n查询日志：-log （记录建立的客户端连接和执行的语句）\n\n慢查询日志: -log-slow-queries （记录所有执行超过long_query_time秒的所有查询）\n\n更新日志:     -log-update （二进制日志已经代替了老的更新日志，更新日志在MySQL 5.1中不再使用）', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('288', 'ht', 'sxz', '2', '数据库事务正确执行的四个基本要素不包括?', '隔离性`持久性`强制性`一致性', '隔离性', '持久性', '强制性', '一致性', '3', 'C', '数据库', 'ACID，指数据库事务正确执行的四个基本要素的缩写。包含：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。一个支持事务（Transaction）的，必需要具有这四种特性，否则在事务过程（Transaction processing）当中无法保证数据的正确性，交易过程极可能达不到交易方的要求。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('289', 'ht', 'sxz', '2', '以下哪一句从表TABLE_NAME中提取前10条记录?', 'select * from TABLE_NAME where rowcount=10`select TOP 10 * from TABLE_NAME`select TOP of 10 * from TABLE_NAME`select * from TABLE_NAME where rowcount<=10', 'select * from TABLE_NAME where rowcount=10', 'select TOP 10 * from TABLE_NAME', 'select TOP of 10 * from TABLE_NAME', 'select * from TABLE_NAME where rowcount<=10', '2', 'B', '数据库', 'SQL语句的写法是select TOP 10 * from TABLE_NAME\n如果使用的MySQL数据库，则是 select * from TABLE_NAME limit 0,10', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('290', 'ht', 'sxz', '2', '在数据库系统中，产生不一致的根本原因是（ ）', '数据存储量太大`没有严格保护数据`未对数据进行完整性控制`数据冗余', '数据存储量太大', '没有严格保护数据', '未对数据进行完整性控制', '数据冗余', '4', 'D', '数据库', '选D\n数据库中有可能会存在不一致的数据。\n造成数据不一致的原因主要有：\n数据冗余\n如果数据库中存在冗余数据，比如两张表中都存储了用户的地址，在用户的地址发生改变时，如果只更新了一张表中的数据，那么这两张表中就有了不一致的数据。\n并发控制不当\n比如某个订票系统中，两个用户在同一时间订同一张票，如果并发控制不当，可能会导致一张票被两个用户预订的情况。当然这也与元数据的设计有关。\n故障和错误\n如果软硬件发生故障造成数据丢失等情况，也可能引起数据不一致的情况。因此我们需要提供数据库维护和数据恢复的一些措施。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('291', 'ht', 'sxz', '2', '如下哪个不是数据库处理一个查询的步骤？', 'distribution`optimization`evaluation`parsing and transiation', 'distribution', 'optimization', 'evaluation', 'parsing and transiation', '3', 'C', '数据库', '客户端连接->查询缓存->解析器->预处理器->查询优化器->查询执行引擎->数据', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('292', 'ht', 'sxz', '2', '（）就是能从这许多查询策略中找出最有效的查询执行计划的一种处理过程。', '查询分析`查询翻译`查询优化`查询执行', '查询分析', '查询翻译', '查询优化', '查询执行', '3', 'C', '数据库', '答案：C\n从许多查询策略中找出最有效的查询执行计划，这种过程叫查询优化', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('293', 'ht', 'sxz', '2', '数据库恢复的基础是利用转储的冗余数据。这些转储的冗余数据包括（）', '数据字典，应用程序，审计档案，数据库后备副本`数据字典，应用程序，审计档案，日志文件`数据字典，应用程序，数据库后备副本`日志文件，数据库后备副本', '数据字典，应用程序，审计档案，数据库后备副本', '数据字典，应用程序，审计档案，日志文件', '数据字典，应用程序，数据库后备副本', '日志文件，数据库后备副本', '4', 'D', '数据库', '题目说的是转储，转储只需要日志文件和后备数据就可以了\n数据字典只是用来定义数据库，应用程序也是一个道理....', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('294', 'ht', 'sxz', '2', '在视图上使用INSERT语句,下列()情况可以进行插入操作.', '视图中包含了使用统计函数的结果`视图由多个表连接而成,对多个表的列进行插入操作`视图全部包含了基本表中属性为NOT NULL的列`视图中使用了DICTINCT', '视图中包含了使用统计函数的结果', '视图由多个表连接而成,对多个表的列进行插入操作', '视图全部包含了基本表中属性为NOT NULL的列', '视图中使用了DICTINCT', '3', 'C', '数据库', '1.若视图是由两个以上基本表导出的，则此视图不允许更新。\n2.若视图的字段来自字段表达式或常数，则不允许对视图执行INSTER和UPDATE操作，但允许delete。\n3.若视图的字段来自聚集函数，则此视图不允许更新。\n4.若视图中含有GROUP by子句，则此视图不允许更新。\n5.若视图中含有DISTINCT短语，则此视图不允许更新。.\n6若视图定义中有嵌套查询，并且内层查询的FROM子句中涉及的表也是导出该视图的基本表，则此视图不允许更新。.\n7.一个不允许更新的视图上定义的视图不允许更新。', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('295', 'ht', 'sxz', '2', '以下不是RDBMS的是()', 'mysql`postgreSql`oracle`hadoop', 'mysql', 'postgreSql', 'oracle', 'hadoop', '4', 'D', '数据库', '选D\nRDBMS 是SQL 的基础，同样也是所有现代数据库系统的基础，比如MS SQL Server, IBM DB2, Oracle, MySQL 以及Microsoft Access。hadoop是分布式数据库', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('296', 'ht', 'sxz', '2', '从“产品”表里查询出价格高于产品名称为“一次性纸杯”的产品价格的记录，此SQL语句为?', 'SELECT * FROM 产品WHERE 价格>‘一次性纸杯’;`SELECT * FROM 产品WHERE 价格>(SELECT * FROM 产品WHERE 产品名称>’ 一次性纸杯’);`SELECT * FROM 产品WHERE EXISTS 产品名称=’ 一次性纸杯’);`SELECT * FROM 产品WHERE 价格>(SELECT 价格FROM 产品WHERE 产品名称=’ 一次性纸杯’);', 'SELECT * FROM 产品WHERE 价格>‘一次性纸杯’;', 'SELECT * FROM 产品WHERE 价格>(SELECT * FROM 产品WHERE 产品名称>’ 一次性纸杯’);', 'SELECT * FROM 产品WHERE EXISTS 产品名称=’ 一次性纸杯’);', 'SELECT * FROM 产品WHERE 价格>(SELECT 价格FROM 产品WHERE 产品名称=’ 一次性纸杯’);', '4', 'D', '数据库', 'D. 基本的SQL语句，要注意数据类型与查询类型', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('297', 'ht', 'sxz', '2', '以下哪个不是与Mysql服务器相互作用的通讯协议()', 'TCP/IP`UDP`共享内存`Socket', 'TCP/IP', 'UDP', '共享内存', 'Socket', '2', 'B', '数据库', '正确答案：A；本题考察MySql相关知识； \n解析： \n与Mysql服务器相互作用的通讯协议包括TCP／IP、Socket、共享内存、命名管道；', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('298', 'ht', 'sxz', '2', '设有关系模式R(A,B,C,D),其数据依赖集:F=((A,B)->C,C->D),则关系模式R的规范化程度最高达到()', 'BCNF`2NF`1NF`3NF', 'BCNF', '2NF', '1NF', '3NF', '2', 'B', '数据库', '答案是B\n          数据依赖集:F=((A,B)->C,C->D)满足没有部分依赖关系,比如没有A->C,B->C,因为有了A,B->C,再有左边2种就属于部分依赖了\n但是并没有破解传递依赖, (A,B)->C,C->D,可以推出A,B->D,所以最高到达 2NF', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('299', 'ht', 'sxz', '2', '在mysql中，与语句SELECT * FROM book b WHERE b.book_num NOT BETWEEN 200 AND 300;等价的有', 'SELECT * FROM book b WHERE b.book_num < 200 OR b.book_num >= 300`SELECT * FROM book b WHERE b.book_num <= 200 OR b.book_num > 300`SELECT * FROM book b WHERE b.book_num <= 200 OR b.book_num >= 300`SELECT * FROM book b WHERE b.book_num < 200 OR b.book_num > 300', 'SELECT * FROM book b WHERE b.book_num < 200 OR b.book_num >= 300', 'SELECT * FROM book b WHERE b.book_num <= 200 OR b.book_num > 300', 'SELECT * FROM book b WHERE b.book_num <= 200 OR b.book_num >= 300', 'SELECT * FROM book b WHERE b.book_num < 200 OR b.book_num > 300', '4', 'D', '数据库', 'between and 的取值为大于等于值1 并且小于等于值2', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('300', 'ht', 'bc', '10', '牛牛有一个鱼缸。鱼缸里面已经有n条鱼，每条鱼的大小为fishSize [i]（1≤i≤n，均为正整数），牛牛现在想把新捕捉的鱼放入鱼缸。在着大鱼吃小鱼的定律。经过观察，牛牛发现一条鱼A的大小为另外一条鱼B大小的2倍到10倍（包括2倍大小和10倍大小），鱼A会吃掉鱼B 。考虑到这个，牛牛要放入的鱼就需要保证：\n1，放进去的鱼是安全的，不会被其他鱼吃掉\n2，这条鱼放进去也不能吃掉其他鱼\n鱼缸里面已经存在的鱼已经相处了很久，不考虑他们互相捕食。现在知道新放入鱼的大小范围[minSize，maxSize]（考虑鱼的大小都是整数表示），牛牛想知道有多少种大小的鱼可以放入这个鱼缸。', null, null, null, null, null, null, 'import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n	public static void main（String [] args）{\n		Scanner in = new Scanner（System.in）;\n		\n		int minSize = in.nextInt（）;\n		int maxSize = in.nextInt（）;\n		int n = in.nextInt（）;\n		int [] fishSize = new int [n];\n		for（int i = 0; i <n; i ++）{\n			fishSize [i] = in.nextInt（）;\n		}}\n		int res = func（minSize，maxSize，fishSize）;\n		System.out.println（res）;\n	}}\n	private static int func（int min，int max，int [] src）{\n		if（src == null || src.length == 0）return max-min + 1;\n		if（max * 10 <src [0] || src [src.length-1] * 10 <min）return max-min + 1;\n\n		int res = 0;\n		int [] tmp = new int [max-min + 1];\n		Arrays.sort（src）;\n		int left1 = src [0] / 2;\n		int left2 =（int）（Math.ceil（src [0] /10.0））;\n		int right1 = src [0] * 2;\n		int right2 = src [0] * 10;\n		\n		for（int i = 0; i <src.length; i ++）{\n			left2 =（int）（Math.ceil（src [i] /10.0））;\n			left1 = src [i] / 2;\n			right1 = src [i] * 2;\n			right2 = src [i] * 10;\n			\n			标记（tmp，min，left2，left1，right1，right2）;\n		}}\n		for（int val：tmp）{\n			if（val == 0）res ++;\n		}}\n		return res;\n	}}\n	//将[a1，a2] && [b1，b2]在src中出现的标记\n	private static void mark（int [] src，int base，int a1，int a2，int b1，int b2）{\n		for（int i = 0; i <src.length; i ++）{\n			int pos = i + base;\n			if（a1 <= pos && pos <= a2）{\n				src [i] ++;\n			} else if（b1 <= pos && pos <= b2）{\n				src [i] ++;\n			}}\n		}}\n	}}\n}}', 'PHP', '', '2', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('301', 'ht', 'bc', '15', '如果一个单词通过循环右移获得的单词，我们称这些单词都为一种循环单词。 例如：picture 和 turepic 就是属于同一种循环单词。 现在给出n个单词，需要统计这个n个单词中有多少种循环单词。', null, null, null, null, null, null, 'import java.util.ArrayList;\nimport java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        /**\n         * 该解法思想就是，把每个单词所有可能的循环单词都放在一个数据结构中，\n         * 可以是List，map,set，数组等等，此处用ArrayList.\n         * 然后判断下一个单词是否在表中，不在则加入，并把循环种类加1\n         * 在的话，则它与之前的单词是同一种循环单词\n         */\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(); //第一行为单词个数n(1 ≤ n ≤ 50)\n        ArrayList<String> list = new ArrayList<>();\n        int count = 0;\n        for (int i = 0; i < n; i ++) {\n            String s = sc.next(); //输入并存储每行的单词。此处必须调用next（）方法，不能是nextLine（）方法\n            if (!list.contains(s)) {\n                count ++;\n                list.add(s);\n \n                for (int j = 0; j < s.length(); j ++) {\n                    char last = s.charAt(s.length() - 1);\n                    s = s.substring(0, s.length() - 1);\n                    s = last + s;\n                    list.add(s);\n                    //以下注释是另一种方法，把可能的循环单词加入list，\n                    //思路：把要测试的单词后再重复下这个单词，如：picture ，变成 picturepicture\n                    //感谢得闲半生的idea\n//                    StringBuffer string = new StringBuffer();\n//                    string.append(s);\n//                    string.append(s);\n//                    String another = string.substring(j, s.length() + j);\n//                    list.add(another);\n                }\n            }\n        }\n        sc.close();\n        System.out.println(count);\n    }\n}', 'PHP', '来个JavaScript版本\nvar rl = require(\"readline\").createInterface(process.stdin, process.stdout);\nvar args = [];\n\nrl.on(\'line\', function(data){\n    args.push(data);\n    if(args.length >= parseInt(args[0] + 1)){\n        rl.close();\n    }\n});\n\nrl.on(\'close\', function(){\n    var arr = args.slice(1);\n    var res = 0;\n    for(var i = 0 ; i < arr.length; i ++){\n        for(var j = i + 1; j < arr.length; j ++){\n            if(judge(arr[i], arr[j])){\n                // 如果两个是循环单词，就把arr[j]移除数组\n                arr.splice(j, 1);\n                j--;\n            }\n        }\n    }\n    res = arr.length;\n    console.log(res);\n});\n// 判断是否互为循环单词\nfunction judge(str1, str2){\n    if(str1.split(\'\').sort().join(\'\') == str2.split(\'\').sort().join(\'\')){\n        var temp1, temp2;\n        for(var i = 0 ; i < str1.length; i ++){\n            temp1 = str1.slice(0, i);\n            temp2 = str1.slice(i);\n            if(str2 == temp2 + temp1){\n                return true;\n            }\n        }\n    }\n    return false;\n}', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('302', 'ht', 'bc', '10', 'DNA分子是以4种脱氧核苷酸为单位连接而成的长链，这4种脱氧核苷酸分别含有A,T,C,G四种碱基。碱基互补配对原则：A和T是配对的，C和G是配对的。如果两条碱基链长度是相同的并且每个位置的碱基是配对的，那么他们就可以配对合成为DNA的双螺旋结构。现在给出两条碱基链，允许在其中一条上做替换操作：把序列上的某个位置的碱基更换为另外一种碱基。问最少需要多少次让两条碱基链配对成功', null, null, null, null, null, null, 'import java.util.Scanner;\n \npublic class  Main {\n \n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s1 = sc.next();\n        String s2 = sc.next();\n        if (s1 == null || s2 == null ||\n                s1.length() != s2.length() ||\n                s1.isEmpty() || s2.isEmpty()) {\n            return;\n        }\n        int count = 0;\n        for (int i = 0; i < s1.length(); i ++) {\n            if (s1.charAt(i) == \'A\' && s2.charAt(i) == \'T\') continue;\n            if (s1.charAt(i) == \'T\' && s2.charAt(i) == \'A\') continue;\n            if (s1.charAt(i) == \'C\' && s2.charAt(i) == \'G\') continue;\n            if (s1.charAt(i) == \'G\' && s2.charAt(i) == \'C\') continue;\n            count ++;\n        }\n        System.out.println(count);\n \n    }\n}\n先判断输入的字符串是否为空，长度是否相等。然后注意比较即可。', 'PHP', 'public class Main {\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()){\n            String str1 = sc.next();\n            String str2 = sc.next();\n            int a = \'T\'+\'A\';\n            int b = \'C\'+\'G\';\n            int count=0;\n            if(str1.length()==str2.length())\n            for(int i=0;i<str1.length();i++){\n                int c = str1.charAt(i)+str2.charAt(i);\n                if(a!=c && b!=c)count++;\n            }\n            System.out.print(count);\n        }\n    }\n}', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('303', 'ht', 'bc', '2', '牛牛的好朋友羊羊在纸上写了n + 1个整数，羊羊接着抹除掉了一个整数，给牛牛猜他抹除掉的数字是什么。牛牛知道羊羊写的整数神排序之后一串连续的正整数，牛牛现在要猜出所有可能是抹除掉的整数。例如：\n10 7 12 8 11那么抹除掉的整数只可能是9 \n5 6 7 8那么抹除掉的整数可能是4也可能是9', null, null, null, null, null, null, 'import java.util.Arrays;\nimport java.util.Scanner;\n \npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(); //抹除一个数之后剩下的数字个数\n        int[] num = new int[n];\n        for (int i = 0; i < n; i ++) {\n            num[i] = sc.nextInt();\n        }\n        //如果只有一个数字，注意保证输入正整数\n        if (n == 1) {\n            if (num[0] > 1) {\n                System.out.println(num[0] - 1 + \" \" + (num[0] + 1));\n                return;\n            } else {\n                System.out.println((num[0] + 1));\n                return;\n            }\n        }\n        //多个数字，先排序\n        Arrays.sort(num);\n \n        //如果有重复数字，则mistake\n        for (int i = 0; i < n-1; i ++) {\n            if (num[i] == num[i+1]) {\n                System.out.println(\"mistake\");\n            }\n        }\n        //现在没有了重复数字，那么可以根据最大数num[n-1]和最小数num[0]的差值来比较，\n        //这样去判断，中间数字是连续的，还是缺了一个，还是缺了多个\n        if (num[n-1] - num[0] > n) {\n            System.out.println(\"mistake\");\n        } else if (num[n-1] - num[0] == n) {\n            for (int i = 0; i < n-1; i ++) {\n                if (num[i] + 2 == num[i+1]) {\n                    System.out.println(num[i] + 1);\n                }\n            }\n        } else {\n            if (num[0] > 1) {\n                System.out.println(num[0] - 1 + \" \" + (num[n-1] + 1));\n            } else {\n                System.out.println((num[n-1] + 1));\n            }\n        }\n    }\n}', 'PHP', '#include<iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin>>n;\n    int min = 1000000001;\n    int max = 0;\n    int res = 0;\n    int num = 0;\n    for(int i = 0; i < n; i++) {\n        cin>>num;\n        if(num < min) min = num;\n        if(num > max) max = num;\n        res ^= num;\n    }\n    for(int i = min; i <= max; i++) {\n        res ^= i;\n    }\n    if(res == 0) {\n        if(min - 1> 0)\n            cout<<min-1<<\" \"<<max+1;\n        else cout<<max+1;\n    }\n    else if(res <= min || res >= max) {\n        cout<<\"mistake\"<<endl;\n    }\n    else cout<<res;\n}', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('304', 'ht', 'bc', '10', '如果一个数字能表示为p ^ q（^表示幂运算）且p为一个素数，q为大于1的正整数就称这个数字为超级素数幂。现在给出一个正整数n，如果n是一个超级素数幂需要找出对应的p，q。', null, null, null, null, null, null, 'import java.util.Scanner;\n \npublic class IsSuperPrime {\n    public static boolean isPrime(double i)\n    {\n        boolean isPrime = true;\n        for (int k = 2; k<=Math.sqrt(i); k++)\n        {\n            if (i%k==0)\n            {\n                isPrime = false;\n                break;\n            }\n        }\n        return isPrime;\n    }\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner in = new Scanner(System.in);\n        long number = in.nextLong();\n        boolean IsSuperPrime = false;\n        long datamax = (long)Math.pow(10, 18);\n        if ((number>=2)&&(number<=datamax))\n        {\n        int q = 2;\n        double p;\n        do\n        {\n            p =(int)(Math.pow(number, (1.0/q))+0.5);\n            if(number==Math.pow(p,q))\n            {\n                IsSuperPrime = isPrime(p);\n                 \n                if(IsSuperPrime)\n                {\n                    System.out.println((int)p+\" \"+(int)q);\n                    break;\n                }\n            }\n            q++;\n        }while(p>=2);\n         \n        if(!IsSuperPrime)\n        {\n            System.out.println(\"No\");\n        }\n \n        }\n        else\n        {\n            System.out.println(\"请输入一个2~10^18之间的数\");\n        }\n \n    }\n \n}', 'PHP', '来个javascript版的\nvar rl = require（“readline”）。createInterface（process.stdin，process.stdout）;\nvar args = [];\n\nrl.on（\'line\'，function（data）{\n    args.push（data）;\n    rl.close（）;\n\n}）;\n\nrl.on（\'close\'，function（）{\n    var num = args [0];\nvar p，q;\n/ *暴力的做法，分别循环处理p和q，但是编译器无法通过\nif（num> 2）{\nvar sum = 0;\nfor（p = 2; p <Math.sqrt（num）; p ++）{\nif（isPrime（p））{\nfor（q = 2; q <Math.sqrt（num）; q ++）{\nif（Math.pow（p，q）== num）{\nsum + = 1;\nconsole.log（p +“”+ q）;\n打破;\n}}\n}}\n}}\n}}\n}}\nif（sum == 0）{\nconsole.log（“No”）;\n} * /\n//方法二：从q到p的映射关系\nvar maxq = Math.log（num）/Math.log（2）; // N = p的q次方，显然p最小时q最大，因为最小的素数是2，所以q的上限也就是log2N\nfor（q = 2; q <= maxq; q ++）{\np = Math.pow（num，1 / q）;\nif（（p-parseInt（p）== 0）&& Math.pow（p，q）== num && isPrime（p））{\nconsole.log（p +“”+ q）;\n打破;\n}}\n}}\nif（q> maxq）{\nconsole.log（“No”）;\n}}\n\n}）;\n\n//首先是搞清楚如果判断一个数为素数\n\nfunction isPrime（num）{\nvar n = Math.sqrt（num）; //求平方根\nfor（var i = 2; i <= n; i ++）{\nif（num％i == 0）{\nreturn false;\n}}\n}}\nreturn true;', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('305', 'ht', 'bc', '15', '给出一个正整数N和长度L，找出一段长度大于等于L的连续非负整数，他们的和恰好为N。答案可能有多个，我我们需要找出长度最小的那个。\n例如 N = 18 L = 2：\n5 + 6 + 7 = 18 \n3 + 4 + 5 + 6 = 18\n都是满足要求的，但是我们输出更短的 5 6 7', null, null, null, null, null, null, 'import java.util.Scanner;\n/*\n * 题目需要找出一段长度大于等于L的连续非负整数，使得其和等于N。L要尽可能小。\n * 考虑是连续非负整数，所以其和我们能用中位数来表示，分两种情况：\n * 情况一，长度为奇数的情况：\n *   此时中位数一定是整数，N = 中位数 x L\n * 情况二，长度为偶数的情况：\n *   此时中位数肯定是xx.5的形式，N = xx.5 * L\n * 所以我们从长度L开始枚举，至100为止，分奇偶讨论。\n */\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt(), l = in.nextInt();\n        in.close();\n        int bg = -1, ed = -1;\n        for (int i = l; i <= 100; ++i) {\n            // 奇数，中位数一定是整数\n            if (i % 2 == 1 && n % i == 0) {\n                int mid = n / i;\n                bg = mid - (i - 1) / 2;\n                ed = mid + (i - 1) / 2;\n                if (bg >= 0) // 答案要合法，即需要是非负整数\n                    break;\n            }\n            // 偶数，中位数一定是0.5形式\n            if (i % 2 == 0 && (double)n / i - n / i == 0.5f) {\n                int mid = n / i;\n                bg = mid - i / 2 + 1;\n                ed = mid + i / 2;\n                if (bg >= 0)\n                    break;\n            }\n        }\n        if (bg >= 0) {\n            for (int i = bg; i < ed; ++i) {\n                System.out.print(i + \" \");\n            }\n            System.out.println(ed);\n        }\n        else {\n            System.out.println(\"No\");\n        }\n    }\n}', 'PHP', '#include<iostream>\nusing namespace std;\nint main() {\n    int N, L;\n    cin>>N>>L;\n    for(int i = L; i <= 100; i++) {\n        if((2*N+i-i*i)%(2*i) == 0) {\n            int start = (2*N+i-i*i)/(2*i);\n            for(int j = 0; j < i-1; j++) {\n                cout<<start+j<<\" \";\n            }\n            cout<<start+i-1;\n            return 0;\n        }\n    }\n    cout<<\"No\"<<endl;\n}', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('306', 'ht', 'bc', '2', '牛牛新买了一本算法书，算法书一共有n页，页码从1到n。牛牛于是想了一个算法题目：在这本算法书页码中0~9每个数字分别出现了多少次？', null, null, null, null, null, null, '#include<iostream>\nusing namespace std;\n \nint count(int n, int x) {\n    int res = 0, j;\n    for (int i = 1; j = n / i; i *= 10) {\n        int high = j / 10;\n        if (x == 0) {\n            if (high)\n                high--;\n            else\n                break;\n        }\n        res += high * i;\n        int tem = j % 10;\n        if (tem > x)\n            res += i;\n        else if (tem == x)\n            res += n - j * i + 1;\n    }\n    return res;\n}\n \nint main(){\n    int n;\n    while (cin >> n){\n        cout << count(n, 0);\n        for (int i = 1; i <= 9; i++)\n            cout << \" \" << count(n, i);\n    }\n    return 0;\n}\n//最优的解法了，时间复杂度O(log10(N))，以10为底N的对数，也就是N的位数', 'PHP', '//提供一种简单的思路\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String str = \"0123456789\";\n        while(scanner.hasNext()){\n            int n = scanner.nextInt();\n            int[] nums = new int[10];\n            for(int i=1;i<=n;i++){\n                char[] c = new String(i+\"\").toCharArray();\n                for(int j=0;j<c.length;j++){\n                    nums[str.indexOf(c[j])] +=1;\n                }\n            }\n            for(int i=0;i<nums.length-1;i++){\n                System.out.print(nums[i]+\" \");\n            }\n            System.out.println(nums[9]);\n        }\n    }  \n}', '1', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('307', 'ht', 'bc', '2', '牛牛正在挑战一款名为01翻转的游戏。游戏初始有A个0,B个1，牛牛的目标就是把所有的值都变为1，每次操作牛牛可以任意选择恰好K个数字，并将这K个数字的值进行翻转(0变为1，1变为0)。牛牛如果使用最少的操作次数完成这个游戏就可以获得奖品，牛牛想知道最少的操作次数是多少？\n例如:A = 4 B = 0 K = 3 \n0000 -> 1110 -> 1001 -> 0100 -> 1111 \n需要的最少操作次数为4', null, null, null, null, null, null, '#include<iostream>\n#include<cmath>\nusing namespace std;\n \nint function(int A, int B, int K){\n    int remainder = A % K;\n    int count = A / K;\n    B = B + A - remainder;\n    if (A == 0 || remainder == 0)\n        ;\n    else if ((A + B < K) || (A + B == K && B > 0) || (remainder % 2 == 1 && K % 2 == 0))\n        count = -1;\n    else if ((K + remainder) % 2 == 0 && count > 0 && B >= 2 * K - (remainder + K) / 2)\n        count++;\n    else if (remainder % 2 == 0)\n        count += 2 * ceil(remainder / double(2 * (B - K + remainder)));\n    else\n        count += 2 * ceil((K - remainder) / double(2 * (B - K + remainder))) + 1;\n \n    return count;\n}\n \nint main(){\n    int A, B, K;\n    cin >> A >> B >> K;\n    cout << function(A, B, K);\n    return 0;\n}\n//时间复杂度O(1),空间复杂度O(1)', 'PHP', '假设最后剩下的是a个0，此时a<2k,如果a==nk，那次数就直接是a/k了。接下来，假设在a个0中选择n个0进行翻转，则相应的翻转k-n个1，此时有（k-n)+(a-n)=k+a-2n个0，令其等于k可以得到a-2n=0，所以如果a是偶数，那么需要a/k+2次翻转。\n如果a是奇数，分两种情况，一是k是奇数，那么选择直接翻转这a个0，奇数-奇数得到偶数，回到上面一种情况，需要a/k+3次翻转。二是k是偶数，那么k+a-2n是偶数+奇数-偶数还是奇数，不可能使得a为偶数，所以此种情况下无解。\n——————————\n上述情况只适用于1的数量足够的情况，这种方法只能通过80%的用例，还是要使用BFS的方法来通过所有用例。', '2', 'ht', '2017-03-12');
INSERT INTO `questionbank` VALUES ('308', 'qd', 'sxz', '2', '下面哪一种不属于 js 的六种基本数据类型？（）', 'undefined`string`null`Object', 'undefined', 'string', 'null', 'Object', '4', 'D', 'JavaScript', 'S6 后新增了一类数据类型 ：Symbol ，根据 JavaScript 高程, ES5 中的基本数据类型有 5 种：Undefined、Null、Boolean、Number、String.而 Object 是属于复杂数据类型，所以我认为这里说的 6 种基本数据类型是指：Undefined、Null、Boolean、Number、String 与 Symbol.', '1', 'qd', '2017-03-12');
INSERT INTO `questionbank` VALUES ('309', 'qd', 'sxz', '2', '下列正确定义函数的是', 'function foo() {}`Function foo() {}`var foo = new Function() {}`var foo = new function() {}', 'function foo() {}', 'Function foo() {}', 'var foo = new Function() {}', 'var foo = new function() {}', '1', 'A', 'JavaScript', '答案是A。 在Javascript定义一个函数一般有如下三种方式： 1，函数关键字(function)语句： function fnMethodName(x){alert(x);} 2，函数字面量(Function Literals)： var fnMethodName = function(x){alert(x);} 3，Function()构造函数： var fnMethodName = new Function(‘x’,’alert(x);’) 上面三种方法定义了同一个方法函数fnMethodName，第1种就是最常用的方法，后两种都是把一个函数复制给变量fnMethodName，而这个函数是没有名字的，即匿名函数。实际上，相当多的语言都有匿名函数。', '2', 'qd', '2017-03-12');
INSERT INTO `questionbank` VALUES ('310', 'qd', 'sxz', '2', '在标准的 JavaScript 中， Ajax 异步执行调用基于下面哪一个机制才能实现？', 'Event和callback`多线程操作`多CPU核`Deferral和promise', 'Event和callback', '多线程操作', '多CPU核', 'Deferral和promise', '4', 'D', 'JavaScript', '', '1', 'qd', '2017-03-12');
INSERT INTO `questionbank` VALUES ('311', 'qd', 'sxz', '2', 'Number(null);\n上面的代码将返回：', 'Null`0`undefined`1', 'Null', '0', 'undefined', '1', '2', 'B', 'JavaScript', '', '1', 'qd', '2017-03-12');
INSERT INTO `questionbank` VALUES ('312', 'qd', 'sxz', '2', 'for(var i=0;i<5;++i){\nsetTimeout(function\n(){\n         console.log(i+ ’ ’);\n},100);\n}\n以上代码执行的结果是：（）。', '5 5 5 5 5`0 0 0 0 0`0 1 2 3 4`1 2 3 4 5', '5 5 5 5 5', '0 0 0 0 0', '0 1 2 3 4', '1 2 3 4 5', '1', 'A', 'JavaScript', 'setTimeout() 方法用于在指定的毫秒数后调用函数或计算表达式。 所以匿名函数根本就没有立即执行，而是在100毫秒后执行，匿名函数开始访问外部函数的变量时，变量的值早已成为最后一个即5', '1', 'qd', '2017-03-12');
INSERT INTO `questionbank` VALUES ('313', 'qd', 'cz', '20', '请描述一下 cookies，sessionStorage 和 localStorage 的区别？', null, null, null, null, null, null, 'cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。\ncookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递。\nsessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。\n存储大小：\ncookie数据大小不能超过4k。\nsessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。\n有期时间：\nlocalStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\nsessionStorage  数据在当前浏览器窗口关闭后自动删除。\ncookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭', 'JavaScript', '', '2', 'qd', '2017-03-14');
INSERT INTO `questionbank` VALUES ('314', 'qd', '语音题', '15', '如何在页面上实现一个圆形的可点击区域？', null, null, null, null, null, null, '（1）map+area或者svg\n（2）border-radius\n（3）纯js实现 需要求一个点在不在圆上简单算法、获取鼠标坐标等等', 'JavaScript', '', '1', 'qd', '2017-03-14');
INSERT INTO `questionbank` VALUES ('315', 'qd', 'bc', '10', '.js操作获取和设置cookie', null, null, null, null, null, null, '//创建cookie\nfunction setCookie(name, value, expires, path, domain, secure) {\n    var cookieText = encodeURIComponent(name) + \'=\' + encodeURIComponent(value);\n    if (expires instanceof Date) {\n        cookieText += \'; expires=\' + expires;\n    }\n    if (path) {\n        cookieText += \'; expires=\' + expires;\n    }\n    if (domain) {\n        cookieText += \'; domain=\' + domain;\n    }\n    if (secure) {\n        cookieText += \'; secure\';\n    }\n    document.cookie = cookieText;\n}\n\n//获取cookie\nfunction getCookie(name) {\n    var cookieName = encodeURIComponent(name) + \'=\';\n    var cookieStart = document.cookie.indexOf(cookieName);\n    var cookieValue = null;\n    if (cookieStart > -1) {\n        var cookieEnd = document.cookie.indexOf(\';\', cookieStart);\n        if (cookieEnd == -1) {\n            cookieEnd = document.cookie.length;\n        }\n        cookieValue = decodeURIComponent(document.cookie.substring(cookieStart + cookieName.length, cookieEnd));\n    }\n    return cookieValue;\n}\n\n//删除cookie\nfunction unsetCookie(name) {\n    document.cookie = name + \"= ; expires=\" + new Date(0);\n}', 'JavaScript', '', '2', 'qd', '2017-03-14');
INSERT INTO `questionbank` VALUES ('316', 'qd', '语音题', '20', '什么是闭包？', null, null, null, null, null, null, '闭包，官方对闭包的解释是：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。闭包的特点：\n（1）作为一个函数变量的一个引用，当函数返回时，其处于激活状态。\n（2） 一个闭包就是当一个函数返回时，一个没有释放资源的栈区。\n简单的说，Javascript允许使用内部函数---即函数定义和函数表达式位于另一个函数的函数体内。而且，这些内部函数可以访问它们所在的外部函数中声明的所有局部变量、参数和声明的其他内部函数。当其中一个这样的内部函数在包含它们的外部函数之外被调用时，就会形成闭包。', 'JavaScript', '', '1', 'qd', '2017-03-14');
INSERT INTO `questionbank` VALUES ('317', 'ht', '语音题', '10', 'jQuery的美元符号$有什么作用？', null, null, null, null, null, null, '其实美元符号$只是”jQuery”的别名，它是jQuery的选择器，如下代码：\n\n$(document).ready(function(){\n\n});', 'JQuery', '当然你也可以用jQuery来代替$，如下代码：\n\njQuery(document).ready(function(){\n\n});\njQuery中就是通过这个美元符号来实现各种灵活的DOM元素选择的，例如$(“#main”)即选中id为main的元素。', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('318', 'ht', 'cz', '10', 'body中的onload()函数和jQuery中的document.ready()有什么区别？', null, null, null, null, null, null, 'onload()和document.ready()的区别有以下两点：\n\n1、我们可以在页面中使用多个document.ready()，但只能使用一次onload()。\n\n2、document.ready()函数在页面DOM元素加载完以后就会被调用，而onload()函数则要在所有的关联资源（包括图像、音频）加载完毕后才会调用', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('319', 'ht', '语音题', '15', '你在jQuery中会用哪几种类型的选择器？', null, null, null, null, null, null, '从我自己的角度来讲，可以有3种类型的选择器，如下：\n\n1、基本选择器：直接根据id、css类名、元素名返回匹配的dom元素。\n\n2、层次选择器：也叫做路径选择器，可以根据路径层次来选择相应的DOM元素。\n\n3、过滤选择器：在前面的基础上过滤相关条件，得到匹配的dom元素。', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('320', 'ht', 'cz', '10', '请使用jQuery将页面上的所有元素边框设置为2px宽的虚线？', null, null, null, null, null, null, '这正是jQuery选择器上场的时候了，代码如下：\n\n<script language=\"javascript\" type=\"text/javascript\">\n\n         $(\"*\").css(\"border\", \"2px dotted red\"); \n\n</script>', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('321', 'ht', 'cz', '10', '当CDN上的jQuery文件不可用时，该怎么办？', null, null, null, null, null, null, '为了节省带宽和脚本引用的稳定性，我们会使用CDN上的jQuery文件，例如google的jquery cdn服务。但是如果这些CDN上的jQuery服务不可用，我们还可以通过以下代码来切换到本地服务器的jQuery版本：\n\n \n<script type=\"text/javascript\" language=\"Javascript\" src=\"http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.4.1.min.js \"></script>\n\n<script type=\'text/javascript\'>//<![CDATA[\n\nif (typeof jQuery == \'undefined\') {\n\ndocument.write(unescape(\"%3Cscript src=\'/Script/jquery-1.4.1.min.js\' type=\'text/javascript\' %3E%3C/script%3E\"));\n\n}//]]>\n\n</script>', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('322', 'ht', 'cz', '10', '如何使用jQuery实现点击按钮弹出一个对话框？', null, null, null, null, null, null, 'HTML：\n\n<input id=\"inputField\" type=\"text\" size=\"12\"/>\njQuery：\n\n<script type=\"text/javascript\"> $(document).ready(function () { $(\'#Button1\').click(function () { alert($(\'#inputField\').attr(\"value\")); }); }); </script>', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('323', 'ht', 'cz', '10', 'jQuery中的Delegate()函数有什么作用？', null, null, null, null, null, null, 'delegate()会在以下两个情况下使用到：\n\n1、如果你有一个父元素，需要给其下的子元素添加事件，这时你可以使用delegate()了，代码如下：\n\n$(\"ul\").delegate(\"li\", \"click\", function(){\n\n$(this).hide();\n\n});\n2、当元素在当前页面中不可用时，可以使用delegate()', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('324', 'ht', 'cz', '10', '怎样用jQuery编码和解码URL？', null, null, null, null, null, null, '在jQuery中，我们可以使用以下方法实现URL的编码和解码。\n\nencodeURIComponent(url) and decodeURIComponent(url)', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('325', 'ht', 'cz', '10', '如何用jQuery禁用浏览器的前进后退按钮？', null, null, null, null, null, null, '实现代码如下：\n\n<script type=\"text/javascript\" language=\"javascript\">\n\n$(document).ready(function() {\n\n     window.history.forward(1);\n\n     //OR\n\n     window.history.forward(-1);\n\n});\n\n</script>', 'JQuery', '', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('326', 'ht', 'sxz', '2', '下面哪种不是jquery的选择器？', '基本选择器`后代选择器`类选择器`进一步选择器', '基本选择器', '后代选择器', '类选择器', '进一步选择器', '3', 'C', 'JQuery', '考点:jquery的选择器 (C)', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('327', 'ht', 'sxz', '2', '当DOM加载完成后要执行的函数，下面哪个是正确的？', 'jQuery(expression, [context])`jQuery(html, [ownerDocument])`jQuery(callback)`jQuery(elements)', 'jQuery(expression, [context])', 'jQuery(html, [ownerDocument])', 'jQuery(callback)', 'jQuery(elements)', '3', 'C', 'JQuery', '考点：jquery的核心函数 (C)', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('328', 'ht', 'sxz', '2', '下面哪一个是用来追加到指定元素的末尾的？', 'insertAfter()`append()`appendTo()`after()', 'insertAfter()', 'append()', 'appendTo()', 'after()', '3', 'C', 'JQuery', '考点：jquery的核心函数 (C)', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('329', 'ht', 'sxz', '2', '下面哪一个不是jquery对象访问的方法？', 'each(callback)`size()`index(subject)`index()', 'each(callback)', 'size()', 'index(subject)', 'index()', '4', 'D', 'JQuery', '考点： jquery的核心函数之对象访问 （D）', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('330', 'ht', 'sxz', '2', '有这样一个表单元素，想要找到这个hidden元素，下面哪个是正确的？', 'visible`hidden`visible()`hidden()', 'visible', 'hidden', 'visible()', 'hidden()', '2', 'B', 'JQuery', '考点：jquery的选择器 （B）', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('331', 'ht', 'sxz', '2', '如果需要匹配包含文本的元素，用下面哪种来实现？', 'text()`contains()`input()`attr(name)', 'text()', 'contains()', 'input()', 'attr(name)', '2', 'B', 'JQuery', '考点：jquery的选择器 （B）', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('332', 'ht', 'sxz', '2', '如果想要找到一个表格的指定行数的元素，用下面哪个方法可以快速找到指定元素？', 'text()`get()`eq()`contents（）', 'text()', 'get()', 'eq()', 'contents（）', '3', 'C', 'JQuery', '考点：jquery的选择器 （C）', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('333', 'ht', 'sxz', '2', '下面哪种不属于jquery的筛选？', '过滤`自动`查找`串联', '过滤', '自动', '查找', '串联', '2', 'B', 'JQuery', '考点：jquery的筛选 (B)', '1', 'ht', '2017-03-14');
INSERT INTO `questionbank` VALUES ('334', 'ht', 'sxz', '2', '如果想在一个指定的元素后添加内容，下面哪个是实现该功能的？', 'append(content)`appendTo(content)`insertAfter(content)`after(content)', 'append(content)', 'appendTo(content)', 'insertAfter(content)', 'after(content)', '4', 'D', 'JQuery', '考点：jquery的文档处理 (D)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('335', 'ht', 'sxz', '2', '在jquey中，如果想要从DOM中删除所有匹配的元素，下面哪一个是正确的？', 'delete()`delete()`remove()`removeAll()', 'delete()', 'delete()', 'remove()', 'removeAll()', '3', 'C', 'JQuery', '考点：jquery的文档处理 （C)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('336', 'ht', 'sxz', '2', '在jquery中，想要给第一个指定的元素添加样式，下面哪一个是正确的？', 'first`eq(1)`css(name)`css(name,value)', 'first', 'eq(1)', 'css(name)', 'css(name,value)', '3', 'C', 'JQuery', '考点： jquery的css处理 （C）', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('337', 'ht', 'sxz', '2', '在jquery中，如果想要获取当前窗口的宽度值，下面哪个是实现该功能的？', 'width()`width(val)`width`innerWidth()', 'width()', 'width(val)', 'width', 'innerWidth()', '1', 'A', 'JQuery', '考点：jquery的css处理 （A)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('338', 'ht', 'sxz', '2', '为每一个指定元素的指定事件（像click）绑定一个事件处理器函数，下面哪个是用来实现该功能的？', 'trigger(type)`bind(type)`one(type)`bind', 'trigger(type)', 'bind(type)', 'one(type)', 'bind', '2', 'B', 'JQuery', '考点：jquery的事件操作 (B)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('339', 'ht', 'sxz', '2', '在一个表单中，如果想要给输入框添加一个输入验证，可以用下面的哪个事件实现？', 'hover(over ,out)`keypress（fn`change()`change(fn)', 'hover(over ,out)', 'keypress（fn', 'change()', 'change(fn)', '4', 'D', 'JQuery', '考点：jquery的事件处理 (D)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('340', 'ht', 'sxz', '2', '当一个文本框中的内容被选中时，想要执行指定的方法时，可以使用下面哪个事件来实现？', 'click(fn)`change(fn)`select(fn)`bind(fn)', 'click(fn)', 'change(fn)', 'select(fn)', 'bind(fn)', '3', 'C', 'JQuery', '考点：jquery的事件处理 (C)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('341', 'ht', 'sxz', '2', '在jquery中想要实现通过远程http get请求载入信息功能的是下面的哪一下事件？', '$.ajax()`load(url)`$.get(url)`$. getScript(url)', '$.ajax()', 'load(url)', '$.get(url)', '$. getScript(url)', '3', 'C', 'JQuery', '考点：jquery的ajax (C)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('342', 'ht', 'sxz', '2', '下面不属于ajax事件的是？', 'ajaxComplete(callback)`ajaxSuccess(callback)`$.post(url)`ajaxSend(callback)', 'ajaxComplete(callback)', 'ajaxSuccess(callback)', '$.post(url)', 'ajaxSend(callback)', '3', 'C', 'JQuery', '考点：jquery的ajax （C)', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('343', 'ht', 'sxz', '2', '在jquery中指定一个类，如果存在就执行删除功能，如果不存在就执行添加功能，下面哪一个是可以直接完成该功能的？', 'removeClass()`deleteClass()`toggleClass(class)`addClass()', 'removeClass()', 'deleteClass()', 'toggleClass(class)', 'addClass()', '3', 'C', 'JQuery', '考点：jquery的属性 （C）', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('344', 'ht', 'sxz', '2', '在jquery中想要找到所有元素的同辈元素，下面哪一个是可以实现的？', 'eq(index)`find(expr)`siblings([expr])`next()', 'eq(index)', 'find(expr)', 'siblings([expr])', 'next()', '3', 'C', 'JQuery', '考点：jquery的筛选 （C）', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('345', 'qd', 'sxz', '2', '下面哪一个不是检索一个对象的定位方式的属性?', 'static`absolute`fixed`top', 'static', 'absolute', 'fixed', 'top', '4', 'D', 'CSS', '考点：css的定位 （D）', '1', 'qd', '2017-03-16');
INSERT INTO `questionbank` VALUES ('346', 'qd', 'sxz', '2', '下面哪个是display布局中用来设置对象以块显示，并添加新行的？', 'inline`none`block`compact', 'inline', 'none', 'block', 'compact', '3', 'C', 'CSS', '考点：css的布局 (C)', '1', 'qd', '2017-03-16');
INSERT INTO `questionbank` VALUES ('347', 'ht', 'cz', '10', '你在公司是怎么用jquery的？', null, null, null, null, null, null, '在项目中是怎么用的是看看你有没有项目经验(根据自己的实际情况来回答)   你用过的选择器啊，复选框啊，表单啊，ajax啊，事件等   配置Jquery环境 下载jquery类库 在jsp页面引用jquery类库即可   <script type=\"text/javascript\" \nsrc=\"jquery/jquery-1.7.2.min.js\"/>   接下来通过在  \n\n\n\n\n\n\n\n\n\n <script>    $(function(){         });\n   </script>', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('348', 'ht', '语音题', '15', '你为什么要使用jquery？', null, null, null, null, null, null, '因为jQuery是轻量级的框架，大小不到30kb,它有强大的选择器，  \n 出色的DOM操作的封装，有可靠的事件处理机制(jQuery在处理事件绑定的时候相当的可靠)，   完善的ajax(它的ajax封装的非常的好，不需要考虑复杂浏览器的兼容性和XMLHttpRequest   对象的创建和使用的问题。) 出色的浏览器的兼容性。 而且支持链式操作，隐式迭代。   行为层和结构层的分离，还支持丰富的插件，jquery的文档也非常的丰富。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('349', 'ht', 'sxz', '2', '你使用jquery遇到过哪些问题，你是怎么解决的？', null, null, null, null, null, null, '例 前台拿不到值，JSON 可是出现的错误(多了一个空格等)这编译是不会报错的  \n jquery库与其他库冲突：   1>如果其他库在jquery库之前导入的话    1.我们可以通过jquery.noconflict()将变量的$的控制权过度给其他库    2.自定义快捷键,用一个变量接住jquery.noconflict()    3.通过函数传参   2>如果jquery库在其他库之前导入就直接使用jquery   今天在处理一个数据问题时，发现jQuery.ajax()方法返回的值一直有问题，清除缓存后数据无误，   多次测试后发现返回的值都是之前的值，并且一直未执行url(后台为JAVA，设置断点一直未进入)。在网上查找下,发现是未设置type的原因。   如果没设置jQuery.ajax的type=\"Post\"，那么ajax就会默认type=\"Get\"，这就会导致之前数据被缓存起来。加上type=\"Post\"，问题解决！', 'JQuery', '这个答案是开发的，看你是否有相关的项目经验。', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('350', 'ht', 'sxz', '2', '你知道jquery中的选择器吗，请讲一下有哪些选择器？', null, null, null, null, null, null, 'jQuery中的选择器大致分为:基本选择器，层次选择器，过滤选择器，表单选择器', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('351', 'ht', 'cz', '10', 'jquery中的选择器 和 css中的选择器有区别吗？', null, null, null, null, null, null, 'jQuery选择器支持CSS里的选择器，jQuery选择器可用来添加样式和添加相应的行为CSS中的选择器是只能添加相应的样式', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('352', 'ht', 'cz', '10', '你觉得jquery中的选择器有什么优势？', null, null, null, null, null, null, '简单的写法  $(\'ID\') 来代替 document.getElementById()函数,  \n支持CSS1 到CSS3 选择器完善的处理机制(就算写错了id也不会报错)', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('353', 'ht', '语音题', '10', '你在使用选择器的时候有有没有什么觉得要注意的地方？', null, null, null, null, null, null, '1 选择器中含有\".\",\"#\",\"[\" 等特殊字符的时候需要进行转译  \n2 属性选择器的引号问题   \n3 选择器中含有空格的注意事项', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('354', 'ht', '语音题', '10', 'jquery对象和dom对象是怎样转换的？', null, null, null, null, null, null, 'jquery转DOM对象:jQuery 对象是一个数组对象，可以通过[index]的丰富得到相应的DOM对象      \n还可以通过get[index]去得到相应的DOM对象。   \nDOM对象转jQuery对象:$(DOM对象)', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('355', 'ht', '语音题', '10', '你是如何使用jquery中的ajax的？', null, null, null, null, null, null, '如果是一些常规的ajax程序的话，使用load(),$.get(),$.post(),就可以搞定了,一般我会使用的是$.post()方法。如果需要设定beforeSend(提交前回调函数),error(失败后处理),success(成功后处理)及complete(请求完成后处理)回调函数等，这个时候我会使用$.ajax()', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('356', 'ht', 'cz', '15', '你觉得jquery中的ajax好用吗，为什么？', null, null, null, null, null, null, '好用的。因为jQuery提供了一些日常开发中夙瑶的快捷操作，例 load，ajax，get，post等等，   所以使用jQuery开发ajax将变得极其简单，我们就可以集中精力在业务和用户的体验上，不需要去理会那些繁琐的XMLHttpRequest对象了。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('357', 'ht', 'cz', '15', 'jquery中$.get()提交和$.post()提交有区别吗？', null, null, null, null, null, null, '1 $.get() 方法使用GET方法来进行异步请求的。$.post() 方法使用POST方法来进行异步请求的。  \n2 get请求会将参数跟在URL后进行传递，而POST请求则是作为HTTP消息的实体   内容发送给Web服务器的，这种传递是对用户不可见的。  \n3 get方式传输的数据大小不能超过2KB 而POST要大的多  \n4 GET 方式请求的数据会被浏览器缓存起来，因此有安全问题。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('358', 'ht', 'cz', '10', 'jquery中的load方法一般怎么用的？', null, null, null, null, null, null, 'load方法一般在载入远程HTML代码并插入到DOM中的时候用,通常用来从Web服务器上获取静态的数据文件。如果要传递参数的话，可以使用$.get() 或 $.post()', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('359', 'ht', 'cz', '10', '在jquery中你是如何去操作样式的？', null, null, null, null, null, null, 'addClass() 来追加样式   \nremoveClass() 来删除样式  \ntoggle() 来切换样式', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('360', 'ht', '语音题', '10', '简单的讲叙一下jquery是怎么处理事件的，你用过哪些事件？', null, null, null, null, null, null, '首先去装载文档，在页面家在完毕后，浏览器会通过javascript 为DOM元素添加事件。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('361', 'ht', '语音题', '10', '你使用过jquery中的动画吗，是怎样用的？', null, null, null, null, null, null, '使用过。hide() 和 show() 同时修改多个样式属性。像高度，宽度，不透明度。fadeIn()和fadeOut(),fadeTo()只改变不透明度slideUp()和slideDown(),slideToggle()只改变高度,animate()属于自定义动画的方法.', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('362', 'ht', '语音题', '15', '你使用过jquery中的插件吗？', null, null, null, null, null, null, '看个人的实力和经验来回答了。', 'JQuery', '', '2', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('363', 'ht', '语音题', '10', '你一般用什么去提交数据，为什么？', null, null, null, null, null, null, '一般我会使用的是$.post() 方法。如果需要设定beforeSend(提交前回调函数),error(失败后处理),success(成功后处理)及complete(请求完成后处理)回调函数等，这个时候我会使用$.ajax()', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('364', 'ht', 'cz', '10', '在jquery中引入css有几种方式？', null, null, null, null, null, null, '四种 行内式，内嵌式，导入式，链接式', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('365', 'ht', '语音题', '10', '你在jquery中使用过哪些插入节点的方法，它们的区别是什么？', null, null, null, null, null, null, 'append(),appendTo(),prepend(),prependTo(),after(),insertAfter()before(),insertBefore(),大致可以分内部追加和外部追加,append() 表式向每个元素内部追加内容。appendTo()表示将所有的元素追加到指定的元素中。例$(A)appendTo(B) 是将A追加到B中', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('366', 'ht', '语音题', '15', '你使用过包裹节点的方法吗，包裹节点有方法有什么好处？', null, null, null, null, null, null, 'wrapAll(),wrap(), wrapInner()   \n需要在文档中插入额外的结构化标记的时候可以使用这些包裹的方法   \n应为它不会帛画原始文档的语义', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('367', 'ht', 'cz', '10', 'jquery中如何来获取或和设置属性？', null, null, null, null, null, null, 'jQuery中可以用attr()方法来获取和设置元素属性removeAttr() 方法来删除元素属性', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('368', 'ht', '语音题', '15', '如何来设置和获取HTML 和文本的值？', null, null, null, null, null, null, 'html()方法类似于innerHTML属性，可以用来读取或者设置某个元素中的HTML内容。\n注意：html() 可以用于xhtml文档 不能用于xml文档\ntext()类似于innerText属性 可以用来读取或设置某个元素中文本内容，val() 可以用来设置和获取元素的值', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('369', 'ht', '语音题', '10', '你jquery中有哪些方法可以遍历节点？', null, null, null, null, null, null, 'children()取得匹配元素的子元素集合,只考虑子元素不考虑后代元素   \nnext()取得匹配元素后面紧邻的同辈元素   \nprev()取得匹配元素前面紧邻的同辈元素   \nsiblings()取得匹配元素前后的所有同辈元素   \nclosest()取得最近的匹配元素   \nfind()取得匹配元素中的元素集合，包括子代和后代', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('370', 'ht', 'cz', '10', '子元素选择器 和后代选择器元素有什么区别？', null, null, null, null, null, null, '子代元素是找子节点下的所有元素,后代元素是找子节点或子节点的子节点中的元素', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('371', 'ht', '语音题', '10', '在jquery中可以替换节点吗？', null, null, null, null, null, null, '可以。在jQuery中有两者替换节点的方式replaceWith()和replaceAll()。例如在<p title=\"hao are you\">hao are you</p>替换成<strong>I am fine<strong>  \n$(\'p\').replaceWith(\'<strong>I am fine</strong>\');replaceAll 与replaceWith的用法前后调换一下即可。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('372', 'ht', '语音题', '10', '你觉得beforeSend方法有什么用？', null, null, null, null, null, null, '发送请求前可以修改XMLHttpRequest对象的函数，在beforeSend中，如果返回false 可以取消本次的Ajax请求。XMLHttpRequest对象是唯一的参数，所以在这个方法里可以做验证', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('373', 'ht', 'cz', '15', 'siblings() 方法 和 $(\'prev~div\')选择器是一样的吗？', null, null, null, null, null, null, '$(\'prev~div\') 只能选择\'#prev\'元素后面的同辈<div>元素，而siblings()方法与前后的文职无关，只要是同辈节点就都能匹配。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('374', 'ht', 'cz', '15', '你在ajax中使用过JSON吗，你是如何用的？', null, null, null, null, null, null, '使用过，在$.getJSON()方法的时候就是。因为$.getJSON()就是用于加载JSON文件的。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('375', 'ht', 'cz', '10', '有哪些查询节点的选择器？', null, null, null, null, null, null, '我在公司使用过 :first 查询第一个，:last 查询最后一个，:odd查询奇数但是索引从0开始:even 查询偶数，:eq(index)查询相等的,:gt(index)查询大于index的,:lt查询小于index:header选取所有的标题等', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('376', 'ht', 'cz', '10', 'nextAll()能替代$(\'prev~siblindgs\')选择器吗？', null, null, null, null, null, null, '能。使用nextAll() 和使用$(\'prev~siblindgs\')是一样的。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('377', 'ht', 'cz', '10', 'jQuery中有几种方法可以来设置和获取样式', null, null, null, null, null, null, 'addClass()方法，attr()方法', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('378', 'ht', '语音题', '10', '$(document).ready()方法和window.onload有什么区别？', null, null, null, null, null, null, '两个方法有相似的功能，但是在实行时机方面是有区别的。\n1 window.onload方法是在网页中所有的元素(包括元素的所有关联文件)完全加载到浏览器后才执行的。\n2 $(document).ready() 方法可以在DOM载入就绪时就对其进行操纵，并调用执行绑定的函数。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('379', 'ht', '语音题', '10', 'jQuery是如何处理缓存的？', null, null, null, null, null, null, '要处理缓存就是禁用缓存.   \n1 通过$.post()方法来获取数据，那么默认就是禁用缓存的。   \n2 通过$.get()方法 来获取数据，可以通过设置时间戳来避免缓存。可以在URL后面加上+(+new Date)例 $.get(\'ajax.xml?\'+(+new Date),function () {     //内容    });   \n3 通过$.ajax 方法来获取数据，只要设置cache:false即可。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('380', 'ht', 'cz', '10', '$.getScript()方法和 $.getJson()方法有什么区别？', null, null, null, null, null, null, '1 $.getScript()方法可以直接加载.js文件，并且不需要对javascript文件进行处理，javascript文件会自动执行。   \n2 $.getJson()是用于加载JSON文件的用法和$.getScript()类似。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('381', 'ht', '语音题', '10', '你读过有关于jQuery的书吗？', null, null, null, null, null, null, '《jquery基础教程》 《jquery实战》 《锋利的jquery》 《巧用jquery》  《jQuery用户界面库学习指南》等', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('382', 'ht', 'cz', '10', '$(\"#msg\").text(); 和 $(\"#msg\").text(\"<b>new content</b>\");有什么区别？', null, null, null, null, null, null, '1 $(\"#msg\").text() 是 返回id为msg的元素节点的文本内容   \n2 $(\"#msg\").text(\"<b>new content</b>\");是将“<b>new content</b>”作为普通文本串写入id为msg的元素节点内容中,页面显示粗体的<b>new content</b>', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('383', 'ht', 'cz', '10', 'radio单选组的第二个元素为当前选中值，该怎么去取？', null, null, null, null, null, null, '$(\'input[name=items]\').get(1).checked = true;', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('384', 'ht', 'cz', '5', '选择器中 id，class有什么区别？', null, null, null, null, null, null, '在网页中 每个id名称只能用一次，class可以允许重复使用', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('385', 'ht', '语音题', '15', '你使用过哪些数据格式，它们各有什么特点？', null, null, null, null, null, null, 'HTML格式 ,JSON格式,javascript格式,XML格式   \n1 HTML片段提供外部数据一般来说是最简单的。   \n2 如果数据需要重用，而且其他应用程序也可能一次受到影响，那么在性能和文件大小方面具有优势的JSON通常是不错的选择。   \n3 而当远程应用程序未知时，XML则能够为良好的互操作性提供最可靠的保证。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('386', 'ht', 'cz', '15', 'jQuery 能做什么？', null, null, null, null, null, null, '1 获取页面的元素    \n2 修改页面的外观   \n3 改变页面大的内容   \n4 响应用户的页面操作   \n5 为页面添加动态效果   \n6 无需刷新页面，即可以从服务器获取信息   \n7 简化常见的javascript任务', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('387', 'ht', 'cz', '10', '在ajax中data主要有几种方式？', null, null, null, null, null, null, '三种，html拼接的，json数组，form表单经serialize()序列化的。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('388', 'ht', 'cz', '15', 'jQuery中的hover()和toggle()有什么区别？', null, null, null, null, null, null, 'hover()和toggle()都是jQuery中两个合成事件。hover()方法用于模拟光标悬停事件。toggle()方法是连续点击事件。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('389', 'ht', 'cz', '10', '你知道jQuery中的事件冒泡吗，它是怎么执行的，何如来停止冒泡事件？', null, null, null, null, null, null, '知道。事件冒泡是从里面的往外面开始触发。在jQuery中提供了stopPropagation()方法可以停止冒泡。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('390', 'ht', 'cz', '15', '单击超链接后会自动跳转，单击\"提交\"按钮后表单会提交等，有时候我想阻止这些默认的行为，该怎么办？', null, null, null, null, null, null, '可以用event.preventDefault()或在事件处理函数中返回false，即return false;', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('391', 'ht', 'cz', '10', 'jquery表单提交前有几种校验方法？分别为？', null, null, null, null, null, null, 'formData:返回一个数组，可以通过循环调用来校验jaForm：返回一个jQuery对象，所有需要先转换成dom对象fieldValue：返回一个数组beforeSend()。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('392', 'ht', 'cz', '15', '在jquery中你有没有编写过插件，插件有什么好处？你编写过那些插件？它应该注意那些？', null, null, null, null, null, null, '插件的好处：对已有的一系列方法或函数的封装，以便在其他地方重新利用，方便后期维护和提高开发效率   \n插件的分类：封装对象方法插件 、封装全局函数插件、选择器插件   \n注意的地方：1.插件的文件名推荐命名为jquery.[插件名].js，以免和其他的javaScript库插件混淆    \n2.所有的对象方法都应当附加到jQuery.fn对象上，而所有的全局函数都应当附加到jQuery对象本身上    \n3.插件应该返回一个jQuery对象，以保证插件的可链式操作    \n4.避免在插件内部使用$作为jQuery对象的别名,而应使用完整的jQuery来表示，这样可以避免冲突或使用闭包来避免    \n5.所有的方法或函数插件，都应当一分好结尾，否则压缩的时候可能出现问题。在插件头部加上分号，这样可以避免他人的不规范代码给插件带来影响    \n6.在插件中通过$.extent({})封装全局函数,选择器插件，扩展已有的object对象，通过$.fn.extend({})封装对象方法插件', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('393', 'ht', 'cz', '10', '怎样给jquery动态附加新的元素?那么怎样给新生成的元素绑定事件呢？', null, null, null, null, null, null, 'jQuery的html()可以给现在元素附加新的元素，直接在元素还未生成前就绑定肯定是无效的，因为所绑定的元素目前根本不存在。所以我们可以通过live和livequery来动态绑定事件。', 'JQuery', '', '1', 'ht', '2017-03-16');
INSERT INTO `questionbank` VALUES ('394', null, 'sxm', '2', '1', null, '1', '1', '1', '1', null, '1', 'HTML', '1', '1', 'ht', '2017-04-14');

-- ----------------------------
-- Table structure for questionpaper
-- ----------------------------
DROP TABLE IF EXISTS `questionpaper`;
CREATE TABLE `questionpaper` (
  `paperid` int(11) NOT NULL AUTO_INCREMENT,
  `questionid` int(11) NOT NULL,
  `questiontype` int(255) NOT NULL,
  `useranswer` varchar(255) NOT NULL,
  `score` int(255) NOT NULL,
  `turescore` int(255) NOT NULL,
  `testrecodvalid` tinyint(11) NOT NULL,
  PRIMARY KEY (`paperid`),
  KEY `questionid` (`questionid`) USING HASH
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of questionpaper
-- ----------------------------

-- ----------------------------
-- Table structure for recuitmentinfo
-- ----------------------------
DROP TABLE IF EXISTS `recuitmentinfo`;
CREATE TABLE `recuitmentinfo` (
  `recuitmentid` int(11) NOT NULL AUTO_INCREMENT,
  `position` varchar(255) NOT NULL,
  `salary` varchar(10) NOT NULL,
  `degree` varchar(255) DEFAULT NULL,
  `numbers` int(5) NOT NULL,
  `place` text NOT NULL,
  `welfare` text NOT NULL,
  `positiondescribe` text NOT NULL,
  `company` text,
  `companyintroduct` text NOT NULL,
  `recruiter` varchar(255) NOT NULL,
  `recruittel` int(11) NOT NULL,
  PRIMARY KEY (`recuitmentid`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of recuitmentinfo
-- ----------------------------
INSERT INTO `recuitmentinfo` VALUES ('1', '联想研究院计算机视觉实习生', '另议', '不限', '3', '北京联想研究院', '暂无', '辅助研发人员进行算法研发及前沿技术的调研，数据处理及性能评测；\n1、计算机视觉、模式识别、图像处理、计算机等相关专业在读硕士；\n2、良好的C/C 程序开发能力和算法实现功底、熟悉OpenCV、Python等开发语音及工具者优先； \n3、能够熟练阅读相关英文论文和专利，并能快速编程实现； \n4、良好的沟通和学习能力。', '联想', '联想研究院（Lenovo Corporate Research & Development）成立于1999年1月，是联想集团公司级的中央研发机构。自成立以来，联想研究院始终致力于推动公司和所在区域的技术进步和长远发展，为公司提供持久的核心竞争力，创造新的利润增长点，为中国信息产业提供源源不断的创新动力。', '陈', '123456789');
INSERT INTO `recuitmentinfo` VALUES ('2', '今日头条web前端实习生', '3500', '本科', '5', '北京', '暂无', '负责头条号文章详情页卡片研发工作、头条号作者pc端和无线端的作者管理后台前端研发工作。致力于构建头条内容生态，为创作者带来极致的创作体验，为用户提供最优质的内容\n1、2018年 、2019年应届毕业生，本科及以上学历，计算机相关专业；\n2、热爱计算机科学和互联网技术，对各种Web前端技术有深刻理解；\n3、关注Web发展，对新技术充满激情与好奇心，期待或者已经开发出优秀的产品；\n4、理解RIA，有Ajax相关的实践经验，对React.js，VUE.js，Angular.js等MVVM框架能熟练运用至少一种，且了解其基本原理；\n5、对可用性、可访问性等相关知识有实际的了解和实践经验；\n6、熟悉服务器端Web应用结构，有服务器端脚本语言经验更佳；\n7、团队精神，性格乐观，能积极面对压力。', '今日头条', '今日头条是一款基于数据挖掘的推荐引擎产品，它为用户推荐有价值的、个性化的信息，提供连接人与信息的新型服务，是国内移动互联网领域成长最快的产品服务之一。', '赵', '456123');
INSERT INTO `recuitmentinfo` VALUES ('3', '京东自然语言处理实习生', '3500', '不限', '1', '北京', '暂无', '1、	负责中文分词、词性标注、海量数据处理与挖掘、知识库建设等研发工作；\n2、负责语义分析、意图识别、情感分析等工作。\n3、计算机相关专业，本科以上学历；\n4、精通NLP相关编程语言两种以上, 并至少精通一种脚本语言； \n5、对自然语言处理、人工智能等具有浓厚的兴趣； \n6、熟悉基本机器学习算法； \n7、可保证6个月以上实习，每周保证4-5天出勤。', '京东', '京东（JD.com） 是中国最大的自营式电商企业。目前，京东集团旗下设有京东商城、京东金融、拍拍网、京东智能、O2O及海外事业部。2014年5月，京东在美国纳斯达克证券交易所正式挂牌上市，是中国第一个成功赴美上市的大型综合型电商平台，与腾讯、百度等中国互联网巨头共同跻身全球前十大互联网公司排行榜。2014年，京东市场交易额达到2602亿元，净收入达到1150亿元。', '李', '2580999');
INSERT INTO `recuitmentinfo` VALUES ('4', '爱奇艺PHP后台开发实习生', '面议', '本科', '1', '北京', '周末双休', '主要工作是负责自动化运维平台的开发与维护\n1、1年以上php开发经验，有Yii框架开发经验者优先 \n2、熟悉js css jquery，能够书写简单的脚本和样式 \n3、熟悉数据库，熟悉mysql和数据结构 \n4、具备良好的沟通能力，较强的责任心以及团队合作精神', '爱奇艺影音娱乐', '爱奇艺，中国视频行业领先者。2010年4月22日正式上线，秉承“悦享品质”的品牌口号，积极推动产品、技术、内容、营销等全方位创新，为用户 提供丰富、高清、流畅的专业视频体验，致力于让人们平等、便捷地获得更多、更好的视频。', '韩', '1898919');
INSERT INTO `recuitmentinfo` VALUES ('5', 'web前端开发工程师', '面议', '大专', '3', '南充创业小镇', '五险一金、包住、周末双休', '​任职要求：\n1、根据产品设计需求，配合后台开发人员实现产品界面和功能，维护及优化前端页面性能；\n2、精通XHTML/CSS/JavaScript/DOM/AJAX等各种Web前端技术；\n3、精通DIV+CSS布局的HTML代码编写，熟练手写标准CSS样式表，进行页面重构，能解决常见浏览器兼容问题；\n4、熟悉jQuery/YUI/ExtJS/MooTools/Prototype等至少一种JavaScript框架；\n5、熟悉HTML5、CSS3与W3C Web标准，至少了解一种后端程序语言，如net、PHP、Ruby、Python或Java等等；\n6；对表现与数据分离，html语义化等有较深刻理解者优先；\n7、工作认真细致、积极主动', '南充市嘉陵区长运咨询服务有限公司', '本公司是专注于长途客运、旅游客运、小汽车租赁、快递物流、小件货物托运、旅游咨询、汽车票、火车票、飞机票等业务的服务公司。已经开通南充直达广东、清远、花都、广州、中山、珠海、江门、东莞、深圳、惠州、汕头、揭阳、潮州、上海、福建、新疆、浙江、温州、北京、沈阳、等地的往返长途汽车票、豪华大巴、货物托运，公司以旅客的满意 就是我们生存的根基为服务宗旨，以安全、快捷、优质、高效的服务态度为南充客运、旅游行业尽一份力量！\n本公司与全国最大的长途汽车票务网“嘉陵长运全国汽车票务网”强强合作，为广大外出务工、出差的老乡提供高效、低价、优质的购票乘车服务，欢迎广大老乡登录售票平台、微信也可以购买。 现在公司花巨资成立南充市酷狗运输、酷狗网络科技、酷狗快运，打造同城快递、网络预约专车平台：可办理营运证、资格证，专车已经合法，诚邀专车服务驾驶员和车主加盟，排号……', '张', '1231231231');
INSERT INTO `recuitmentinfo` VALUES ('6', 'WEB前端开发', '3000-5000', '不限', '15', '四川省绵阳市涪城临园口', '五险一金、包住、包吃、年底双薪、周末双休、加班补助、饭补、话补、房补', '由于各地政府对科技行业持续加大的支持，未来2-3年内，整个川东地区有3-5万人的人才缺口。各大园区的成立，吸引数以千计的科技型公司，然相关企业现在传统招聘方式已经完全无法满足企业用人的需要，故本次招聘的岗位全部采用企业定制式培养，由联合《绵阳市软件行业协会》、《绵阳软件产业园》指定绵阳喻德软件快训承担人才培训输送任务。入训学员学习结束后进入相关企业或附近城市园区内企业统一安排上岗，欢迎有志进入该行业的人士及其它行业希望转岗的人士加入\n任职条件：\n1、年满十八岁，热爱互联网行业，有志于在IT行业发展；\n2、有计算机语言者优先，如：C语言、C++、Java、.Net等。\n3、具备较强的逻辑思维能力与学习能力。\n4、参加喻德教育4-6个月的实训\n5、0基础参加喻德教育测试通过方可。\n任职流程：\n1、参加测试并通过\n2、前端,php、Java、c++、安卓等基础语言学习1-3个月\n3、根据自身基础语言学习情况结合项目经理的建议选择确定方向项目实训1-3个月（可选方向：php、java、安卓、前端、UI、全栈工程师等）\n4、一经实训完毕合格，即入职相关企业签定劳动合同\n待遇：\n1、入职保证3000-4500元起，平均起始收入在4000元/月左右\n2、2-3年经验的熟手开发工程师平均年收入高于8万元。', '绵阳喻德教育信息咨询有限公司', '关于喻德\n一.	喻德教育是受多家政府机构支持的软件开发类培训机构\n1.	被《绵阳市软件产业园》授于：	《中国（绵阳）科技城软件园实训基地》\n2.	被《绵阳市软件行业协会》授于：	《绵阳市软件行业协会培训中心》\n3.	被《涪城共青团》授于：	《涪城共青团青年IT创客空间》\n二.	喻德教育是具备完全公开就业案例实力的软件开发类培训机构\n1.	是能公布全部就业案例联系方式的培训机构。\n2.	是能将就业薪资写入合同的机构（保证大学生4000起，高中生3000起）。\n3.	是能让新老学员面对面的培训机构，所有新老学员皆加入同一个群\n4.	2015部分就业案例：\n(1).	何同学，计算机专业大学生就业案例，薪资为税后8000元\n(2).	谢同学，高中生就业案例，就业于成都，薪资为6500元\n三.	喻德教育是真正具备技术实力的软件开发类培训机构\n1.	喻德专业老师远远超出职业培训参考的1:17的配备，喻德师生比是1:12。\n2.	目前喻德共配备8名5-10年以上工作经验的全职专业老师。\n3.	喻德强大的师资曾为《四川长虹》子公司作企业技术内训，是具备向企业作内部技术培训教学实力的IT/软件开发类培训机构。\n4.	喻德强大的师资导致很多其他培训机构转学喻德，甚至某机构7班和某机构的5班全员转入喻德\n四.	喻德教育是川东地区输送软件开发类人才的主力军\n1.	川东地区70%以上的新开发人员由喻德输送。也就是说：川东地区每新产生10个开发人员，便至少有7个出自喻德。\n2.	喻德输送开发人员遍布《绵阳软件产业园》、《绵阳科创园》、《高新创业中心》。很多企业的开发人员都由喻德输送，较大的几个主要由喻德学员组成技术团队的企业是：《四川环球大爱》、《四川琴山科技》、《绵阳微创科技》、《四川蓝海基业》……等。\n五.	喻德教育培训内容完整，开设课程多种，满足各内人员需求\n1.	喻德培训内容涉及：\nJava、Android、PHP、Web前端、C#、WinForms、Asp.Net、UI设计、Html5、网站设计、网站开发、APP设计、APP开发、游戏开发、游戏设计，等涵盖整个软件开发行业的技术内容。\n2.	喻德课程\n(1).	快速就业培训：\n同时教授UI设计、Web前端、及后端语言（Java或PHP或C#）三门基础，再根据学员实际情况定制课程内容。\n达到短时间内（4个余月）快速就业，而学习的知识又相对全面；并且也避免了学员因为个人入学时对行业的把握不准而选择错课程！\n(2).	全栈软件工程师培训：\n因《绵阳软件产业园》及川东地区各科技企业急需人才，由《喻德》、《绵阳软件产业园》、《绵阳市软件行业协会》企业共建《中国（绵阳）科技城软件园实训基地》而推出，以培养人才为目的而不计成本的培养全才通才的课程。\n含UI设计、Web前端、APP制作、及常用后端语言Java、PHP、C#等内容，耗时1-2年，10万行以上代码量，10个以上项目锻炼，学成后，一人可以单枪匹马胜任一般软件公司的任何常见技术岗位。\n六.	喻德教育拥有上好的硬件设施和教学环境\n1.	喻德教育在市中心甲级写字楼设置教学点。\n2.	设有10余间电脑教室，5间多媒体教室。\n3.	电脑全部采用固态硬盘、6-8G内存、飞利浦显示器。\n•	喻德关于对选择培训机构的提醒：\n1.	注意是否将“培训机构”与“大学”、“学院”混淆宣传：\n(1).	请百度“高校”、“民办高校”，“学院”，“独立学院”，“大学”的定义。\n(2).	请百度《反不正当竞争法》第3、4条的定义。\n2.	注意是否对其自身优势进行虚假宣传，如：\n(1).	号称学费底，却不敢将学费明码实价。\n(2).	号称规模大，却不能明确有多少电脑教室，有多少多媒体教室，甚至根本就没设多媒体教室。\n(3).	号称办学正规，却在80平的住宅开课。\n(4).	号称教学实力强，却不能明确有多少师资，甚至全校就一个专业老师。\n(5).	号称在校学员多，却只敢让人参观一间教室。\n(6).	号称就业口碑好，却只敢让你联系在校学员（因在校学员不清楚实际就业情况，更不清楚企业究竟是需要什么样的人才）。\n(7).	号称硬件设施好，却不能明确教学用电脑的配置，甚至连鼠标垫和耳机都不配。\n(8).	号称教学环境好，除了把外墙装修得漂亮，却找不到一间有正常窗户的教室。\n(9).	号称教学负责，却为省点电费，每天5点准时关空调，周末不开空调逼迫学员回家', '刘', '123479546');
INSERT INTO `recuitmentinfo` VALUES ('13', '前端学徒', '1000-2000', '中专', '25', '南充顺庆天赐银座13楼3号', '五险一金、包住、周末双休', '本公司诚招WEB前端及JAVA学徒\n1：实训学习期为3个月，在训期间必须遵守公司规定不得有严重违规违纪行为。\n2：学习期满之后经公司考核合格通过后即可上岗工作。\n3：上岗后保证月薪2500-6000.\n4：上班时间早9 晚5 ，周末双休 国家法定节假日统一休假。\n注：凡本公司员工均享受五险一金，应届大学专科及以上学历者还可享受国家津贴+公司补助+奖金。\n公司地址：顺庆区文化路天赐B馆中央银座013-3', '四川联创易捷网络科技有限公司', '联创易捷网络科技有限公司成立至今有着每一位员工的辛勤付出，在与公司共同发展的过程中我们愿意将自己的经验传授给新的伙伴，愿意把对事业的美好憧憬和大家分享，在这里没有沉闷的工作，也没有费心的职场规则，有的只是对技术的相互切磋，以及轻松和谐的工作学习氛围，这里就是愿意与你一同成长共同发展的联创易捷，一个能让你放纵思想，成就未来的团队！', '陈', '150826977');
INSERT INTO `recuitmentinfo` VALUES ('14', '网页设计制作学徒', '3000-5000', '不限', '2', '四川省南充市嘉陵区南虹路二段', '饭补、加班补助、话补', '设计网页，并切片。朝九晚六，单休。熟手，3000-5000。零基础，第一月从1000补助，每月根据会的程度上涨工资。', '四川金渔皮具有限公司', '公司主营广告印务，写真喷绘加工，网页设计制作，自营皮具产品', '鲁', '23468787');
INSERT INTO `recuitmentinfo` VALUES ('15', '程序员', '5000-8000', '不限', '3', '四川省南充市顺庆区滨江中路一段海润滨江', '暂无', '要求：\n1、有php网站开发经验，能够独立完成简单网站开发工作；\n2、熟练掌握css和html等 web前端修改；\n3、熟悉mysql数据库开发；\n优先：\n1、熟悉dedecms、ecshop等php开源产品二次开发者优先；\n2、在网站建设公司从事php程序员工作经验者优先；\n3、熟悉微信开发优先。\n我们尊重人才、重视人才；\n我们只看能力不看学历；\n我们在此寻求充满激情和挑战自我的优秀精英加盟；\n一经录用，我们将提供同行极具竞争力的薪资福利及完善的培训。', '南充速达网络有限公司', '我司是一家专业化从事企业网站，微信建设、运营、托管的综合服务平台企业，公司立足南充，面向西南市场。网站开发及平台运营，已经开通南充、成都、重庆、贵阳、昆明、长沙等城市。', '蒋', '26789945');
INSERT INTO `recuitmentinfo` VALUES ('16', 'HTML/CSSJS学徒', '1000', '高中', '5', '南充顺庆滨江北路一段266号南充软件园2幢106室', '包吃、年底双薪、周末双休、交通补助、加班补助、饭补、话补', '1、如果你略有一定程序基础，希望从事网页前端（HTML+JS）技术开发，可以考虑成为我们的实习生。\n2、这样你不仅可以和100万行代码的技术大牛深度探讨、还将参与开发千万级用户规模的云服务平台- 众马·云网站。\n3、成为实习生，你将获得每月1200块的薪水、午餐补贴、免费住宿（租房补贴）、综合保险、、朝九晚六、周单...对于实习生，我们提供S-900、S1200、S+1500元三个等级的待遇,另有300、600、900三个根据实力与表现的额外补贴等级。\n4、待遇不高，勉强达到自给自足，但希望这不是你选择去留的唯一标准，我们这里有最纯真的同事情谊、最原始的技术理念、最具潜力的初创产品，这些将足够让你小试牛刀并大有可为。\n5、要求很低，但首重人品、兴趣、态度，一般三个月可学至熟练水平，并可申请转为程序员，待遇将提高至3K以上。\n备注：如果基础很差，不符合实习生的要求，但是仍然希望入职我们公司，也愿意不辞辛劳的学习，那么可以接收为学徒，待遇是每月300元补助，其它同上。\n特别说明：\n做技术这一行，心浮气躁、急功近利都是不行的，投递简历时请对自己的技术水平有个客观的认识，请尽量保持谦逊的态度，下决心脚踏实地的成长！！！\n接收残疾人应聘 ( 肢体残疾 )', '南充市老虎云网络技术有限公司', '南充市老虎云网络技术有限公司\n公司由蒲成礼、蒲成良发起成立于2014年5月，注册资本100万（实收100万），同期入驻南充软件园，是南充新闻联播头条报道过的大学生创业企业；2015年度总收入约40万，现有员工22人，其中全职18人、大专以上学历19人；拥有6项软件著作权，众马、YunMOK等2项商标权；自主知识产权的云模块系统，发布一年多，下载量超14万人次，独立IP用户2.5万余人。\n公司致力于云网站技术的开发与应用，提供通用、极致、廉价的网站创建与管理服务，愿景是成长为一站式网络技术应用服务（SaaS）平台，做一个响当当的南充造互联网品牌！\n\n主要产品：\n1、2014年12月12日，发布云模块V1.0（yunmok.com），自主开发，独立知识产权，采用“模块化引擎驱动”，是国内第一款支持跨行业网站应用的CMS系统，可以帮助用户快速创建一个可视化、拖拽、无技术的多终端网站。\n2、2015年4月，与成都西部数码公司进行OEM合作，推出了公司自有品牌的云服务产品—众马•云计算（yunmos.com）。\n3、2016年7月22日，众马云网站（zm345.com）正式上线', '蒲', '567896434');

-- ----------------------------
-- Table structure for resumebank
-- ----------------------------
DROP TABLE IF EXISTS `resumebank`;
CREATE TABLE `resumebank` (
  `resumeid` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) NOT NULL,
  `username` varchar(255) NOT NULL,
  `nickname` varchar(255) NOT NULL,
  `birthagemonth` time NOT NULL,
  `sex` varchar(255) NOT NULL,
  `tel` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `image` blob NOT NULL,
  `intension` varchar(255) NOT NULL,
  `skill` text,
  `projectexprience` text,
  `workexperience` text,
  `educationexperience` text,
  `selfevaluation` text NOT NULL,
  `awards` text NOT NULL,
  PRIMARY KEY (`resumeid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of resumebank
-- ----------------------------

-- ----------------------------
-- Table structure for shequ
-- ----------------------------
DROP TABLE IF EXISTS `shequ`;
CREATE TABLE `shequ` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `browse` int(11) DEFAULT NULL,
  `laud` int(11) DEFAULT NULL,
  `reply` int(11) DEFAULT NULL,
  `time` date DEFAULT NULL,
  `smallname` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `picture` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of shequ
-- ----------------------------
INSERT INTO `shequ` VALUES ('1', '12', '45', '8', '2017-04-19', '笑笑', '阿里实习研发岗位', 'tx/tx1.jpg');
INSERT INTO `shequ` VALUES ('2', '12', '78', '45', '2017-04-08', '萌萌妹儿', '前端的程序员', 'tx/tx1.jpg');
INSERT INTO `shequ` VALUES ('3', '23', '56', '12', '2017-04-08', '24K纯男人', '前端程序猿', 'tx/tx2.jpg');
INSERT INTO `shequ` VALUES ('4', '34', '2', '32', '2017-03-28', '3', '23', 'tx/tx6.jpg');
INSERT INTO `shequ` VALUES ('5', '45', '43', '4', '2017-04-09', 'ff', 'eh', 'tx/tx4.jpg');
INSERT INTO `shequ` VALUES ('6', '78', '38', '9', '2017-04-08', '逗逗', '前端的逗逼', 'tx/tx3.jpg');
INSERT INTO `shequ` VALUES ('7', '3343', '342', '3', '2017-04-04', 'af', 'eh', 'tx/tx5.jpg');

-- ----------------------------
-- Table structure for userinfo
-- ----------------------------
DROP TABLE IF EXISTS `userinfo`;
CREATE TABLE `userinfo` (
  `userid` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `address` varchar(255) NOT NULL,
  `sex` varchar(255) DEFAULT NULL,
  `userhight` double(255,0) DEFAULT NULL,
  `userwehight` double(255,0) DEFAULT NULL,
  `userface` text,
  `audio` text,
  `photo` text,
  `share` text,
  PRIMARY KEY (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of userinfo
-- ----------------------------
INSERT INTO `userinfo` VALUES ('1', '小D', '159753', '1774554727@qq.com', '四川省广安市广安区城北', '女', '165', '55', '', '', '', '');
INSERT INTO `userinfo` VALUES ('2', '糖，好苦', '123456', '543347060@qq.com', '四川省成都市郫县', '女', '159', '44', 'C:\\fakepath\\屏幕截图.jpg', '', '', '');
INSERT INTO `userinfo` VALUES ('3', '我就是拽', '456789', '1334329889@qq.com', '重庆市开州', '女', '170', '62', '', '', '', '');
INSERT INTO `userinfo` VALUES ('4', 'Mystery', '789456', '318317460@qq.com', '四川省达州市万源', '女', '160', '46', '', '', '', '');
INSERT INTO `userinfo` VALUES ('5', '我是一条鱼', '456123', '245397048@qq.com', '四川省达州市万源', '女', '160', '42', '', '', '', '');
INSERT INTO `userinfo` VALUES ('6', '掌心手背', '13795997657', '353358519@qq.com', '四川省宜宾市珙县', '女', '162', '50', '', '', '', '');
INSERT INTO `userinfo` VALUES ('7', 'lemon', 'lemon2', '3036419330@qq.com', '四川省绵阳市三台', '女', '165', '60', '', '', '', '');
INSERT INTO `userinfo` VALUES ('8', '小七', 'seven', '342553046@qq.com', '四川省达州市', '女', '166', '59', '', '', '', '');
INSERT INTO `userinfo` VALUES ('9', '落花', '369852147', '1536801715@qq.com', '四川省绵阳市三台县', '女', '163', '45', '', '', '', '');
INSERT INTO `userinfo` VALUES ('10', 'LD天然淡雅香', 'LDLDLD123456', '9634329889@qq.com', '四川省自贡市', '女', '160', '50', '', '', '', '');
INSERT INTO `userinfo` VALUES ('11', '小勤调', 'fanxiaoqin', '1366022047@qq.com', '重庆市万州', '女', '160', '52', null, null, null, null);

-- ----------------------------
-- Table structure for usertestrecord
-- ----------------------------
DROP TABLE IF EXISTS `usertestrecord`;
CREATE TABLE `usertestrecord` (
  `testrecodid` int(11) NOT NULL AUTO_INCREMENT,
  `userid` int(11) NOT NULL,
  `allscore` int(11) NOT NULL,
  `begintime` datetime NOT NULL,
  `endtime` datetime NOT NULL,
  `alltime` datetime NOT NULL,
  `testrecodvalid` tinyint(1) NOT NULL,
  `interesting` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`testrecodid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of usertestrecord
-- ----------------------------
