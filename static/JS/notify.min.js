(function(e) {
    typeof define == "function" && define.amd ? define(["jquery"], e) : typeof module == "object" && module.exports ? module.exports = function(t, n) {
        return n === undefined && (typeof window != "undefined" ? n = require("jquery") : n = require("jquery")(t)),
            e(n),
            n
    } : e(jQuery)
})(function(e) {
    function L(t, n, i) {
        typeof i == "string" && (i = {
                className: i
            }),
            this.options = w(b, e.isPlainObject(i) ? i : {}),
            this.loadHTML(),
            this.wrapper = e(h.html),
            this.options.clickToHide && this.wrapper.addClass(r + "-hidable"),
            this.wrapper.data(r, this),
            this.arrow = this.wrapper.find("." + r + "-arrow"),
            this.container = this.wrapper.find("." + r + "-container"),
            this.container.append(this.userContainer),
            t && t.length && (this.elementType = t.attr("type"),
                this.originalElement = t,
                this.elem = T(t),
                this.elem.data(r, this),
                this.elem.before(this.wrapper)),
            this.container.hide(),
            this.run(n)
    }
    var t = [].indexOf || function(e) {
            for (var t = 0, n = this.length; t < n; t++)
                if (t in this && this[t] === e)
                    return t;
            return -1
        },
        n = "notify",
        r = n + "js",
        i = n + "!blank",
        s = {
            t: "top",
            m: "middle",
            b: "bottom",
            l: "left",
            c: "center",
            r: "right"
        },
        o = ["l", "c", "r"],
        u = ["t", "m", "b"],
        a = ["t", "b", "l", "r"],
        f = {
            t: "b",
            m: null,
            b: "t",
            l: "r",
            c: null,
            r: "l"
        },
        l = function(t) {
            var n;
            return n = [],
                e.each(t.split(/\W+/), function(e, t) {
                    var r;
                    r = t.toLowerCase().charAt(0);
                    if (s[r])
                        return n.push(r)
                }),
                n
        },
        c = {},
        h = {
            name: "core",
            html: '<div class="' + r + '-wrapper">\n	<div class="' + r + '-arrow"></div>\n	<div class="' + r + '-container"></div>\n</div>',
            css: "." + r + "-corner {\n	position: fixed;\n	margin: 5px;\n	z-index: 1050;\n}\n\n." + r + "-corner ." + r + "-wrapper,\n." + r + "-corner ." + r + "-container {\n	position: relative;\n	display: block;\n	height: inherit;\n	width: inherit;\n	margin: 3px;\n}\n\n." + r + "-wrapper {\n	z-index: 1;\n	position: absolute;\n	display: inline-block;\n	height: 0;\n	width: 0;\n}\n\n." + r + "-container {\n	display: none;\n	z-index: 1;\n	position: absolute;\n}\n\n." + r + "-hidable {\n	cursor: pointer;\n}\n\n[data-notify-text],[data-notify-html] {\n	position: relative;\n}\n\n." + r + "-arrow {\n	position: absolute;\n	z-index: 2;\n	width: 0;\n	height: 0;\n}"
        },
        p = {
            "border-radius": ["-webkit-", "-moz-"]
        },
        d = function(e) {
            return c[e]
        },
        v = function(t, i) {
            if (!t)
                throw "Missing Style name";
            if (!i)
                throw "Missing Style definition";
            if (!i.html)
                throw "Missing Style HTML";
            var s = c[t];
            s && s.cssElem && (window.console && console.warn(n + ": overwriting style '" + t + "'"),
                    c[t].cssElem.remove()),
                i.name = t,
                c[t] = i;
            var o = "";
            i.classes && e.each(i.classes, function(t, n) {
                    return o += "." + r + "-" + i.name + "-" + t + " {\n",
                        e.each(n, function(t, n) {
                            return p[t] && e.each(p[t], function(e, r) {
                                    return o += "	" + r + t + ": " + n + ";\n"
                                }),
                                o += "	" + t + ": " + n + ";\n"
                        }),
                        o += "}\n"
                }),
                i.css && (o += "/* styles for " + i.name + " */\n" + i.css),
                o && (i.cssElem = m(o),
                    i.cssElem.attr("id", "notify-" + i.name));
            var u = {},
                a = e(i.html);
            g("html", a, u),
                g("text", a, u),
                i.fields = u
        },
        m = function(t) {
            var n, r, i;
            r = S("style"),
                r.attr("type", "text/css"),
                e("head").append(r);
            try {
                r.html(t)
            } catch (s) {
                r[0].styleSheet.cssText = t
            }
            return r
        },
        g = function(t, n, r) {
            var s;
            return t !== "html" && (t = "text"),
                s = "data-notify-" + t,
                y(n, "[" + s + "]").each(function() {
                    var n;
                    n = e(this).attr(s),
                        n || (n = i),
                        r[n] = t
                })
        },
        y = function(e, t) {
            return e.is(t) ? e : e.find(t)
        },
        b = {
            clickToHide: !0,
            autoHide: !0,
            autoHideDelay: 5e3,
            arrowShow: !0,
            arrowSize: 5,
            breakNewLines: !0,
            elementPosition: "bottom",
            globalPosition: "top right",
            style: "bootstrap",
            className: "error",
            showAnimation: "slideDown",
            showDuration: 400,
            hideAnimation: "slideUp",
            hideDuration: 200,
            gap: 5
        },
        w = function(t, n) {
            var r;
            return r = function() {},
                r.prototype = t,
                e.extend(!0, new r, n)
        },
        E = function(t) {
            return e.extend(b, t)
        },
        S = function(t) {
            return e("<" + t + "></" + t + ">")
        },
        x = {},
        T = function(t) {
            var n;
            return t.is("[type=radio]") && (n = t.parents("form:first").find("[type=radio]").filter(function(n, r) {
                        return e(r).attr("name") === t.attr("name")
                    }),
                    t = n.first()),
                t
        },
        N = function(e, t, n) {
            var r, i;
            if (typeof n == "string")
                n = parseInt(n, 10);
            else if (typeof n != "number")
                return;
            if (isNaN(n))
                return;
            return r = s[f[t.charAt(0)]],
                i = t,
                e[r] !== undefined && (t = s[r.charAt(0)],
                    n = -n),
                e[t] === undefined ? e[t] = n : e[t] += n,
                null
        },
        C = function(e, t, n) {
            if (e === "l" || e === "t")
                return 0;
            if (e === "c" || e === "m")
                return n / 2 - t / 2;
            if (e === "r" || e === "b")
                return n - t;
            throw "Invalid alignment"
        },
        k = function(e) {
            return k.e = k.e || S("div"),
                k.e.text(e).html()
        };
    L.prototype.loadHTML = function() {
            var t;
            t = this.getStyle(),
                this.userContainer = e(t.html),
                this.userFields = t.fields
        },
        L.prototype.show = function(e, t) {
            var n, r, i, s, o;
            r = function(n) {
                    return function() {
                        !e && !n.elem && n.destroy();
                        if (t)
                            return t()
                    }
                }(this),
                o = this.container.parent().parents(":hidden").length > 0,
                i = this.container.add(this.arrow),
                n = [];
            if (o && e)
                s = "show";
            else if (o && !e)
                s = "hide";
            else if (!o && e)
                s = this.options.showAnimation,
                n.push(this.options.showDuration);
            else {
                if (!!o || !!e)
                    return r();
                s = this.options.hideAnimation,
                    n.push(this.options.hideDuration)
            }
            return n.push(r),
                i[s].apply(i, n)
        },
        L.prototype.setGlobalPosition = function() {
            var t = this.getPosition(),
                n = t[0],
                i = t[1],
                o = s[n],
                u = s[i],
                a = n + "|" + i,
                f = x[a];
            if (!f) {
                f = x[a] = S("div");
                var l = {};
                l[o] = 0,
                    u === "middle" ? l.top = "45%" : u === "center" ? l.left = "45%" : l[u] = 0,
                    f.css(l).addClass(r + "-corner"),
                    e("body").append(f)
            }
            return f.prepend(this.wrapper)
        },
        L.prototype.setElementPosition = function() {
            var n, r, i, l, c, h, p, d, v, m, g, y, b, w, E, S, x, T, k, L, A, O, M, _, D, P, H, B, j;
            H = this.getPosition(),
                _ = H[0],
                O = H[1],
                M = H[2],
                g = this.elem.position(),
                d = this.elem.outerHeight(),
                y = this.elem.outerWidth(),
                v = this.elem.innerHeight(),
                m = this.elem.innerWidth(),
                j = this.wrapper.position(),
                c = this.container.height(),
                h = this.container.width(),
                T = s[_],
                L = f[_],
                A = s[L],
                p = {},
                p[A] = _ === "b" ? d : _ === "r" ? y : 0,
                N(p, "top", g.top - j.top),
                N(p, "left", g.left - j.left),
                B = ["top", "left"];
            for (w = 0,
                S = B.length; w < S; w++)
                D = B[w],
                k = parseInt(this.elem.css("margin-" + D), 10),
                k && N(p, D, k);
            b = Math.max(0, this.options.gap - (this.options.arrowShow ? i : 0)),
                N(p, A, b);
            if (!this.options.arrowShow)
                this.arrow.hide();
            else {
                i = this.options.arrowSize,
                    r = e.extend({}, p),
                    n = this.userContainer.css("border-color") || this.userContainer.css("border-top-color") || this.userContainer.css("background-color") || "white";
                for (E = 0,
                    x = a.length; E < x; E++) {
                    D = a[E],
                        P = s[D];
                    if (D === L)
                        continue;
                    l = P === T ? n : "transparent",
                        r["border-" + P] = i + "px solid " + l
                }
                N(p, s[L], i),
                    t.call(a, O) >= 0 && N(r, s[O], i * 2)
            }
            t.call(u, _) >= 0 ? (N(p, "left", C(O, h, y)),
                    r && N(r, "left", C(O, i, m))) : t.call(o, _) >= 0 && (N(p, "top", C(O, c, d)),
                    r && N(r, "top", C(O, i, v))),
                this.container.is(":visible") && (p.display = "block"),
                this.container.removeAttr("style").css(p);
            if (r)
                return this.arrow.removeAttr("style").css(r)
        },
        L.prototype.getPosition = function() {
            var e, n, r, i, s, f, c, h;
            h = this.options.position || (this.elem ? this.options.elementPosition : this.options.globalPosition),
                e = l(h),
                e.length === 0 && (e[0] = "b");
            if (n = e[0],
                t.call(a, n) < 0)
                throw "Must be one of [" + a + "]";
            if (e.length === 1 || (r = e[0],
                    t.call(u, r) >= 0) && (i = e[1],
                    t.call(o, i) < 0) || (s = e[0],
                    t.call(o, s) >= 0) && (f = e[1],
                    t.call(u, f) < 0))
                e[1] = (c = e[0],
                    t.call(o, c) >= 0) ? "m" : "l";
            return e.length === 2 && (e[2] = e[1]),
                e
        },
        L.prototype.getStyle = function(e) {
            var t;
            e || (e = this.options.style),
                e || (e = "default"),
                t = c[e];
            if (!t)
                throw "Missing style: " + e;
            return t
        },
        L.prototype.updateClasses = function() {
            var t, n;
            return t = ["base"],
                e.isArray(this.options.className) ? t = t.concat(this.options.className) : this.options.className && t.push(this.options.className),
                n = this.getStyle(),
                t = e.map(t, function(e) {
                    return r + "-" + n.name + "-" + e
                }).join(" "),
                this.userContainer.attr("class", t)
        },
        L.prototype.run = function(t, n) {
            var r, s, o, u, a;
            e.isPlainObject(n) ? e.extend(this.options, n) : e.type(n) === "string" && (this.options.className = n);
            if (this.container && !t) {
                this.show(!1);
                return
            }
            if (!this.container && !t)
                return;
            s = {},
                e.isPlainObject(t) ? s = t : s[i] = t;
            for (o in s) {
                r = s[o],
                    u = this.userFields[o];
                if (!u)
                    continue;
                u === "text" && (r = k(r),
                        this.options.breakNewLines && (r = r.replace(/\n/g, "<br/>"))),
                    a = o === i ? "" : "=" + o,
                    y(this.userContainer, "[data-notify-" + u + a + "]").html(r)
            }
            this.updateClasses(),
                this.elem ? this.setElementPosition() : this.setGlobalPosition(),
                this.show(!0),
                this.options.autoHide && (clearTimeout(this.autohideTimer),
                    this.autohideTimer = setTimeout(this.show.bind(this, !1), this.options.autoHideDelay))
        },
        L.prototype.destroy = function() {
            this.wrapper.data(r, null),
                this.wrapper.remove()
        },
        e[n] = function(t, r, i) {
            return t && t.nodeName || t.jquery ? e(t)[n](r, i) : (i = r,
                    r = t,
                    new L(null, r, i)),
                t
        },
        e.fn[n] = function(t, n) {
            return e(this).each(function() {
                    var i = T(e(this)).data(r);
                    i && i.destroy();
                    var s = new L(e(this), t, n)
                }),
                this
        },
        e.extend(e[n], {
            defaults: E,
            addStyle: v,
            pluginOptions: b,
            getStyle: d,
            insertCSS: m
        }),
        v("bootstrap", {
            html: "<div>\n<span data-notify-text></span>\n</div>",
            classes: {
                base: {
                    "padding": "15px",
                    "margin-bottom": "20px",
                    "border": "1px solid transparent",
                    "border-radius": "4px",
                    "text-align": "center"
                },
                error: {
                    "color": "#E9EDEF",
                    "background-color": "rgba(231,76,60,0.88)",
                    "border-color": "rgba(231,76,60,0.88)"
                },
                success: {
                    "color": "#ffffff",
                    "background-color": "rgba(38,185,154,0.88)",
                    "border-color": "rgba(38,185,154,0.88)"
                },
                info: {
                    "color": "#E9EDEF",
                    "background-color": "rgba(52,152,219,0.88)",
                    "border-color": "rgba(52,152,219,0.88)"
                },
                warn: {
                    "color": "#E9EDEF",
                    "background-color": "rgba(243,156,18,0.88)",
                    "border-color": "rgba(243, 156, 18, 0.88)"
                }
            }
        }),
        e(function() {
            m(h.css).attr("id", "core-notify"),
                e(document).on("click", "." + r + "-hidable", function(t) {
                    e(this).trigger("notify-hide")
                }),
                e(document).on("notify-hide", "." + r + "-wrapper", function(t) {
                    var n = e(this).data(r);
                    n && n.show(!1)
                })
        })
})